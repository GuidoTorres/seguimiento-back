var DataTypes = require("sequelize").DataTypes;
var _ACT_PROY_NOMBRE_FASE = require("./ACT_PROY_NOMBRE_FASE");
var _ACUM_X_UBIGEO_DISP_LEGAL = require("./ACUM_X_UBIGEO_DISP_LEGAL");
var _Act_Proy = require("./Act_Proy");
var _Act_Proy_Nombre = require("./Act_Proy_Nombre");
var _Acumulado = require("./Acumulado");
var _BANCO_CUENTA = require("./BANCO_CUENTA");
var _Banco = require("./Banco");
var _CARGA_ARCHIVOS = require("./CARGA_ARCHIVOS");
var _CARGA_ARCHIVOS_DET = require("./CARGA_ARCHIVOS_DET");
var _CATALOGO_ALIAS = require("./CATALOGO_ALIAS");
var _CATALOGO_BIEN_SERV = require("./CATALOGO_BIEN_SERV");
var _CATALOGO_BIEN_SERV_BK_III = require("./CATALOGO_BIEN_SERV_BK_III");
var _CATALOGO_BIEN_SERV_ORIGINAL = require("./CATALOGO_BIEN_SERV_ORIGINAL");
var _CATALOGO_EQUIVALENCIA_127 = require("./CATALOGO_EQUIVALENCIA_127");
var _CATALOGO_EQUIVALENCIA_146 = require("./CATALOGO_EQUIVALENCIA_146");
var _CATEGORIA_CIIU = require("./CATEGORIA_CIIU");
var _COMPONENTE_NOMBRE_FASE = require("./COMPONENTE_NOMBRE_FASE");
var _CONTROL_TRANSACCION = require("./CONTROL_TRANSACCION");
var _CONTROL_TRANSACCION_DESTINO = require("./CONTROL_TRANSACCION_DESTINO");
var _CONTROL_TRANSACCION_DETALLE = require("./CONTROL_TRANSACCION_DETALLE");
var _Categoria_Gasto = require("./Categoria_Gasto");
var _Componente = require("./Componente");
var _Componente_Ejec = require("./Componente_Ejec");
var _Componente_Nombre = require("./Componente_Nombre");
var _DISPOSITIVOS_LEGALES = require("./DISPOSITIVOS_LEGALES");
var _EQUIVALENCIA_META = require("./EQUIVALENCIA_META");
var _ESTRATEGIA_NACIONAL = require("./ESTRATEGIA_NACIONAL");
var _ESTRATEGIA_NACIONAL_EJEC = require("./ESTRATEGIA_NACIONAL_EJEC");
var _ESTRATEGIA_NACIONAL_NOMBRE = require("./ESTRATEGIA_NACIONAL_NOMBRE");
var _ESTRATEGIA_NACIONAL_TMP = require("./ESTRATEGIA_NACIONAL_TMP");
var _FERIADO = require("./FERIADO");
var _FINALIDAD_FASE = require("./FINALIDAD_FASE");
var _FUENTE_FINANC_AGREGADA = require("./FUENTE_FINANC_AGREGADA");
var _FUNCION_AMBITO = require("./FUNCION_AMBITO");
var _FUNCION_FASE = require("./FUNCION_FASE");
var _Finalidad = require("./Finalidad");
var _Fuente_Financ = require("./Fuente_Financ");
var _Fuente_Financ_Ejec = require("./Fuente_Financ_Ejec");
var _Funcion = require("./Funcion");
var _GRUPO_CIIU = require("./GRUPO_CIIU");
var _Grupo_Gasto = require("./Grupo_Gasto");
var _Hoja1 = require("./Hoja1");
var _Hoja2 = require("./Hoja2");
var _INTF_CAB = require("./INTF_CAB");
var _INTF_CAB_RET = require("./INTF_CAB_RET");
var _INTF_DET = require("./INTF_DET");
var _INTF_LOG = require("./INTF_LOG");
var _INTF_NOT = require("./INTF_NOT");
var _LOG_TIPOS_TRANSMISIONES = require("./LOG_TIPOS_TRANSMISIONES");
var _LOG_TRANSFERENCIA = require("./LOG_TRANSFERENCIA");
var _MARCA = require("./MARCA");
var _MCONVPRO = require("./MCONVPRO");
var _META_PRIORIZADA_PCA_X_CLASIF = require("./META_PRIORIZADA_PCA_X_CLASIF");
var _MMEDICAM = require("./MMEDICAM");
var _MPP_PCA_X_ESPECIFICA = require("./MPP_PCA_X_ESPECIFICA");
var _MPP_PCA_X_GENERICA = require("./MPP_PCA_X_GENERICA");
var _MP_CENTRO_COSTO = require("./MP_CENTRO_COSTO");
var _MP_COLOR = require("./MP_COLOR");
var _MP_CONDICION = require("./MP_CONDICION");
var _MP_ESTADO = require("./MP_ESTADO");
var _MP_INVENTARIO_EXPORT = require("./MP_INVENTARIO_EXPORT");
var _MP_INVENTARIO_IMPORT = require("./MP_INVENTARIO_IMPORT");
var _MP_MARCA = require("./MP_MARCA");
var _MP_MODELO = require("./MP_MODELO");
var _MP_UBICACION = require("./MP_UBICACION");
var _MP_USUARIO = require("./MP_USUARIO");
var _Maestro_Documento = require("./Maestro_Documento");
var _Origen = require("./Origen");
var _PLAN_CTB_MAYOR = require("./PLAN_CTB_MAYOR");
var _PLAN_CTB_SUB_CTA = require("./PLAN_CTB_SUB_CTA");
var _PROGRAMA_NOMBRE_FASE = require("./PROGRAMA_NOMBRE_FASE");
var _PROGRAMA_PPTO = require("./PROGRAMA_PPTO");
var _Persona = require("./Persona");
var _Programa = require("./Programa");
var _Programa_Nombre = require("./Programa_Nombre");
var _SECCION_CIIU = require("./SECCION_CIIU");
var _SEG_APLICACION = require("./SEG_APLICACION");
var _SEG_AUDITORIA = require("./SEG_AUDITORIA");
var _SEG_HISTORICO_PWD = require("./SEG_HISTORICO_PWD");
var _SEG_MODULO = require("./SEG_MODULO");
var _SEG_OPCION = require("./SEG_OPCION");
var _SEG_PAGINA = require("./SEG_PAGINA");
var _SEG_POLITICA = require("./SEG_POLITICA");
var _SEG_PRIVILEGIO = require("./SEG_PRIVILEGIO");
var _SEG_ROL = require("./SEG_ROL");
var _SEG_ROL_APLICACION = require("./SEG_ROL_APLICACION");
var _SEG_ROL_PAGINA = require("./SEG_ROL_PAGINA");
var _SEG_ROL_PAGINA_PRIVILEGIO = require("./SEG_ROL_PAGINA_PRIVILEGIO");
var _SEG_ROL_USUARIO = require("./SEG_ROL_USUARIO");
var _SEG_TIPO_AUDITORIA = require("./SEG_TIPO_AUDITORIA");
var _SEG_USUARIO = require("./SEG_USUARIO");
var _SGE_ADQUISICIONES = require("./SGE_ADQUISICIONES");
var _SGE_ADQUISICIONES_EXP = require("./SGE_ADQUISICIONES_EXP");
var _SGE_ADQUISICIONES_TRX = require("./SGE_ADQUISICIONES_TRX");
var _SGE_CONTRATISTAS_TRX = require("./SGE_CONTRATISTAS_TRX");
var _SGE_KARDEX_MENSUAL = require("./SGE_KARDEX_MENSUAL");
var _SGE_KARDEX_MENSUAL_EXP = require("./SGE_KARDEX_MENSUAL_EXP");
var _SGE_KARDEX_MENSUAL_TRX = require("./SGE_KARDEX_MENSUAL_TRX");
var _SGE_PAAC_MENSUAL = require("./SGE_PAAC_MENSUAL");
var _SGE_PAAC_MENSUAL_EXP = require("./SGE_PAAC_MENSUAL_EXP");
var _SGE_PAAC_MENSUAL_TRX = require("./SGE_PAAC_MENSUAL_TRX");
var _SGE_PATRIMONIO = require("./SGE_PATRIMONIO");
var _SGE_PATRIMONIO_EXP = require("./SGE_PATRIMONIO_EXP");
var _SGE_PATRIMONIO_TRX = require("./SGE_PATRIMONIO_TRX");
var _SIG_ACUMULADO_DET = require("./SIG_ACUMULADO_DET");
var _SIG_AJUSTE_POSTERIOR = require("./SIG_AJUSTE_POSTERIOR");
var _SIG_ALMACEN = require("./SIG_ALMACEN");
var _SIG_ALMACEN_CUF = require("./SIG_ALMACEN_CUF");
var _SIG_ASIENTO_CUENTA_REGISTRO = require("./SIG_ASIENTO_CUENTA_REGISTRO");
var _SIG_ASIGNACIONES = require("./SIG_ASIGNACIONES");
var _SIG_ASIGNACIONES_BD = require("./SIG_ASIGNACIONES_BD");
var _SIG_AUDITORIA = require("./SIG_AUDITORIA");
var _SIG_BIENES_DURADEROS = require("./SIG_BIENES_DURADEROS");
var _SIG_CAB_DISTRIBUCION = require("./SIG_CAB_DISTRIBUCION");
var _SIG_CARGO = require("./SIG_CARGO");
var _SIG_CATALOGO_BIEN_SERV_AGRU = require("./SIG_CATALOGO_BIEN_SERV_AGRU");
var _SIG_CATALOGO_BIEN_SERV_ALTERNO = require("./SIG_CATALOGO_BIEN_SERV_ALTERNO");
var _SIG_CATALOGO_BIEN_SERV_EQUI = require("./SIG_CATALOGO_BIEN_SERV_EQUI");
var _SIG_CATALOGO_BIEN_SERV_PRECIO = require("./SIG_CATALOGO_BIEN_SERV_PRECIO");
var _SIG_CATALOGO_BIEN_SERV_UNIDAD = require("./SIG_CATALOGO_BIEN_SERV_UNIDAD");
var _SIG_CATALOGO_COMPONENTES = require("./SIG_CATALOGO_COMPONENTES");
var _SIG_CATALOGO_EQUI_ADQUIS = require("./SIG_CATALOGO_EQUI_ADQUIS");
var _SIG_CATALOGO_ONU = require("./SIG_CATALOGO_ONU");
var _SIG_CATALOGO_PRESENTACION = require("./SIG_CATALOGO_PRESENTACION");
var _SIG_CATALOGO_RUBRO = require("./SIG_CATALOGO_RUBRO");
var _SIG_CATALOGO_RUBRO_X_ITEM = require("./SIG_CATALOGO_RUBRO_X_ITEM");
var _SIG_CATALOGO_SECTOR = require("./SIG_CATALOGO_SECTOR");
var _SIG_CATALOGO_UNIDAD_EJECUTORA = require("./SIG_CATALOGO_UNIDAD_EJECUTORA");
var _SIG_CATEGORIA_OCUPACIONAL = require("./SIG_CATEGORIA_OCUPACIONAL");
var _SIG_CATEGORIA_TIPO_PATRIMONIO = require("./SIG_CATEGORIA_TIPO_PATRIMONIO");
var _SIG_CAT_BIEN_SERV_EQUI_PAO = require("./SIG_CAT_BIEN_SERV_EQUI_PAO");
var _SIG_CAT_BIEN_SERV_PRECIO_FASE = require("./SIG_CAT_BIEN_SERV_PRECIO_FASE");
var _SIG_CAT_BIEN_SERV_PRECIO_PROC = require("./SIG_CAT_BIEN_SERV_PRECIO_PROC");
var _SIG_CAUSAL_ALTA = require("./SIG_CAUSAL_ALTA");
var _SIG_CAUSAL_BAJA = require("./SIG_CAUSAL_BAJA");
var _SIG_CENTRO_COSTO = require("./SIG_CENTRO_COSTO");
var _SIG_CENTRO_COSTO_BK_III = require("./SIG_CENTRO_COSTO_BK_III");
var _SIG_CENTRO_COSTO_PERSONAL = require("./SIG_CENTRO_COSTO_PERSONAL");
var _SIG_CERTIFICACION = require("./SIG_CERTIFICACION");
var _SIG_CERTIFICACION_DEPE = require("./SIG_CERTIFICACION_DEPE");
var _SIG_CERTIFICACION_DOC = require("./SIG_CERTIFICACION_DOC");
var _SIG_CERTIFICACION_DOC_SEC = require("./SIG_CERTIFICACION_DOC_SEC");
var _SIG_CERTIFICACION_FASE = require("./SIG_CERTIFICACION_FASE");
var _SIG_CERTIFICACION_MOV = require("./SIG_CERTIFICACION_MOV");
var _SIG_CERTIFICACION_OPERACION = require("./SIG_CERTIFICACION_OPERACION");
var _SIG_CERTIFICACION_OPER_FUENTE = require("./SIG_CERTIFICACION_OPER_FUENTE");
var _SIG_CERTIFICACION_PPTO = require("./SIG_CERTIFICACION_PPTO");
var _SIG_CLASE_ATRIBUTO = require("./SIG_CLASE_ATRIBUTO");
var _SIG_CLASIFICADOR_GASTO = require("./SIG_CLASIFICADOR_GASTO");
var _SIG_COLORES = require("./SIG_COLORES");
var _SIG_COMITE = require("./SIG_COMITE");
var _SIG_COMITE_INTEGRANTE = require("./SIG_COMITE_INTEGRANTE");
var _SIG_COMPONENTES_ACTIVO = require("./SIG_COMPONENTES_ACTIVO");
var _SIG_CONCEPTO_FAMILIA = require("./SIG_CONCEPTO_FAMILIA");
var _SIG_CONCEPTO_FAMILIA_EJECUTORA = require("./SIG_CONCEPTO_FAMILIA_EJECUTORA");
var _SIG_CONCEPTO_GASTO = require("./SIG_CONCEPTO_GASTO");
var _SIG_CONCEPTO_GASTO_CTA = require("./SIG_CONCEPTO_GASTO_CTA");
var _SIG_CONCEPTO_MAESTRO = require("./SIG_CONCEPTO_MAESTRO");
var _SIG_CONCESIONES = require("./SIG_CONCESIONES");
var _SIG_CONSORCIOS = require("./SIG_CONSORCIOS");
var _SIG_CONSORCIOS_DET = require("./SIG_CONSORCIOS_DET");
var _SIG_CONSTRUCCIONES = require("./SIG_CONSTRUCCIONES");
var _SIG_CONSTRUCCIONES_DET = require("./SIG_CONSTRUCCIONES_DET");
var _SIG_CONSTRUCCIONES_MOVIMTO = require("./SIG_CONSTRUCCIONES_MOVIMTO");
var _SIG_CONTRATISTAS = require("./SIG_CONTRATISTAS");
var _SIG_CONTRATISTAS_BIEN_SERV = require("./SIG_CONTRATISTAS_BIEN_SERV");
var _SIG_CONTRATISTA_RNP = require("./SIG_CONTRATISTA_RNP");
var _SIG_CONTRATOS = require("./SIG_CONTRATOS");
var _SIG_CONTRATO_DET = require("./SIG_CONTRATO_DET");
var _SIG_CONTRATO_DET_DEPE = require("./SIG_CONTRATO_DET_DEPE");
var _SIG_CONTRATO_DET_PPTAL = require("./SIG_CONTRATO_DET_PPTAL");
var _SIG_CONTRATO_DOCUMENTO = require("./SIG_CONTRATO_DOCUMENTO");
var _SIG_CONTRATO_GARANTIA_MOV = require("./SIG_CONTRATO_GARANTIA_MOV");
var _SIG_CONTRATO_INTERFASE = require("./SIG_CONTRATO_INTERFASE");
var _SIG_CONTRATO_ITEM = require("./SIG_CONTRATO_ITEM");
var _SIG_CONTRATO_ITEM_DETALLE = require("./SIG_CONTRATO_ITEM_DETALLE");
var _SIG_CONTRATO_ITEM_DIST = require("./SIG_CONTRATO_ITEM_DIST");
var _SIG_CONTRATO_ITEM_DIST_CC = require("./SIG_CONTRATO_ITEM_DIST_CC");
var _SIG_CONTRATO_ITEM_MENSUAL = require("./SIG_CONTRATO_ITEM_MENSUAL");
var _SIG_CONTRATO_ITEM_MENS_DEPE = require("./SIG_CONTRATO_ITEM_MENS_DEPE");
var _SIG_CONTRATO_ITEM_MENS_PED = require("./SIG_CONTRATO_ITEM_MENS_PED");
var _SIG_CONTRATO_ITEM_MENS_PPTAL = require("./SIG_CONTRATO_ITEM_MENS_PPTAL");
var _SIG_CONTRATO_ITEM_PPTAL = require("./SIG_CONTRATO_ITEM_PPTAL");
var _SIG_CONTRATO_ITEM_SECUENCIA = require("./SIG_CONTRATO_ITEM_SECUENCIA");
var _SIG_CONTRATO_LOTE = require("./SIG_CONTRATO_LOTE");
var _SIG_CONTRATO_MOVIMIENTO = require("./SIG_CONTRATO_MOVIMIENTO");
var _SIG_CONTRATO_MOVIM_ITEM = require("./SIG_CONTRATO_MOVIM_ITEM");
var _SIG_CONTRATO_MOVIM_PAGO = require("./SIG_CONTRATO_MOVIM_PAGO");
var _SIG_CONTRATO_MOVITEM_PPTAL = require("./SIG_CONTRATO_MOVITEM_PPTAL");
var _SIG_CONTRATO_NOTAS = require("./SIG_CONTRATO_NOTAS");
var _SIG_CONTRATO_PENALIDAD_OTROS = require("./SIG_CONTRATO_PENALIDAD_OTROS");
var _SIG_CONTRATO_SECUENCIA = require("./SIG_CONTRATO_SECUENCIA");
var _SIG_CONVENIO = require("./SIG_CONVENIO");
var _SIG_CONVOCATORIA = require("./SIG_CONVOCATORIA");
var _SIG_CONVOCATORIA_CALENDARIO = require("./SIG_CONVOCATORIA_CALENDARIO");
var _SIG_CONVOCATORIA_CALENDA_CAB = require("./SIG_CONVOCATORIA_CALENDA_CAB");
var _SIG_CONVOCATORIA_ETAPAS = require("./SIG_CONVOCATORIA_ETAPAS");
var _SIG_CONVOCATORIA_FACTOR = require("./SIG_CONVOCATORIA_FACTOR");
var _SIG_CONVOCATORIA_FUENTE = require("./SIG_CONVOCATORIA_FUENTE");
var _SIG_CONVOCATORIA_INVITACION = require("./SIG_CONVOCATORIA_INVITACION");
var _SIG_CONVOCATORIA_INV_CONDICION = require("./SIG_CONVOCATORIA_INV_CONDICION");
var _SIG_CONVOCATORIA_ITEM = require("./SIG_CONVOCATORIA_ITEM");
var _SIG_CONVOCATORIA_ITEM_DETALLE = require("./SIG_CONVOCATORIA_ITEM_DETALLE");
var _SIG_CONVOCATORIA_ITEM_MENSUAL = require("./SIG_CONVOCATORIA_ITEM_MENSUAL");
var _SIG_CONVOCATORIA_ITEM_PPTAL = require("./SIG_CONVOCATORIA_ITEM_PPTAL");
var _SIG_CONVOCATORIA_LOTE = require("./SIG_CONVOCATORIA_LOTE");
var _SIG_CONVOCATORIA_LOTE_FACTOR = require("./SIG_CONVOCATORIA_LOTE_FACTOR");
var _SIG_CONVOCATORIA_REQUISITOS = require("./SIG_CONVOCATORIA_REQUISITOS");
var _SIG_CONVOCATORIA_SECUENCIA = require("./SIG_CONVOCATORIA_SECUENCIA");
var _SIG_CUADRO_ADQUISICION = require("./SIG_CUADRO_ADQUISICION");
var _SIG_CUADRO_ADQ_VALIDA = require("./SIG_CUADRO_ADQ_VALIDA");
var _SIG_CUADRO_ANUAL_EQUIVALENCIA = require("./SIG_CUADRO_ANUAL_EQUIVALENCIA");
var _SIG_CUADRO_MODIFICADO = require("./SIG_CUADRO_MODIFICADO");
var _SIG_CUADRO_MODIFICADO_CMN = require("./SIG_CUADRO_MODIFICADO_CMN");
var _SIG_CUADRO_MODIFICADO_DET = require("./SIG_CUADRO_MODIFICADO_DET");
var _SIG_CUADRO_MODIFICADO_DET_ORI = require("./SIG_CUADRO_MODIFICADO_DET_ORI");
var _SIG_CUADRO_MODIFICADO_DET_REF = require("./SIG_CUADRO_MODIFICADO_DET_REF");
var _SIG_CUADRO_MODIFICADO_SALDO = require("./SIG_CUADRO_MODIFICADO_SALDO");
var _SIG_CUADRO_NECESIDAD = require("./SIG_CUADRO_NECESIDAD");
var _SIG_CUADRO_NECESIDAD_DET = require("./SIG_CUADRO_NECESIDAD_DET");
var _SIG_CUADRO_NECESIDAD_DET_PAAC = require("./SIG_CUADRO_NECESIDAD_DET_PAAC");
var _SIG_CUADRO_STOCK_ESTIMADO = require("./SIG_CUADRO_STOCK_ESTIMADO");
var _SIG_CUADRO_TRANSFERENCIA = require("./SIG_CUADRO_TRANSFERENCIA");
var _SIG_CUADRO_TRANSFERENCIA_DET = require("./SIG_CUADRO_TRANSFERENCIA_DET");
var _SIG_CUENTA_ACTO_ADM = require("./SIG_CUENTA_ACTO_ADM");
var _SIG_CUENTA_CONCESION = require("./SIG_CUENTA_CONCESION");
var _SIG_CUENTA_CONSTRUCCION = require("./SIG_CUENTA_CONSTRUCCION");
var _SIG_CUENTA_MOVIMTO = require("./SIG_CUENTA_MOVIMTO");
var _SIG_CUENTA_PARAMETRO_ANIO = require("./SIG_CUENTA_PARAMETRO_ANIO");
var _SIG_CUENTA_TIPO_PATRIMONIO = require("./SIG_CUENTA_TIPO_PATRIMONIO");
var _SIG_DA_PRESUPUESTO = require("./SIG_DA_PRESUPUESTO");
var _SIG_DEPEN_META_CUADRO = require("./SIG_DEPEN_META_CUADRO");
var _SIG_DESP_DOC_RENDIDO = require("./SIG_DESP_DOC_RENDIDO");
var _SIG_DESP_PEDIDOS = require("./SIG_DESP_PEDIDOS");
var _SIG_DESP_PERSONAL = require("./SIG_DESP_PERSONAL");
var _SIG_DESP_PLANILLA_PASAJE = require("./SIG_DESP_PLANILLA_PASAJE");
var _SIG_DESP_PLAN_PAS_PPTA = require("./SIG_DESP_PLAN_PAS_PPTA");
var _SIG_DESTINOS = require("./SIG_DESTINOS");
var _SIG_DETALLE_ACTIVOS = require("./SIG_DETALLE_ACTIVOS");
var _SIG_DETALLE_ALMACEN_LOTES = require("./SIG_DETALLE_ALMACEN_LOTES");
var _SIG_DETALLE_ANEXO_CUADRO = require("./SIG_DETALLE_ANEXO_CUADRO");
var _SIG_DETALLE_BIENES = require("./SIG_DETALLE_BIENES");
var _SIG_DETALLE_BSERV_CUADRO = require("./SIG_DETALLE_BSERV_CUADRO");
var _SIG_DETALLE_CONCESIONES = require("./SIG_DETALLE_CONCESIONES");
var _SIG_DETALLE_CTA_ALMACEN = require("./SIG_DETALLE_CTA_ALMACEN");
var _SIG_DETALLE_CTA_CONFOR_SERV = require("./SIG_DETALLE_CTA_CONFOR_SERV");
var _SIG_DETALLE_INVENT_FISICO = require("./SIG_DETALLE_INVENT_FISICO");
var _SIG_DETALLE_ITEM_ALMACEN = require("./SIG_DETALLE_ITEM_ALMACEN");
var _SIG_DETALLE_ITEM_CONFOR_SERV = require("./SIG_DETALLE_ITEM_CONFOR_SERV");
var _SIG_DETALLE_MEJORAS = require("./SIG_DETALLE_MEJORAS");
var _SIG_DETALLE_METAS_CUADRO = require("./SIG_DETALLE_METAS_CUADRO");
var _SIG_DETALLE_MOVIM_ALMACEN = require("./SIG_DETALLE_MOVIM_ALMACEN");
var _SIG_DETALLE_MOVIM_ALMACEN_EST = require("./SIG_DETALLE_MOVIM_ALMACEN_EST");
var _SIG_DETALLE_MOVIM_CONFOR_SERV = require("./SIG_DETALLE_MOVIM_CONFOR_SERV");
var _SIG_DETALLE_MOVIM_PPTO = require("./SIG_DETALLE_MOVIM_PPTO");
var _SIG_DETALLE_MOVIM_PPTO_CF = require("./SIG_DETALLE_MOVIM_PPTO_CF");
var _SIG_DETALLE_PECOSA = require("./SIG_DETALLE_PECOSA");
var _SIG_DETALLE_PEDIDOS = require("./SIG_DETALLE_PEDIDOS");
var _SIG_DETALLE_PEDIDOS_ANEXO = require("./SIG_DETALLE_PEDIDOS_ANEXO");
var _SIG_DETALLE_PEDIDO_COMISIONADO = require("./SIG_DETALLE_PEDIDO_COMISIONADO");
var _SIG_DETALLE_PEDIDO_CUADRO = require("./SIG_DETALLE_PEDIDO_CUADRO");
var _SIG_DET_ADMINISTRATIVO = require("./SIG_DET_ADMINISTRATIVO");
var _SIG_DET_ADMIN_INM_COMP = require("./SIG_DET_ADMIN_INM_COMP");
var _SIG_DET_CAUSAL_ALTA = require("./SIG_DET_CAUSAL_ALTA");
var _SIG_DET_DISTRIBUCION = require("./SIG_DET_DISTRIBUCION");
var _SIG_DET_MOVIM_PATRIMONIO = require("./SIG_DET_MOVIM_PATRIMONIO");
var _SIG_DEVENGADO = require("./SIG_DEVENGADO");
var _SIG_DEVENGADO_DOC_SECU = require("./SIG_DEVENGADO_DOC_SECU");
var _SIG_DEVENGADO_ITEM = require("./SIG_DEVENGADO_ITEM");
var _SIG_DEVENGADO_ITEM_PPTO = require("./SIG_DEVENGADO_ITEM_PPTO");
var _SIG_DEVENGADO_PENALIDAD_OTROS = require("./SIG_DEVENGADO_PENALIDAD_OTROS");
var _SIG_DEVENGADO_SECUENCIA = require("./SIG_DEVENGADO_SECUENCIA");
var _SIG_DEVOLUCION_CAB = require("./SIG_DEVOLUCION_CAB");
var _SIG_DEVOLUCION_DET = require("./SIG_DEVOLUCION_DET");
var _SIG_DEVOLUCION_PPTAL = require("./SIG_DEVOLUCION_PPTAL");
var _SIG_DIVISION = require("./SIG_DIVISION");
var _SIG_DIVISION_FONDO = require("./SIG_DIVISION_FONDO");
var _SIG_DOCUMENTO_ESTADO = require("./SIG_DOCUMENTO_ESTADO");
var _SIG_ENCARGO_ITEM_ANEXO = require("./SIG_ENCARGO_ITEM_ANEXO");
var _SIG_ENCARGO_REQ = require("./SIG_ENCARGO_REQ");
var _SIG_ENCARGO_REQ_DET = require("./SIG_ENCARGO_REQ_DET");
var _SIG_ENCARGO_REQ_EXP = require("./SIG_ENCARGO_REQ_EXP");
var _SIG_ENCARGO_REQ_ITEM = require("./SIG_ENCARGO_REQ_ITEM");
var _SIG_ENTIDAD_DONANTE = require("./SIG_ENTIDAD_DONANTE");
var _SIG_EQUIVALENCIA_CATALOGO = require("./SIG_EQUIVALENCIA_CATALOGO");
var _SIG_EQUIVALENCIA_CCOSTO_META = require("./SIG_EQUIVALENCIA_CCOSTO_META");
var _SIG_EQUIVALENCIA_CENTRO = require("./SIG_EQUIVALENCIA_CENTRO");
var _SIG_EQUIVALENCIA_CENTRO_BD = require("./SIG_EQUIVALENCIA_CENTRO_BD");
var _SIG_EQUIVALENCIA_SUBFIN = require("./SIG_EQUIVALENCIA_SUBFIN");
var _SIG_ESCALAS_SEDE_DEPE = require("./SIG_ESCALAS_SEDE_DEPE");
var _SIG_ESPECIFICAS_TECNICAS = require("./SIG_ESPECIFICAS_TECNICAS");
var _SIG_ESPECIF_TECNICA_ACTIVO = require("./SIG_ESPECIF_TECNICA_ACTIVO");
var _SIG_ESPECIF_TECNICA_BD = require("./SIG_ESPECIF_TECNICA_BD");
var _SIG_EXP_SIGA = require("./SIG_EXP_SIGA");
var _SIG_EXP_SIGA_DOCU = require("./SIG_EXP_SIGA_DOCU");
var _SIG_EXP_SIGA_PPTO = require("./SIG_EXP_SIGA_PPTO");
var _SIG_EXP_SIGA_SECU = require("./SIG_EXP_SIGA_SECU");
var _SIG_FACTOR_AJUSTE_ANUAL = require("./SIG_FACTOR_AJUSTE_ANUAL");
var _SIG_FACTOR_AJUSTE_MENSUAL = require("./SIG_FACTOR_AJUSTE_MENSUAL");
var _SIG_FACTOR_EVALUACION = require("./SIG_FACTOR_EVALUACION");
var _SIG_FALTANTES_INVENT_FISICO = require("./SIG_FALTANTES_INVENT_FISICO");
var _SIG_FAMILIA_CLASIFICADOR = require("./SIG_FAMILIA_CLASIFICADOR");
var _SIG_FAMILIA_CLAS_EJECUTORA = require("./SIG_FAMILIA_CLAS_EJECUTORA");
var _SIG_FAMILIA_CUENTA = require("./SIG_FAMILIA_CUENTA");
var _SIG_FAMILIA_CUENTAT = require("./SIG_FAMILIA_CUENTAT");
var _SIG_FAMILIA_CUENTA_EJECUTORA = require("./SIG_FAMILIA_CUENTA_EJECUTORA");
var _SIG_FAMILIA_CUENTA_EQUIV = require("./SIG_FAMILIA_CUENTA_EQUIV");
var _SIG_FAMILIA_ESNI = require("./SIG_FAMILIA_ESNI");
var _SIG_GRUPO_NOTA = require("./SIG_GRUPO_NOTA");
var _SIG_GUIA_REMISION = require("./SIG_GUIA_REMISION");
var _SIG_GUIA_REMISION_DET = require("./SIG_GUIA_REMISION_DET");
var _SIG_HT_MOVIM_CONTABLE = require("./SIG_HT_MOVIM_CONTABLE");
var _SIG_HT_MOVIM_MENSUAL = require("./SIG_HT_MOVIM_MENSUAL");
var _SIG_IMPORTA_CONTROL = require("./SIG_IMPORTA_CONTROL");
var _SIG_INM_COMPONENTE = require("./SIG_INM_COMPONENTE");
var _SIG_INM_COMPONENTES_IF = require("./SIG_INM_COMPONENTES_IF");
var _SIG_INM_COMPONENTE_AJUSTE = require("./SIG_INM_COMPONENTE_AJUSTE");
var _SIG_INM_COMPONENTE_CUENTA = require("./SIG_INM_COMPONENTE_CUENTA");
var _SIG_INM_COMPONENTE_ESP_TECNICA = require("./SIG_INM_COMPONENTE_ESP_TECNICA");
var _SIG_INM_COMPONENTE_INSPEC = require("./SIG_INM_COMPONENTE_INSPEC");
var _SIG_INM_IF = require("./SIG_INM_IF");
var _SIG_INM_ITEM_CATALOGO = require("./SIG_INM_ITEM_CATALOGO");
var _SIG_INM_SEGUROS = require("./SIG_INM_SEGUROS");
var _SIG_INM_UND_ACTIVO_ESP_TECNICA = require("./SIG_INM_UND_ACTIVO_ESP_TECNICA");
var _SIG_INM_UNIDAD_ACTIVO = require("./SIG_INM_UNIDAD_ACTIVO");
var _SIG_INM_UNIDAD_ACTIVO_BAJA = require("./SIG_INM_UNIDAD_ACTIVO_BAJA");
var _SIG_INM_UNIDAD_ACTIVO_IF = require("./SIG_INM_UNIDAD_ACTIVO_IF");
var _SIG_INT_ACT_PROY_NOMBRE = require("./SIG_INT_ACT_PROY_NOMBRE");
var _SIG_INT_COMPONENTE_NOMBRE = require("./SIG_INT_COMPONENTE_NOMBRE");
var _SIG_INT_CONSOLIDADO_SIAF = require("./SIG_INT_CONSOLIDADO_SIAF");
var _SIG_INT_FINALIDAD_NOMBRE = require("./SIG_INT_FINALIDAD_NOMBRE");
var _SIG_INT_FUNCION_NOMBRE = require("./SIG_INT_FUNCION_NOMBRE");
var _SIG_INT_HOJA_TRABAJO = require("./SIG_INT_HOJA_TRABAJO");
var _SIG_INT_HT_GASTO = require("./SIG_INT_HT_GASTO");
var _SIG_INT_HT_GASTO_SIAF = require("./SIG_INT_HT_GASTO_SIAF");
var _SIG_INT_HT_META = require("./SIG_INT_HT_META");
var _SIG_INT_HT_META_SIAF = require("./SIG_INT_HT_META_SIAF");
var _SIG_INT_LOG = require("./SIG_INT_LOG");
var _SIG_INT_MENSAJES_ERROR = require("./SIG_INT_MENSAJES_ERROR");
var _SIG_INT_META_PROPUESTA = require("./SIG_INT_META_PROPUESTA");
var _SIG_INT_MOVIMIENTO_AUD = require("./SIG_INT_MOVIMIENTO_AUD");
var _SIG_INT_PROGRAMA_NOMBRE = require("./SIG_INT_PROGRAMA_NOMBRE");
var _SIG_INT_SUB_PROGRAMA_NOMBRE = require("./SIG_INT_SUB_PROGRAMA_NOMBRE");
var _SIG_INT_TMP_ASIGNACION = require("./SIG_INT_TMP_ASIGNACION");
var _SIG_INT_TMP_ASIGNA_GENERICA = require("./SIG_INT_TMP_ASIGNA_GENERICA");
var _SIG_INT_TMP_JOB = require("./SIG_INT_TMP_JOB");
var _SIG_INT_TMP_META = require("./SIG_INT_TMP_META");
var _SIG_INT_TRANSMISION = require("./SIG_INT_TRANSMISION");
var _SIG_INT_VERSION = require("./SIG_INT_VERSION");
var _SIG_INVENTARIO_FISICO = require("./SIG_INVENTARIO_FISICO");
var _SIG_INVENTARIO_FISICO_CIERRE = require("./SIG_INVENTARIO_FISICO_CIERRE");
var _SIG_INVENTARIO_FISICO_DOCUM = require("./SIG_INVENTARIO_FISICO_DOCUM");
var _SIG_INV_INICIAL = require("./SIG_INV_INICIAL");
var _SIG_INV_INICIAL_temp = require("./SIG_INV_INICIAL_temp");
var _SIG_ITEM_ATRIBUTO = require("./SIG_ITEM_ATRIBUTO");
var _SIG_ITEM_MARCA_MODELO = require("./SIG_ITEM_MARCA_MODELO");
var _SIG_ITEM_TIPO_UNIDAD_ACTIVO = require("./SIG_ITEM_TIPO_UNIDAD_ACTIVO");
var _SIG_KARDEX_CTROL_EXISTENCIAS = require("./SIG_KARDEX_CTROL_EXISTENCIAS");
var _SIG_KARDEX_CUF = require("./SIG_KARDEX_CUF");
var _SIG_KARDEX_EQUIVALENCIA_CUENTA = require("./SIG_KARDEX_EQUIVALENCIA_CUENTA");
var _SIG_KARDEX_INVENTARIO = require("./SIG_KARDEX_INVENTARIO");
var _SIG_KARDEX_INVENTARIO_CAB = require("./SIG_KARDEX_INVENTARIO_CAB");
var _SIG_KARDEX_POR_ALMACEN = require("./SIG_KARDEX_POR_ALMACEN");
var _SIG_LOG_ALERTA = require("./SIG_LOG_ALERTA");
var _SIG_MAESTRO_BK = require("./SIG_MAESTRO_BK");
var _SIG_MAESTRO_DET_CATALOGO = require("./SIG_MAESTRO_DET_CATALOGO");
var _SIG_MAESTRO_EQUIVALENCIA = require("./SIG_MAESTRO_EQUIVALENCIA");
var _SIG_MAESTRO_ESTADO = require("./SIG_MAESTRO_ESTADO");
var _SIG_MAESTRO_PROCESO = require("./SIG_MAESTRO_PROCESO");
var _SIG_MANIFIESTO_CARGA = require("./SIG_MANIFIESTO_CARGA");
var _SIG_MATRIZ_SEDE_DEPE = require("./SIG_MATRIZ_SEDE_DEPE");
var _SIG_MA_CENTRO_RUBRO = require("./SIG_MA_CENTRO_RUBRO");
var _SIG_MEJORAS = require("./SIG_MEJORAS");
var _SIG_METAS_PROP_X_CENTRO = require("./SIG_METAS_PROP_X_CENTRO");
var _SIG_META_CENTRO_TAREA = require("./SIG_META_CENTRO_TAREA");
var _SIG_META_PROPUESTA = require("./SIG_META_PROPUESTA");
var _SIG_META_PROPUESTA_EQUI = require("./SIG_META_PROPUESTA_EQUI");
var _SIG_META_X_SEDE = require("./SIG_META_X_SEDE");
var _SIG_META_X_TAREA = require("./SIG_META_X_TAREA");
var _SIG_MODALIDAD_CONSTRUCCION = require("./SIG_MODALIDAD_CONSTRUCCION");
var _SIG_MODULO_PROCESO = require("./SIG_MODULO_PROCESO");
var _SIG_MOVIMIENTO_ACTIVO = require("./SIG_MOVIMIENTO_ACTIVO");
var _SIG_MOVIMIENTO_BIENES = require("./SIG_MOVIMIENTO_BIENES");
var _SIG_MOVIMIENTO_CONTABLE = require("./SIG_MOVIMIENTO_CONTABLE");
var _SIG_MOVIMIENTO_CONTABLE_COMP = require("./SIG_MOVIMIENTO_CONTABLE_COMP");
var _SIG_MOVIMIENTO_PERSONAL = require("./SIG_MOVIMIENTO_PERSONAL");
var _SIG_MOVIM_ADMINISTRATIVO = require("./SIG_MOVIM_ADMINISTRATIVO");
var _SIG_MOVIM_ALMACEN = require("./SIG_MOVIM_ALMACEN");
var _SIG_MOVIM_ALMACEN_TRANS = require("./SIG_MOVIM_ALMACEN_TRANS");
var _SIG_MOVIM_ASIGNACION = require("./SIG_MOVIM_ASIGNACION");
var _SIG_MOVIM_CONFOR_SERVICIO = require("./SIG_MOVIM_CONFOR_SERVICIO");
var _SIG_MOVIM_CONTABLE_INM_COMP = require("./SIG_MOVIM_CONTABLE_INM_COMP");
var _SIG_MOVIM_PATRIMONIO = require("./SIG_MOVIM_PATRIMONIO");
var _SIG_MOVIM_UNIDAD_PRODUCIDA = require("./SIG_MOVIM_UNIDAD_PRODUCIDA");
var _SIG_MP_CENTRO_RUBRO = require("./SIG_MP_CENTRO_RUBRO");
var _SIG_MSG_ACTIVA = require("./SIG_MSG_ACTIVA");
var _SIG_MSG_ALERTA = require("./SIG_MSG_ALERTA");
var _SIG_MSG_DESTINATARIO = require("./SIG_MSG_DESTINATARIO");
var _SIG_MSG_DOCUMENTO = require("./SIG_MSG_DOCUMENTO");
var _SIG_MSG_DOCU_DESTINO = require("./SIG_MSG_DOCU_DESTINO");
var _SIG_MSG_DOCU_PROG = require("./SIG_MSG_DOCU_PROG");
var _SIG_MSG_GRUPO = require("./SIG_MSG_GRUPO");
var _SIG_MSG_LOG_MOVIMIENTO = require("./SIG_MSG_LOG_MOVIMIENTO");
var _SIG_MSG_MODULO = require("./SIG_MSG_MODULO");
var _SIG_MSG_PROGRAMA = require("./SIG_MSG_PROGRAMA");
var _SIG_MSG_TIPO = require("./SIG_MSG_TIPO");
var _SIG_OCE_DET = require("./SIG_OCE_DET");
var _SIG_OPERACION_FAMILIA_PROCESO = require("./SIG_OPERACION_FAMILIA_PROCESO");
var _SIG_ORDEN_ADQUISICION = require("./SIG_ORDEN_ADQUISICION");
var _SIG_ORDEN_ADQUISICION_ANULAC = require("./SIG_ORDEN_ADQUISICION_ANULAC");
var _SIG_ORDEN_IMPRESION = require("./SIG_ORDEN_IMPRESION");
var _SIG_ORDEN_INTERFASE = require("./SIG_ORDEN_INTERFASE");
var _SIG_ORDEN_INTERFASE_ANULAC = require("./SIG_ORDEN_INTERFASE_ANULAC");
var _SIG_ORDEN_ITEM = require("./SIG_ORDEN_ITEM");
var _SIG_ORDEN_ITEM_ANEXO = require("./SIG_ORDEN_ITEM_ANEXO");
var _SIG_ORDEN_ITEM_ANEXO_ANULAC = require("./SIG_ORDEN_ITEM_ANEXO_ANULAC");
var _SIG_ORDEN_ITEM_ANULAC = require("./SIG_ORDEN_ITEM_ANULAC");
var _SIG_ORDEN_ITEM_PPTO = require("./SIG_ORDEN_ITEM_PPTO");
var _SIG_ORDEN_ITEM_PPTO_ANULAC = require("./SIG_ORDEN_ITEM_PPTO_ANULAC");
var _SIG_ORDEN_PRESUPUESTO = require("./SIG_ORDEN_PRESUPUESTO");
var _SIG_ORDEN_PRESUPUESTO_ANULAC = require("./SIG_ORDEN_PRESUPUESTO_ANULAC");
var _SIG_ORDEN_SECUENCIA = require("./SIG_ORDEN_SECUENCIA");
var _SIG_ORDEN_SECUENCIA_ANULAC = require("./SIG_ORDEN_SECUENCIA_ANULAC");
var _SIG_ORD_PASAJE_CONSOLIDADO = require("./SIG_ORD_PASAJE_CONSOLIDADO");
var _SIG_PAAC_CENTRO_COSTO = require("./SIG_PAAC_CENTRO_COSTO");
var _SIG_PAAC_CENTRO_COSTO_ANEXO = require("./SIG_PAAC_CENTRO_COSTO_ANEXO");
var _SIG_PAAC_CONSOLIDADO = require("./SIG_PAAC_CONSOLIDADO");
var _SIG_PAAC_CONSOLIDADO_UES = require("./SIG_PAAC_CONSOLIDADO_UES");
var _SIG_PAAC_DET = require("./SIG_PAAC_DET");
var _SIG_PAAC_DETALLE = require("./SIG_PAAC_DETALLE");
var _SIG_PAAC_DET_DEPE = require("./SIG_PAAC_DET_DEPE");
var _SIG_PAAC_DET_PPTAL = require("./SIG_PAAC_DET_PPTAL");
var _SIG_PAAC_DET_SECUENCIA = require("./SIG_PAAC_DET_SECUENCIA");
var _SIG_PAAC_FILTRO = require("./SIG_PAAC_FILTRO");
var _SIG_PAAC_ITEM = require("./SIG_PAAC_ITEM");
var _SIG_PAAC_ITEM_ANEXO = require("./SIG_PAAC_ITEM_ANEXO");
var _SIG_PAAC_METAS = require("./SIG_PAAC_METAS");
var _SIG_PAAC_RESOLUCION = require("./SIG_PAAC_RESOLUCION");
var _SIG_PAAC_SECUENCIA = require("./SIG_PAAC_SECUENCIA");
var _SIG_PARAMETRO_EJECUTORA_ANIO = require("./SIG_PARAMETRO_EJECUTORA_ANIO");
var _SIG_PARAMETRO_MPAGO_FFINANC = require("./SIG_PARAMETRO_MPAGO_FFINANC");
var _SIG_PATRIMONIO = require("./SIG_PATRIMONIO");
var _SIG_PATRIMONIO_AJUSTE_CAB = require("./SIG_PATRIMONIO_AJUSTE_CAB");
var _SIG_PATRIMONIO_AJUSTE_DET = require("./SIG_PATRIMONIO_AJUSTE_DET");
var _SIG_PATRIMONIO_COMP = require("./SIG_PATRIMONIO_COMP");
var _SIG_PATRIMONIO_INM = require("./SIG_PATRIMONIO_INM");
var _SIG_PATRIMONIO_INM_IF = require("./SIG_PATRIMONIO_INM_IF");
var _SIG_PEDIDOS = require("./SIG_PEDIDOS");
var _SIG_PEDIDOS_DESTINO = require("./SIG_PEDIDOS_DESTINO");
var _SIG_PEDIDOS_DETA_DEST = require("./SIG_PEDIDOS_DETA_DEST");
var _SIG_PEDIDO_PECOSA_IMPRESION = require("./SIG_PEDIDO_PECOSA_IMPRESION");
var _SIG_PEI_ACCION_EST = require("./SIG_PEI_ACCION_EST");
var _SIG_PEI_CATEGORIA = require("./SIG_PEI_CATEGORIA");
var _SIG_PEI_CAT_DETA_OBJETIVO_EST = require("./SIG_PEI_CAT_DETA_OBJETIVO_EST");
var _SIG_PEI_GENERAL = require("./SIG_PEI_GENERAL");
var _SIG_PEI_IND_OBJETIVO_EST = require("./SIG_PEI_IND_OBJETIVO_EST");
var _SIG_PEI_META_ACCION_EST = require("./SIG_PEI_META_ACCION_EST");
var _SIG_PEI_META_ANUAL = require("./SIG_PEI_META_ANUAL");
var _SIG_PEI_OBJETIVO_EST = require("./SIG_PEI_OBJETIVO_EST");
var _SIG_PERSONAL_DET = require("./SIG_PERSONAL_DET");
var _SIG_PERSONAL_FIRMA = require("./SIG_PERSONAL_FIRMA");
var _SIG_PLANILLAS_CERTIFICACION = require("./SIG_PLANILLAS_CERTIFICACION");
var _SIG_PLANILLA_SNP = require("./SIG_PLANILLA_SNP");
var _SIG_PLANILLA_SNP_DESC = require("./SIG_PLANILLA_SNP_DESC");
var _SIG_PLANILLA_SNP_DETALLE = require("./SIG_PLANILLA_SNP_DETALLE");
var _SIG_PLANTILLA = require("./SIG_PLANTILLA");
var _SIG_PLANTILLA_GRUPO_NOTA = require("./SIG_PLANTILLA_GRUPO_NOTA");
var _SIG_PLAN_CTB_MBELICO = require("./SIG_PLAN_CTB_MBELICO");
var _SIG_PLAN_CTB_PNUD = require("./SIG_PLAN_CTB_PNUD");
var _SIG_POI_ACCION_EST_CENTRO = require("./SIG_POI_ACCION_EST_CENTRO");
var _SIG_POI_ASIGNA_CENTRO_COSTO = require("./SIG_POI_ASIGNA_CENTRO_COSTO");
var _SIG_POI_ASIGNA_TAREA = require("./SIG_POI_ASIGNA_TAREA");
var _SIG_POI_GENERAL = require("./SIG_POI_GENERAL");
var _SIG_POI_META_ASIGNA_CENTRO = require("./SIG_POI_META_ASIGNA_CENTRO");
var _SIG_PPAAC_CENTRO_COSTO = require("./SIG_PPAAC_CENTRO_COSTO");
var _SIG_PPAAC_CONSOLIDADO = require("./SIG_PPAAC_CONSOLIDADO");
var _SIG_PPAAC_ITEM = require("./SIG_PPAAC_ITEM");
var _SIG_PPAAC_METAS = require("./SIG_PPAAC_METAS");
var _SIG_PPAAC_SECUENCIA = require("./SIG_PPAAC_SECUENCIA");
var _SIG_PPR_ATENCIONES_X_SUBFIN = require("./SIG_PPR_ATENCIONES_X_SUBFIN");
var _SIG_PPR_CATEGORIA = require("./SIG_PPR_CATEGORIA");
var _SIG_PPR_CIERRE_FASE = require("./SIG_PPR_CIERRE_FASE");
var _SIG_PPR_COLEGIO = require("./SIG_PPR_COLEGIO");
var _SIG_PPR_CUADRO_NECESIDAD = require("./SIG_PPR_CUADRO_NECESIDAD");
var _SIG_PPR_CUADRO_NECESIDAD_DET = require("./SIG_PPR_CUADRO_NECESIDAD_DET");
var _SIG_PPR_DISA = require("./SIG_PPR_DISA");
var _SIG_PPR_DRE = require("./SIG_PPR_DRE");
var _SIG_PPR_EESS_2010 = require("./SIG_PPR_EESS_2010");
var _SIG_PPR_EJECUTORA_AMBITO = require("./SIG_PPR_EJECUTORA_AMBITO");
var _SIG_PPR_ESTABLECIMIENTO = require("./SIG_PPR_ESTABLECIMIENTO");
var _SIG_PPR_ESTCOSTOS = require("./SIG_PPR_ESTCOSTOS");
var _SIG_PPR_FAMILIAS_ESTCOSTOS = require("./SIG_PPR_FAMILIAS_ESTCOSTOS");
var _SIG_PPR_FINALIDAD_EJEC = require("./SIG_PPR_FINALIDAD_EJEC");
var _SIG_PPR_FINALIDAD_EJEC_FASE = require("./SIG_PPR_FINALIDAD_EJEC_FASE");
var _SIG_PPR_ITEMS_X_CATEGORIA = require("./SIG_PPR_ITEMS_X_CATEGORIA");
var _SIG_PPR_KIT_EJECUTORA = require("./SIG_PPR_KIT_EJECUTORA");
var _SIG_PPR_KIT_EJECUTORA_SEDE = require("./SIG_PPR_KIT_EJECUTORA_SEDE");
var _SIG_PPR_KIT_EJECUTORA_meta = require("./SIG_PPR_KIT_EJECUTORA_meta");
var _SIG_PPR_KIT_ITEMS = require("./SIG_PPR_KIT_ITEMS");
var _SIG_PPR_KIT_ITEMS_EST = require("./SIG_PPR_KIT_ITEMS_EST");
var _SIG_PPR_KIT_ITEMS_EST_BK = require("./SIG_PPR_KIT_ITEMS_EST_BK");
var _SIG_PPR_KIT_PLANTILLA = require("./SIG_PPR_KIT_PLANTILLA");
var _SIG_PPR_MAE_COSTOS = require("./SIG_PPR_MAE_COSTOS");
var _SIG_PPR_META_MENSUAL = require("./SIG_PPR_META_MENSUAL");
var _SIG_PPR_META_PROPUESTA_ = require("./SIG_PPR_META_PROPUESTA_");
var _SIG_PPR_META_PROP_MENSUAL = require("./SIG_PPR_META_PROP_MENSUAL");
var _SIG_PPR_META_PROP_X_SEDE = require("./SIG_PPR_META_PROP_X_SEDE");
var _SIG_PPR_META_X_SEDE = require("./SIG_PPR_META_X_SEDE");
var _SIG_PPR_METFIS_X_SUBFIN = require("./SIG_PPR_METFIS_X_SUBFIN");
var _SIG_PPR_MICRORED = require("./SIG_PPR_MICRORED");
var _SIG_PPR_NIVEL = require("./SIG_PPR_NIVEL");
var _SIG_PPR_NIVEL_DESC = require("./SIG_PPR_NIVEL_DESC");
var _SIG_PPR_RED = require("./SIG_PPR_RED");
var _SIG_PPR_SEDE = require("./SIG_PPR_SEDE");
var _SIG_PPR_SUBFIN_X_CATEG = require("./SIG_PPR_SUBFIN_X_CATEG");
var _SIG_PPR_SUBFIN_X_ESTABLEC = require("./SIG_PPR_SUBFIN_X_ESTABLEC");
var _SIG_PPR_TABLAS = require("./SIG_PPR_TABLAS");
var _SIG_PPR_TECHO_PRESUPUESTO = require("./SIG_PPR_TECHO_PRESUPUESTO");
var _SIG_PPR_TIPO_ESTRATEGIA = require("./SIG_PPR_TIPO_ESTRATEGIA");
var _SIG_PPR_TIPO_INSTITUCION = require("./SIG_PPR_TIPO_INSTITUCION");
var _SIG_PPR_UGEL = require("./SIG_PPR_UGEL");
var _SIG_PRE_SUB_CENTRO_FINALIDAD = require("./SIG_PRE_SUB_CENTRO_FINALIDAD");
var _SIG_PROCESO_COMITE = require("./SIG_PROCESO_COMITE");
var _SIG_PROCESO_DE_SELECCION = require("./SIG_PROCESO_DE_SELECCION");
var _SIG_PROCESO_ETAPAS = require("./SIG_PROCESO_ETAPAS");
var _SIG_PROCESO_IMP_ARC = require("./SIG_PROCESO_IMP_ARC");
var _SIG_PROCESO_SECUENCIA = require("./SIG_PROCESO_SECUENCIA");
var _SIG_PROPUESTA_ARCHIVO = require("./SIG_PROPUESTA_ARCHIVO");
var _SIG_PROPUESTA_ARC_OBS = require("./SIG_PROPUESTA_ARC_OBS");
var _SIG_PROPUESTA_ITEM = require("./SIG_PROPUESTA_ITEM");
var _SIG_PROPUESTA_ITEM_DETALLE = require("./SIG_PROPUESTA_ITEM_DETALLE");
var _SIG_PROPUESTA_LOTE = require("./SIG_PROPUESTA_LOTE");
var _SIG_PROPUESTA_LOTE_FACTOR = require("./SIG_PROPUESTA_LOTE_FACTOR");
var _SIG_PROPUESTA_OBS = require("./SIG_PROPUESTA_OBS");
var _SIG_PROPUESTA_PROVEEDOR = require("./SIG_PROPUESTA_PROVEEDOR");
var _SIG_PROPUESTA_REQUISITOS = require("./SIG_PROPUESTA_REQUISITOS");
var _SIG_PROYECTO_PNUD = require("./SIG_PROYECTO_PNUD");
var _SIG_PROY_CUADRO_ADQUISICION = require("./SIG_PROY_CUADRO_ADQUISICION");
var _SIG_PROY_DEPEN_META_CUADRO = require("./SIG_PROY_DEPEN_META_CUADRO");
var _SIG_PROY_DETALLE_BSERV_CUADRO = require("./SIG_PROY_DETALLE_BSERV_CUADRO");
var _SIG_PROY_DETALLE_METAS_CUADRO = require("./SIG_PROY_DETALLE_METAS_CUADRO");
var _SIG_PROY_DOC_RENDIDO = require("./SIG_PROY_DOC_RENDIDO");
var _SIG_PROY_PLANILLA_PASAJE = require("./SIG_PROY_PLANILLA_PASAJE");
var _SIG_PROY_PLANILLA_VIATICO = require("./SIG_PROY_PLANILLA_VIATICO");
var _SIG_PROY_PLAN_PAS_DESTINO = require("./SIG_PROY_PLAN_PAS_DESTINO");
var _SIG_PROY_PLAN_PAS_PPTA = require("./SIG_PROY_PLAN_PAS_PPTA");
var _SIG_PROY_PLAN_PAS_RUTA = require("./SIG_PROY_PLAN_PAS_RUTA");
var _SIG_PROY_USUARIO_CCOSTO = require("./SIG_PROY_USUARIO_CCOSTO");
var _SIG_PS_CUADRO_ADQ = require("./SIG_PS_CUADRO_ADQ");
var _SIG_REP_FASE_CIERRE = require("./SIG_REP_FASE_CIERRE");
var _SIG_REQ_ENTRADA_ALMACEN = require("./SIG_REQ_ENTRADA_ALMACEN");
var _SIG_REQ_ENTRADA_ALMACEN_DET = require("./SIG_REQ_ENTRADA_ALMACEN_DET");
var _SIG_SCRIPT_DETAIL_EJEC = require("./SIG_SCRIPT_DETAIL_EJEC");
var _SIG_SCRIPT_ERROR_EJEC = require("./SIG_SCRIPT_ERROR_EJEC");
var _SIG_SCRIPT_HEADER_EJEC = require("./SIG_SCRIPT_HEADER_EJEC");
var _SIG_SECUENCIA_MOV_ALMACEN = require("./SIG_SECUENCIA_MOV_ALMACEN");
var _SIG_SECUENCIA_MOV_CONFOR_SERV = require("./SIG_SECUENCIA_MOV_CONFOR_SERV");
var _SIG_SEDE_DEPENDIENCIA = require("./SIG_SEDE_DEPENDIENCIA");
var _SIG_SEGUIMIENTO = require("./SIG_SEGUIMIENTO");
var _SIG_SEGUIMIENTO_ESTADO = require("./SIG_SEGUIMIENTO_ESTADO");
var _SIG_SEGUIMIENTO_SECUENCIA = require("./SIG_SEGUIMIENTO_SECUENCIA");
var _SIG_SERIE_DOCUMENTOS = require("./SIG_SERIE_DOCUMENTOS");
var _SIG_SOLICITUD_COTIZACION = require("./SIG_SOLICITUD_COTIZACION");
var _SIG_SOLICITUD_COTIZACION_ITEM = require("./SIG_SOLICITUD_COTIZACION_ITEM");
var _SIG_SOLICITUD_ESPECIFICACIONES = require("./SIG_SOLICITUD_ESPECIFICACIONES");
var _SIG_SOLICITUD_GRUPO = require("./SIG_SOLICITUD_GRUPO");
var _SIG_SOLICITUD_GRUPO_DET = require("./SIG_SOLICITUD_GRUPO_DET");
var _SIG_SOLICITUD_MODIFICACION = require("./SIG_SOLICITUD_MODIFICACION");
var _SIG_SOLICITUD_MODIFICACION_DET = require("./SIG_SOLICITUD_MODIFICACION_DET");
var _SIG_SUB_FINALIDAD = require("./SIG_SUB_FINALIDAD");
var _SIG_TAREA_ESTRATEGICO = require("./SIG_TAREA_ESTRATEGICO");
var _SIG_TASACION_ACTIVOS = require("./SIG_TASACION_ACTIVOS");
var _SIG_TECHO_PRESUPUESTO = require("./SIG_TECHO_PRESUPUESTO");
var _SIG_TES_ARQUEO_ACREDITACION = require("./SIG_TES_ARQUEO_ACREDITACION");
var _SIG_TES_ARQUEO_CAJA = require("./SIG_TES_ARQUEO_CAJA");
var _SIG_TES_ARQUEO_CAJA_OBS = require("./SIG_TES_ARQUEO_CAJA_OBS");
var _SIG_TES_CAJA = require("./SIG_TES_CAJA");
var _SIG_TES_CAJA_CHICA = require("./SIG_TES_CAJA_CHICA");
var _SIG_TES_CAJA_CHICA_DGASTO = require("./SIG_TES_CAJA_CHICA_DGASTO");
var _SIG_TES_CAJA_CHICA_LIQUIDACION = require("./SIG_TES_CAJA_CHICA_LIQUIDACION");
var _SIG_TES_CAJA_CHICA_LIQUIDA_EXT = require("./SIG_TES_CAJA_CHICA_LIQUIDA_EXT");
var _SIG_TES_CAJA_CHICA_MOV = require("./SIG_TES_CAJA_CHICA_MOV");
var _SIG_TES_CAJA_CHICA_MOVIL = require("./SIG_TES_CAJA_CHICA_MOVIL");
var _SIG_TES_CAJA_CHICA_PEDIDO = require("./SIG_TES_CAJA_CHICA_PEDIDO");
var _SIG_TES_CAJA_CHICA_PEDIDO_DET = require("./SIG_TES_CAJA_CHICA_PEDIDO_DET");
var _SIG_TES_CAJA_CHICA_PPTAL = require("./SIG_TES_CAJA_CHICA_PPTAL");
var _SIG_TES_CAJA_CHICA_REND = require("./SIG_TES_CAJA_CHICA_REND");
var _SIG_TES_CAJA_CHICA_SALDO = require("./SIG_TES_CAJA_CHICA_SALDO");
var _SIG_TES_CAJA_CHICA_SALDO_PAO = require("./SIG_TES_CAJA_CHICA_SALDO_PAO");
var _SIG_TES_CAJA_DETALLE = require("./SIG_TES_CAJA_DETALLE");
var _SIG_TES_CONCEPTO_INGRESO = require("./SIG_TES_CONCEPTO_INGRESO");
var _SIG_TES_INTERFASE_CAB = require("./SIG_TES_INTERFASE_CAB");
var _SIG_TES_INTERFASE_PPTO = require("./SIG_TES_INTERFASE_PPTO");
var _SIG_TES_INTERFASE_SECU = require("./SIG_TES_INTERFASE_SECU");
var _SIG_TES_MAESTRO_DETRACCION = require("./SIG_TES_MAESTRO_DETRACCION");
var _SIG_TES_PERSONA = require("./SIG_TES_PERSONA");
var _SIG_TES_PLANTILLA_OBSERV = require("./SIG_TES_PLANTILLA_OBSERV");
var _SIG_TES_RECIBO_INGRESO = require("./SIG_TES_RECIBO_INGRESO");
var _SIG_TES_RECIBO_INGRESO_DET = require("./SIG_TES_RECIBO_INGRESO_DET");
var _SIG_TES_RECIBO_PROV = require("./SIG_TES_RECIBO_PROV");
var _SIG_TES_RECIBO_PROV_DET = require("./SIG_TES_RECIBO_PROV_DET");
var _SIG_TES_REGISTRO_COMPRA_VENTA = require("./SIG_TES_REGISTRO_COMPRA_VENTA");
var _SIG_TES_TARIFARIO_CAJA = require("./SIG_TES_TARIFARIO_CAJA");
var _SIG_TIPO_ALTA = require("./SIG_TIPO_ALTA");
var _SIG_TIPO_CAMBIO = require("./SIG_TIPO_CAMBIO");
var _SIG_TIPO_CAUSA_RES = require("./SIG_TIPO_CAUSA_RES");
var _SIG_TIPO_CERTIFICACION_HIST = require("./SIG_TIPO_CERTIFICACION_HIST");
var _SIG_TIPO_CONSTRUCCION = require("./SIG_TIPO_CONSTRUCCION");
var _SIG_TIPO_CONSTRUC_INM = require("./SIG_TIPO_CONSTRUC_INM");
var _SIG_TIPO_CONTRATISTAS = require("./SIG_TIPO_CONTRATISTAS");
var _SIG_TIPO_INMUEBLE = require("./SIG_TIPO_INMUEBLE");
var _SIG_TIPO_INM_UNID_ACT = require("./SIG_TIPO_INM_UNID_ACT");
var _SIG_TIPO_MODALIDAD = require("./SIG_TIPO_MODALIDAD");
var _SIG_TIPO_MOVIMIENTO = require("./SIG_TIPO_MOVIMIENTO");
var _SIG_TIPO_MOVIMIENTO_INM = require("./SIG_TIPO_MOVIMIENTO_INM");
var _SIG_TIPO_REAJUSTE_PPTO = require("./SIG_TIPO_REAJUSTE_PPTO");
var _SIG_TIPO_REA_PPTO_DOC = require("./SIG_TIPO_REA_PPTO_DOC");
var _SIG_TIPO_SALIDA = require("./SIG_TIPO_SALIDA");
var _SIG_TIPO_UNIDAD_ACTIVO = require("./SIG_TIPO_UNIDAD_ACTIVO");
var _SIG_TIPO_UNIDAD_ACTIVO_CUENTA = require("./SIG_TIPO_UNIDAD_ACTIVO_CUENTA");
var _SIG_TMP_CARGA_CLASIFICADOR = require("./SIG_TMP_CARGA_CLASIFICADOR");
var _SIG_TMP_CARGA_PIA_NF = require("./SIG_TMP_CARGA_PIA_NF");
var _SIG_TMP_CATALOGO_JUSTIF = require("./SIG_TMP_CATALOGO_JUSTIF");
var _SIG_TMP_CUADRO_NECESIDAD = require("./SIG_TMP_CUADRO_NECESIDAD");
var _SIG_TMP_CUADRO_NECESIDAD_DET = require("./SIG_TMP_CUADRO_NECESIDAD_DET");
var _SIG_TMP_DETALLE_PED_DEST = require("./SIG_TMP_DETALLE_PED_DEST");
var _SIG_TMP_METAS_PROP_X_CENTRO = require("./SIG_TMP_METAS_PROP_X_CENTRO");
var _SIG_TMP_META_PROPUESTA = require("./SIG_TMP_META_PROPUESTA");
var _SIG_TMP_MOVIM_ALMACEN_CTA = require("./SIG_TMP_MOVIM_ALMACEN_CTA");
var _SIG_TMP_MP_CENTRO_RUBRO = require("./SIG_TMP_MP_CENTRO_RUBRO");
var _SIG_TMP_PPR_META_MENSUAL = require("./SIG_TMP_PPR_META_MENSUAL");
var _SIG_TMP_PPR_META_PROPUESTA = require("./SIG_TMP_PPR_META_PROPUESTA");
var _SIG_TMP_PPR_META_PROP_MENSUAL = require("./SIG_TMP_PPR_META_PROP_MENSUAL");
var _SIG_TMP_PPR_METFIS_X_SUBFIN = require("./SIG_TMP_PPR_METFIS_X_SUBFIN");
var _SIG_TMP_PROCESO_DEST = require("./SIG_TMP_PROCESO_DEST");
var _SIG_TMP_PS_CARGA_PROPUESTA = require("./SIG_TMP_PS_CARGA_PROPUESTA");
var _SIG_TMP_PS_REP_CONS_EVAL = require("./SIG_TMP_PS_REP_CONS_EVAL");
var _SIG_TMP_REP_INV_VALORIZADO = require("./SIG_TMP_REP_INV_VALORIZADO");
var _SIG_TMP_TECHO_PRESUPUESTO = require("./SIG_TMP_TECHO_PRESUPUESTO");
var _SIG_TOPES_PROCESOS = require("./SIG_TOPES_PROCESOS");
var _SIG_TRANSACCION_ESTADO = require("./SIG_TRANSACCION_ESTADO");
var _SIG_TRANSPORTISTA = require("./SIG_TRANSPORTISTA");
var _SIG_TRANS_ENVIO = require("./SIG_TRANS_ENVIO");
var _SIG_TRANS_PROGRA = require("./SIG_TRANS_PROGRA");
var _SIG_TRANS_PROGRAMACION_UE = require("./SIG_TRANS_PROGRAMACION_UE");
var _SIG_TRANS_PROGRAMACION_UE2 = require("./SIG_TRANS_PROGRAMACION_UE2");
var _SIG_TRANS_PROGRA_HOR = require("./SIG_TRANS_PROGRA_HOR");
var _SIG_UBICAC_FISICA = require("./SIG_UBICAC_FISICA");
var _SIG_UNIDAD_EQUIV_OSCE = require("./SIG_UNIDAD_EQUIV_OSCE");
var _SIG_UNIDAD_MEDIDA_EQUI = require("./SIG_UNIDAD_MEDIDA_EQUI");
var _SIG_UNIDAD_MEDIDA_TIPO = require("./SIG_UNIDAD_MEDIDA_TIPO");
var _SIG_USUARIO_ALMACEN = require("./SIG_USUARIO_ALMACEN");
var _SIG_USUARIO_CAJA = require("./SIG_USUARIO_CAJA");
var _SIG_USUARIO_CAJA_CHICA = require("./SIG_USUARIO_CAJA_CHICA");
var _SIG_USUARIO_CCOSTO = require("./SIG_USUARIO_CCOSTO");
var _SIG_USUARIO_CCOSTO_BK_III = require("./SIG_USUARIO_CCOSTO_BK_III");
var _SIG_VALIDA_CADENA_FASE = require("./SIG_VALIDA_CADENA_FASE");
var _SI_ALMACEN = require("./SI_ALMACEN");
var _SI_CENTRO_COSTO = require("./SI_CENTRO_COSTO");
var _SI_CONTRATISTA = require("./SI_CONTRATISTA");
var _SI_CONTRATO = require("./SI_CONTRATO");
var _SI_CONTRATO_DETA = require("./SI_CONTRATO_DETA");
var _SI_CONTRATO_DETA_TRX = require("./SI_CONTRATO_DETA_TRX");
var _SI_CONTRATO_TRX = require("./SI_CONTRATO_TRX");
var _SI_FINALIDAD_UM = require("./SI_FINALIDAD_UM");
var _SI_INVENTARIO_INM_TRX = require("./SI_INVENTARIO_INM_TRX");
var _SI_MARCA = require("./SI_MARCA");
var _SI_MOVIMIENTO_ALMACEN = require("./SI_MOVIMIENTO_ALMACEN");
var _SI_MOVIMIENTO_ALMACEN_DETA = require("./SI_MOVIMIENTO_ALMACEN_DETA");
var _SI_MOVIMIENTO_ALMACEN_DETA_TRX = require("./SI_MOVIMIENTO_ALMACEN_DETA_TRX");
var _SI_MOVIMIENTO_ALMACEN_TRX = require("./SI_MOVIMIENTO_ALMACEN_TRX");
var _SI_ORDEN = require("./SI_ORDEN");
var _SI_ORDEN_DETA = require("./SI_ORDEN_DETA");
var _SI_ORDEN_DETA_TRX = require("./SI_ORDEN_DETA_TRX");
var _SI_ORDEN_TRX = require("./SI_ORDEN_TRX");
var _SI_PATRIMONIO = require("./SI_PATRIMONIO");
var _SI_PATRIMONIO_TRX = require("./SI_PATRIMONIO_TRX");
var _SI_PEDIDO = require("./SI_PEDIDO");
var _SI_PEDIDO_DETA = require("./SI_PEDIDO_DETA");
var _SI_PEDIDO_DETA_TRX = require("./SI_PEDIDO_DETA_TRX");
var _SI_PEDIDO_TRX = require("./SI_PEDIDO_TRX");
var _SI_PERSONAL = require("./SI_PERSONAL");
var _SI_PPR_AMBITO = require("./SI_PPR_AMBITO");
var _SI_PPR_ESTABLECIMIENTO = require("./SI_PPR_ESTABLECIMIENTO");
var _SI_PPR_KIT_FILTRO = require("./SI_PPR_KIT_FILTRO");
var _SI_PPR_KIT_ITEMS = require("./SI_PPR_KIT_ITEMS");
var _SI_PPR_KIT_ITEMS_BK = require("./SI_PPR_KIT_ITEMS_BK");
var _SI_PPR_SEDE = require("./SI_PPR_SEDE");
var _SI_PRG_META = require("./SI_PRG_META");
var _SI_PRG_META_EJECUTORA = require("./SI_PRG_META_EJECUTORA");
var _SI_PRG_META_EJECUTORA_TRX = require("./SI_PRG_META_EJECUTORA_TRX");
var _SI_PRG_META_TRX = require("./SI_PRG_META_TRX");
var _SI_PRG_TABLAS_TRANSFER = require("./SI_PRG_TABLAS_TRANSFER");
var _SI_PROGRAMACION = require("./SI_PROGRAMACION");
var _SI_PROGRAMACION_DETA = require("./SI_PROGRAMACION_DETA");
var _SI_PROGRAMACION_DETA_TRX = require("./SI_PROGRAMACION_DETA_TRX");
var _SI_PROGRAMACION_ID_KIT = require("./SI_PROGRAMACION_ID_KIT");
var _SI_PROGRAMACION_ID_KIT_TRX = require("./SI_PROGRAMACION_ID_KIT_TRX");
var _SI_PROGRAMACION_TRX = require("./SI_PROGRAMACION_TRX");
var _SI_REGISTRO_INM_TRX = require("./SI_REGISTRO_INM_TRX");
var _SI_RESUMEN_TRX = require("./SI_RESUMEN_TRX");
var _SI_SEDE = require("./SI_SEDE");
var _SI_TRANS_ORDEN = require("./SI_TRANS_ORDEN");
var _SI_TRANS_PEDIDO = require("./SI_TRANS_PEDIDO");
var _STOCKS_MINIMOS = require("./STOCKS_MINIMOS");
var _SUB_PROGRAMA_NOMBRE_FASE = require("./SUB_PROGRAMA_NOMBRE_FASE");
var _Sub_Programa = require("./Sub_Programa");
var _Sub_Programa_Nombre = require("./Sub_Programa_Nombre");
var _TABLA_AUXILIAR = require("./TABLA_AUXILIAR");
var _TA_CATALOGO = require("./TA_CATALOGO");
var _TA_CLASIFICADOR = require("./TA_CLASIFICADOR");
var _TA_EJECUTORA = require("./TA_EJECUTORA");
var _TA_ESTABLECIMIENTO = require("./TA_ESTABLECIMIENTO");
var _TA_PERSONAL = require("./TA_PERSONAL");
var _TA_PLAN_PRODUCCION = require("./TA_PLAN_PRODUCCION");
var _TA_PLAN_REQUERIMIENTO = require("./TA_PLAN_REQUERIMIENTO");
var _TA_PRECIOS = require("./TA_PRECIOS");
var _TA_UNIDAD_MEDIDA = require("./TA_UNIDAD_MEDIDA");
var _TCATALOGO_PROD = require("./TCATALOGO_PROD");
var _TCatalogo = require("./TCatalogo");
var _TEMP_CCN_ORIGEN = require("./TEMP_CCN_ORIGEN");
var _TEMP_SIG_CUADRO_NECESIDAD = require("./TEMP_SIG_CUADRO_NECESIDAD");
var _TEMP_SIG_CUADRO_NECESIDAD_DET = require("./TEMP_SIG_CUADRO_NECESIDAD_DET");
var _TIPO_A = require("./TIPO_A");
var _TIPO_B = require("./TIPO_B");
var _TIPO_B_A = require("./TIPO_B_A");
var _TIPO_B_CUENTA = require("./TIPO_B_CUENTA");
var _TIPO_B_ITEM = require("./TIPO_B_ITEM");
var _TIPO_DOCUMENTO = require("./TIPO_DOCUMENTO");
var _TMP_ACT_PROY_NOMBRE_FASE = require("./TMP_ACT_PROY_NOMBRE_FASE");
var _TMP_CATALOGO_EQUIV_SBN = require("./TMP_CATALOGO_EQUIV_SBN");
var _TMP_COMPONENTE_NOMBRE_FASE = require("./TMP_COMPONENTE_NOMBRE_FASE");
var _TMP_CONSUCODE_SIG_PAAC_CONS = require("./TMP_CONSUCODE_SIG_PAAC_CONS");
var _TMP_ESTRATEGIA_NACIONAL = require("./TMP_ESTRATEGIA_NACIONAL");
var _TMP_ESTRATEGIA_NACIONAL_EJEC = require("./TMP_ESTRATEGIA_NACIONAL_EJEC");
var _TMP_ESTRATEGIA_NACIONAL_NOMBRE = require("./TMP_ESTRATEGIA_NACIONAL_NOMBRE");
var _TMP_FINALIDAD_FASE = require("./TMP_FINALIDAD_FASE");
var _TMP_FUNCION_FASE = require("./TMP_FUNCION_FASE");
var _TMP_KITS = require("./TMP_KITS");
var _TMP_ORDEN_X_CC = require("./TMP_ORDEN_X_CC");
var _TMP_PARAMETROS_CRON_OT = require("./TMP_PARAMETROS_CRON_OT");
var _TMP_PARAMETROS_PREPAO = require("./TMP_PARAMETROS_PREPAO");
var _TMP_PLIEGO_SIAF = require("./TMP_PLIEGO_SIAF");
var _TMP_PROGRAMA_NOMBRE_FASE = require("./TMP_PROGRAMA_NOMBRE_FASE");
var _TMP_SEGUIMIENTO_PAAC_MODIF = require("./TMP_SEGUIMIENTO_PAAC_MODIF");
var _TMP_SIG_CENTRO_COSTO = require("./TMP_SIG_CENTRO_COSTO");
var _TMP_SIG_CN_TECHO_APROBADO = require("./TMP_SIG_CN_TECHO_APROBADO");
var _TMP_SIG_CN_TECHO_APROB_UPD = require("./TMP_SIG_CN_TECHO_APROB_UPD");
var _TMP_SIG_DETALLE_MOVIM_ALMACEN = require("./TMP_SIG_DETALLE_MOVIM_ALMACEN");
var _TMP_SIG_FAMILIA_CUENTA_EJECUTORA = require("./TMP_SIG_FAMILIA_CUENTA_EJECUTORA");
var _TMP_SIG_KARDEX_POR_ALMACEN = require("./TMP_SIG_KARDEX_POR_ALMACEN");
var _TMP_SIG_MAESTRO_ACTIVIDAD_POI = require("./TMP_SIG_MAESTRO_ACTIVIDAD_POI");
var _TMP_SIG_MOVIM_ALMACEN = require("./TMP_SIG_MOVIM_ALMACEN");
var _TMP_SIG_PAAC_CENTRO_COSTO = require("./TMP_SIG_PAAC_CENTRO_COSTO");
var _TMP_SIG_PAAC_ITEM = require("./TMP_SIG_PAAC_ITEM");
var _TMP_SIG_PAAC_METAS = require("./TMP_SIG_PAAC_METAS");
var _TMP_SIG_SECUENCIA_MOV_ALMACEN = require("./TMP_SIG_SECUENCIA_MOV_ALMACEN");
var _TMP_SIG_SUB_FINALIDAD = require("./TMP_SIG_SUB_FINALIDAD");
var _TMP_SIG_TECHO_APROB_UPD_01 = require("./TMP_SIG_TECHO_APROB_UPD_01");
var _TMP_SIG_TECHO_APROB_UPD_02 = require("./TMP_SIG_TECHO_APROB_UPD_02");
var _TMP_SIG_TECHO_APROB_UPD_03 = require("./TMP_SIG_TECHO_APROB_UPD_03");
var _TMP_SIG_TECHO_APROB_UPD_04 = require("./TMP_SIG_TECHO_APROB_UPD_04");
var _TMP_SIG_TECHO_APROB_UPD_05 = require("./TMP_SIG_TECHO_APROB_UPD_05");
var _TMP_SIG_UBICAC_FISICA = require("./TMP_SIG_UBICAC_FISICA");
var _TMP_SUBFIN_XLS = require("./TMP_SUBFIN_XLS");
var _TMP_SUB_FINALIDAD = require("./TMP_SUB_FINALIDAD");
var _TMP_SUB_PROGRAMA_NOMBRE_FASE = require("./TMP_SUB_PROGRAMA_NOMBRE_FASE");
var _TMP_UNIDAD_MEDIDA = require("./TMP_UNIDAD_MEDIDA");
var _TMP_VALIDA_PROG_ESTRATEGICO = require("./TMP_VALIDA_PROG_ESTRATEGICO");
var _TRANSFERENCIA_ORIGEN = require("./TRANSFERENCIA_ORIGEN");
var _VALIDA_CADENA_X_UNID_MEDIDA = require("./VALIDA_CADENA_X_UNID_MEDIDA");
var _VALIDA_CAD_X_UNID_MEDIDA_TMP = require("./VALIDA_CAD_X_UNID_MEDIDA_TMP");
var _VALIDA_PROG_ESTRATEGICO = require("./VALIDA_PROG_ESTRATEGICO");
var _XXX_MIGRA_2016_MAESTRO = require("./XXX_MIGRA_2016_MAESTRO");
var _aaa = require("./aaa");
var _acumulado_encargo = require("./acumulado_encargo");
var _cert_cab = require("./cert_cab");
var _cert_det = require("./cert_det");
var _clase_bien_serv = require("./clase_bien_serv");
var _codigo_general = require("./codigo_general");
var _codigo_general_det = require("./codigo_general_det");
var _dnpp_act_proy_nombre = require("./dnpp_act_proy_nombre");
var _dnpp_clasificador = require("./dnpp_clasificador");
var _dnpp_clasificador_equivalencia = require("./dnpp_clasificador_equivalencia");
var _dnpp_componente_nombre = require("./dnpp_componente_nombre");
var _dnpp_familia_clasificador = require("./dnpp_familia_clasificador");
var _dnpp_finalidad = require("./dnpp_finalidad");
var _dnpp_funcion = require("./dnpp_funcion");
var _dnpp_programa_nombre = require("./dnpp_programa_nombre");
var _dnpp_sub_programa_nombre = require("./dnpp_sub_programa_nombre");
var _dtproperties = require("./dtproperties");
var _ejecutora = require("./ejecutora");
var _ejecutora_externa = require("./ejecutora_externa");
var _elemento_ciiu = require("./elemento_ciiu");
var _expediente_encargo = require("./expediente_encargo");
var _familia_bien_serv = require("./familia_bien_serv");
var _familia_equivalencia = require("./familia_equivalencia");
var _gestora = require("./gestora");
var _grupo_bien_serv = require("./grupo_bien_serv");
var _menus = require("./menus");
var _meta = require("./meta");
var _meta_encargo = require("./meta_encargo");
var _metas_tmp = require("./metas_tmp");
var _operacion = require("./operacion");
var _operacion_familia = require("./operacion_familia");
var _pais = require("./pais");
var _pbcatcol = require("./pbcatcol");
var _pbcatedt = require("./pbcatedt");
var _pbcatfmt = require("./pbcatfmt");
var _pbcattbl = require("./pbcattbl");
var _pbcatvld = require("./pbcatvld");
var _per = require("./per");
var _pliego = require("./pliego");
var _prov = require("./prov");
var _sector = require("./sector");
var _sig_act_proy_nombre = require("./sig_act_proy_nombre");
var _sig_cadena_equivalencia = require("./sig_cadena_equivalencia");
var _sig_centro_costo_equivalencia = require("./sig_centro_costo_equivalencia");
var _sig_centro_costo_tarea = require("./sig_centro_costo_tarea");
var _sig_centro_costo_x_item = require("./sig_centro_costo_x_item");
var _sig_componente_nombre = require("./sig_componente_nombre");
var _sig_conciliacion_sobrantes = require("./sig_conciliacion_sobrantes");
var _sig_concurrencia_interfase_web = require("./sig_concurrencia_interfase_web");
var _sig_contrato_descuento = require("./sig_contrato_descuento");
var _sig_cua_nec_det_id = require("./sig_cua_nec_det_id");
var _sig_cuadro_anual = require("./sig_cuadro_anual");
var _sig_cuadro_necesidad_det_tmp = require("./sig_cuadro_necesidad_det_tmp");
var _sig_cuadro_necesidad_tmp = require("./sig_cuadro_necesidad_tmp");
var _sig_cuadro_x_centro = require("./sig_cuadro_x_centro");
var _sig_cuenta_equivalencia = require("./sig_cuenta_equivalencia");
var _sig_detalle_cuadro_anual = require("./sig_detalle_cuadro_anual");
var _sig_detalle_movim_temp = require("./sig_detalle_movim_temp");
var _sig_ejecutora = require("./sig_ejecutora");
var _sig_equivalencia_ue = require("./sig_equivalencia_ue");
var _sig_estrategia_parametro = require("./sig_estrategia_parametro");
var _sig_finalidad = require("./sig_finalidad");
var _sig_funcion = require("./sig_funcion");
var _sig_int_consolidado = require("./sig_int_consolidado");
var _sig_int_techo_ppto = require("./sig_int_techo_ppto");
var _sig_int_techo_ppto_carga = require("./sig_int_techo_ppto_carga");
var _sig_item_viatico_pasaje = require("./sig_item_viatico_pasaje");
var _sig_kardex_equivalencia_item = require("./sig_kardex_equivalencia_item");
var _sig_maestro = require("./sig_maestro");
var _sig_maestro_det_cadena = require("./sig_maestro_det_cadena");
var _sig_maestro_det_numerico = require("./sig_maestro_det_numerico");
var _sig_maestro_det_referencia = require("./sig_maestro_det_referencia");
var _sig_maestro_parametro = require("./sig_maestro_parametro");
var _sig_meta_prop = require("./sig_meta_prop");
var _sig_metas_x_centro = require("./sig_metas_x_centro");
var _sig_parametro_anio = require("./sig_parametro_anio");
var _sig_parametro_ejecutora = require("./sig_parametro_ejecutora");
var _sig_pat_equi_cuenta = require("./sig_pat_equi_cuenta");
var _sig_personal = require("./sig_personal");
var _sig_personal_beneficiario = require("./sig_personal_beneficiario");
var _sig_planilla_concepto_clasif = require("./sig_planilla_concepto_clasif");
var _sig_planilla_concepto_cpago = require("./sig_planilla_concepto_cpago");
var _sig_pliego = require("./sig_pliego");
var _sig_ppr_cua_nec_det_id = require("./sig_ppr_cua_nec_det_id");
var _sig_ppr_espserv = require("./sig_ppr_espserv");
var _sig_ppr_sube = require("./sig_ppr_sube");
var _sig_ppr_ups = require("./sig_ppr_ups");
var _sig_ppr_ups_sbas = require("./sig_ppr_ups_sbas");
var _sig_programa_nombre = require("./sig_programa_nombre");
var _sig_proy_cargo = require("./sig_proy_cargo");
var _sig_proy_ciudad = require("./sig_proy_ciudad");
var _sig_proy_comi = require("./sig_proy_comi");
var _sig_proy_comi_destino = require("./sig_proy_comi_destino");
var _sig_proy_comi_ruta = require("./sig_proy_comi_ruta");
var _sig_proy_concepto_gasto = require("./sig_proy_concepto_gasto");
var _sig_proy_destino = require("./sig_proy_destino");
var _sig_proy_destino_cargo = require("./sig_proy_destino_cargo");
var _sig_proy_docu_pasaje = require("./sig_proy_docu_pasaje");
var _sig_proy_pedidos = require("./sig_proy_pedidos");
var _sig_proy_ruta = require("./sig_proy_ruta");
var _sig_proy_subactividad = require("./sig_proy_subactividad");
var _sig_proy_tipo_cargo = require("./sig_proy_tipo_cargo");
var _sig_sedes = require("./sig_sedes");
var _sig_sub_programa_nombre = require("./sig_sub_programa_nombre");
var _sig_subtipos_patrimonio = require("./sig_subtipos_patrimonio");
var _sig_tarea = require("./sig_tarea");
var _sig_techo_presupuestal = require("./sig_techo_presupuestal");
var _sig_tes_registro_compras = require("./sig_tes_registro_compras");
var _sig_tipo_ActProy = require("./sig_tipo_ActProy");
var _sig_tipo_bienes = require("./sig_tipo_bienes");
var _sig_tipo_generico = require("./sig_tipo_generico");
var _sig_tipo_patrimonio = require("./sig_tipo_patrimonio");
var _sig_tipo_proyecto = require("./sig_tipo_proyecto");
var _sig_tmp_cat_justif = require("./sig_tmp_cat_justif");
var _sig_tmp_cua_nec_det_id = require("./sig_tmp_cua_nec_det_id");
var _sig_tmp_equivalencia_meta = require("./sig_tmp_equivalencia_meta");
var _sig_tmp_migracion_metas = require("./sig_tmp_migracion_metas");
var _sig_tmp_pedidos_rutas = require("./sig_tmp_pedidos_rutas");
var _sig_usuario_ejecutora = require("./sig_usuario_ejecutora");
var _sig_valida_techo = require("./sig_valida_techo");
var _t_act_proy = require("./t_act_proy");
var _t_act_proy_nombre = require("./t_act_proy_nombre");
var _t_componente = require("./t_componente");
var _t_componente_nombre = require("./t_componente_nombre");
var _t_finalidad = require("./t_finalidad");
var _t_funcion = require("./t_funcion");
var _t_meta = require("./t_meta");
var _t_programa = require("./t_programa");
var _t_programa_nombre = require("./t_programa_nombre");
var _t_sub_programa = require("./t_sub_programa");
var _t_sub_programa_nombre = require("./t_sub_programa_nombre");
var _temp_SIG_PPR_METFIS_X_SUBFIN = require("./temp_SIG_PPR_METFIS_X_SUBFIN");
var _temp_sig_cua_nec_det_id = require("./temp_sig_cua_nec_det_id");
var _tmpPagosLotes = require("./tmpPagosLotes");
var _tmp_SIG_ASIGNACIONES = require("./tmp_SIG_ASIGNACIONES");
var _tmp_SIG_DETALLE_ACTIVOS = require("./tmp_SIG_DETALLE_ACTIVOS");
var _tmp_SIG_DETALLE_INVENT_FISICO = require("./tmp_SIG_DETALLE_INVENT_FISICO");
var _tmp_SIG_DET_MOVIM_PATRIMONIO = require("./tmp_SIG_DET_MOVIM_PATRIMONIO");
var _tmp_SIG_ESPECIF_TECNICA_ACTIVO = require("./tmp_SIG_ESPECIF_TECNICA_ACTIVO");
var _tmp_SIG_INVENTARIO_FISICO = require("./tmp_SIG_INVENTARIO_FISICO");
var _tmp_cab = require("./tmp_cab");
var _tmp_carga_kit = require("./tmp_carga_kit");
var _tmp_catalogo_procesar_items = require("./tmp_catalogo_procesar_items");
var _tmp_categorias = require("./tmp_categorias");
var _tmp_det = require("./tmp_det");
var _tmp_ejecutora = require("./tmp_ejecutora");
var _tmp_familia = require("./tmp_familia");
var _tmp_formulacion_detalle = require("./tmp_formulacion_detalle");
var _tmp_item = require("./tmp_item");
var _tmp_item0 = require("./tmp_item0");
var _tmp_parametros_pao = require("./tmp_parametros_pao");
var _tmp_per = require("./tmp_per");
var _tmp_ppr_PATRIMONIO = require("./tmp_ppr_PATRIMONIO");
var _tmp_propuesta_fase = require("./tmp_propuesta_fase");
var _tmp_sig_personal = require("./tmp_sig_personal");
var _tmp_techo_cn_fase = require("./tmp_techo_cn_fase");
var _tmp_techo_fase_2 = require("./tmp_techo_fase_2");
var _tmp_techo_fase_3 = require("./tmp_techo_fase_3");
var _tmp_techo_fase_4 = require("./tmp_techo_fase_4");
var _tmp_techo_fase_5 = require("./tmp_techo_fase_5");
var _tmp_techo_fase_6 = require("./tmp_techo_fase_6");
var _tmp_techo_fase_7 = require("./tmp_techo_fase_7");
var _tmp_techo_fase_8 = require("./tmp_techo_fase_8");
var _ubigeo = require("./ubigeo");
var _unidad_medida = require("./unidad_medida");
var _users = require("./users");
var _users_menu = require("./users_menu");
var _users_opcion = require("./users_opcion");

function initModels(sequelize) {
  var ACT_PROY_NOMBRE_FASE = _ACT_PROY_NOMBRE_FASE(sequelize, DataTypes);
  var ACUM_X_UBIGEO_DISP_LEGAL = _ACUM_X_UBIGEO_DISP_LEGAL(sequelize, DataTypes);
  var Act_Proy = _Act_Proy(sequelize, DataTypes);
  var Act_Proy_Nombre = _Act_Proy_Nombre(sequelize, DataTypes);
  var Acumulado = _Acumulado(sequelize, DataTypes);
  var BANCO_CUENTA = _BANCO_CUENTA(sequelize, DataTypes);
  var Banco = _Banco(sequelize, DataTypes);
  var CARGA_ARCHIVOS = _CARGA_ARCHIVOS(sequelize, DataTypes);
  var CARGA_ARCHIVOS_DET = _CARGA_ARCHIVOS_DET(sequelize, DataTypes);
  var CATALOGO_ALIAS = _CATALOGO_ALIAS(sequelize, DataTypes);
  var CATALOGO_BIEN_SERV = _CATALOGO_BIEN_SERV(sequelize, DataTypes);
  var CATALOGO_BIEN_SERV_BK_III = _CATALOGO_BIEN_SERV_BK_III(sequelize, DataTypes);
  var CATALOGO_BIEN_SERV_ORIGINAL = _CATALOGO_BIEN_SERV_ORIGINAL(sequelize, DataTypes);
  var CATALOGO_EQUIVALENCIA_127 = _CATALOGO_EQUIVALENCIA_127(sequelize, DataTypes);
  var CATALOGO_EQUIVALENCIA_146 = _CATALOGO_EQUIVALENCIA_146(sequelize, DataTypes);
  var CATEGORIA_CIIU = _CATEGORIA_CIIU(sequelize, DataTypes);
  var COMPONENTE_NOMBRE_FASE = _COMPONENTE_NOMBRE_FASE(sequelize, DataTypes);
  var CONTROL_TRANSACCION = _CONTROL_TRANSACCION(sequelize, DataTypes);
  var CONTROL_TRANSACCION_DESTINO = _CONTROL_TRANSACCION_DESTINO(sequelize, DataTypes);
  var CONTROL_TRANSACCION_DETALLE = _CONTROL_TRANSACCION_DETALLE(sequelize, DataTypes);
  var Categoria_Gasto = _Categoria_Gasto(sequelize, DataTypes);
  var Componente = _Componente(sequelize, DataTypes);
  var Componente_Ejec = _Componente_Ejec(sequelize, DataTypes);
  var Componente_Nombre = _Componente_Nombre(sequelize, DataTypes);
  var DISPOSITIVOS_LEGALES = _DISPOSITIVOS_LEGALES(sequelize, DataTypes);
  var EQUIVALENCIA_META = _EQUIVALENCIA_META(sequelize, DataTypes);
  var ESTRATEGIA_NACIONAL = _ESTRATEGIA_NACIONAL(sequelize, DataTypes);
  var ESTRATEGIA_NACIONAL_EJEC = _ESTRATEGIA_NACIONAL_EJEC(sequelize, DataTypes);
  var ESTRATEGIA_NACIONAL_NOMBRE = _ESTRATEGIA_NACIONAL_NOMBRE(sequelize, DataTypes);
  var ESTRATEGIA_NACIONAL_TMP = _ESTRATEGIA_NACIONAL_TMP(sequelize, DataTypes);
  var FERIADO = _FERIADO(sequelize, DataTypes);
  var FINALIDAD_FASE = _FINALIDAD_FASE(sequelize, DataTypes);
  var FUENTE_FINANC_AGREGADA = _FUENTE_FINANC_AGREGADA(sequelize, DataTypes);
  var FUNCION_AMBITO = _FUNCION_AMBITO(sequelize, DataTypes);
  var FUNCION_FASE = _FUNCION_FASE(sequelize, DataTypes);
  var Finalidad = _Finalidad(sequelize, DataTypes);
  var Fuente_Financ = _Fuente_Financ(sequelize, DataTypes);
  var Fuente_Financ_Ejec = _Fuente_Financ_Ejec(sequelize, DataTypes);
  var Funcion = _Funcion(sequelize, DataTypes);
  var GRUPO_CIIU = _GRUPO_CIIU(sequelize, DataTypes);
  var Grupo_Gasto = _Grupo_Gasto(sequelize, DataTypes);
  var Hoja1 = _Hoja1(sequelize, DataTypes);
  var Hoja2 = _Hoja2(sequelize, DataTypes);
  var INTF_CAB = _INTF_CAB(sequelize, DataTypes);
  var INTF_CAB_RET = _INTF_CAB_RET(sequelize, DataTypes);
  var INTF_DET = _INTF_DET(sequelize, DataTypes);
  var INTF_LOG = _INTF_LOG(sequelize, DataTypes);
  var INTF_NOT = _INTF_NOT(sequelize, DataTypes);
  var LOG_TIPOS_TRANSMISIONES = _LOG_TIPOS_TRANSMISIONES(sequelize, DataTypes);
  var LOG_TRANSFERENCIA = _LOG_TRANSFERENCIA(sequelize, DataTypes);
  var MARCA = _MARCA(sequelize, DataTypes);
  var MCONVPRO = _MCONVPRO(sequelize, DataTypes);
  var META_PRIORIZADA_PCA_X_CLASIF = _META_PRIORIZADA_PCA_X_CLASIF(sequelize, DataTypes);
  var MMEDICAM = _MMEDICAM(sequelize, DataTypes);
  var MPP_PCA_X_ESPECIFICA = _MPP_PCA_X_ESPECIFICA(sequelize, DataTypes);
  var MPP_PCA_X_GENERICA = _MPP_PCA_X_GENERICA(sequelize, DataTypes);
  var MP_CENTRO_COSTO = _MP_CENTRO_COSTO(sequelize, DataTypes);
  var MP_COLOR = _MP_COLOR(sequelize, DataTypes);
  var MP_CONDICION = _MP_CONDICION(sequelize, DataTypes);
  var MP_ESTADO = _MP_ESTADO(sequelize, DataTypes);
  var MP_INVENTARIO_EXPORT = _MP_INVENTARIO_EXPORT(sequelize, DataTypes);
  var MP_INVENTARIO_IMPORT = _MP_INVENTARIO_IMPORT(sequelize, DataTypes);
  var MP_MARCA = _MP_MARCA(sequelize, DataTypes);
  var MP_MODELO = _MP_MODELO(sequelize, DataTypes);
  var MP_UBICACION = _MP_UBICACION(sequelize, DataTypes);
  var MP_USUARIO = _MP_USUARIO(sequelize, DataTypes);
  var Maestro_Documento = _Maestro_Documento(sequelize, DataTypes);
  var Origen = _Origen(sequelize, DataTypes);
  var PLAN_CTB_MAYOR = _PLAN_CTB_MAYOR(sequelize, DataTypes);
  var PLAN_CTB_SUB_CTA = _PLAN_CTB_SUB_CTA(sequelize, DataTypes);
  var PROGRAMA_NOMBRE_FASE = _PROGRAMA_NOMBRE_FASE(sequelize, DataTypes);
  var PROGRAMA_PPTO = _PROGRAMA_PPTO(sequelize, DataTypes);
  var Persona = _Persona(sequelize, DataTypes);
  var Programa = _Programa(sequelize, DataTypes);
  var Programa_Nombre = _Programa_Nombre(sequelize, DataTypes);
  var SECCION_CIIU = _SECCION_CIIU(sequelize, DataTypes);
  var SEG_APLICACION = _SEG_APLICACION(sequelize, DataTypes);
  var SEG_AUDITORIA = _SEG_AUDITORIA(sequelize, DataTypes);
  var SEG_HISTORICO_PWD = _SEG_HISTORICO_PWD(sequelize, DataTypes);
  var SEG_MODULO = _SEG_MODULO(sequelize, DataTypes);
  var SEG_OPCION = _SEG_OPCION(sequelize, DataTypes);
  var SEG_PAGINA = _SEG_PAGINA(sequelize, DataTypes);
  var SEG_POLITICA = _SEG_POLITICA(sequelize, DataTypes);
  var SEG_PRIVILEGIO = _SEG_PRIVILEGIO(sequelize, DataTypes);
  var SEG_ROL = _SEG_ROL(sequelize, DataTypes);
  var SEG_ROL_APLICACION = _SEG_ROL_APLICACION(sequelize, DataTypes);
  var SEG_ROL_PAGINA = _SEG_ROL_PAGINA(sequelize, DataTypes);
  var SEG_ROL_PAGINA_PRIVILEGIO = _SEG_ROL_PAGINA_PRIVILEGIO(sequelize, DataTypes);
  var SEG_ROL_USUARIO = _SEG_ROL_USUARIO(sequelize, DataTypes);
  var SEG_TIPO_AUDITORIA = _SEG_TIPO_AUDITORIA(sequelize, DataTypes);
  var SEG_USUARIO = _SEG_USUARIO(sequelize, DataTypes);
  var SGE_ADQUISICIONES = _SGE_ADQUISICIONES(sequelize, DataTypes);
  var SGE_ADQUISICIONES_EXP = _SGE_ADQUISICIONES_EXP(sequelize, DataTypes);
  var SGE_ADQUISICIONES_TRX = _SGE_ADQUISICIONES_TRX(sequelize, DataTypes);
  var SGE_CONTRATISTAS_TRX = _SGE_CONTRATISTAS_TRX(sequelize, DataTypes);
  var SGE_KARDEX_MENSUAL = _SGE_KARDEX_MENSUAL(sequelize, DataTypes);
  var SGE_KARDEX_MENSUAL_EXP = _SGE_KARDEX_MENSUAL_EXP(sequelize, DataTypes);
  var SGE_KARDEX_MENSUAL_TRX = _SGE_KARDEX_MENSUAL_TRX(sequelize, DataTypes);
  var SGE_PAAC_MENSUAL = _SGE_PAAC_MENSUAL(sequelize, DataTypes);
  var SGE_PAAC_MENSUAL_EXP = _SGE_PAAC_MENSUAL_EXP(sequelize, DataTypes);
  var SGE_PAAC_MENSUAL_TRX = _SGE_PAAC_MENSUAL_TRX(sequelize, DataTypes);
  var SGE_PATRIMONIO = _SGE_PATRIMONIO(sequelize, DataTypes);
  var SGE_PATRIMONIO_EXP = _SGE_PATRIMONIO_EXP(sequelize, DataTypes);
  var SGE_PATRIMONIO_TRX = _SGE_PATRIMONIO_TRX(sequelize, DataTypes);
  var SIG_ACUMULADO_DET = _SIG_ACUMULADO_DET(sequelize, DataTypes);
  var SIG_AJUSTE_POSTERIOR = _SIG_AJUSTE_POSTERIOR(sequelize, DataTypes);
  var SIG_ALMACEN = _SIG_ALMACEN(sequelize, DataTypes);
  var SIG_ALMACEN_CUF = _SIG_ALMACEN_CUF(sequelize, DataTypes);
  var SIG_ASIENTO_CUENTA_REGISTRO = _SIG_ASIENTO_CUENTA_REGISTRO(sequelize, DataTypes);
  var SIG_ASIGNACIONES = _SIG_ASIGNACIONES(sequelize, DataTypes);
  var SIG_ASIGNACIONES_BD = _SIG_ASIGNACIONES_BD(sequelize, DataTypes);
  var SIG_AUDITORIA = _SIG_AUDITORIA(sequelize, DataTypes);
  var SIG_BIENES_DURADEROS = _SIG_BIENES_DURADEROS(sequelize, DataTypes);
  var SIG_CAB_DISTRIBUCION = _SIG_CAB_DISTRIBUCION(sequelize, DataTypes);
  var SIG_CARGO = _SIG_CARGO(sequelize, DataTypes);
  var SIG_CATALOGO_BIEN_SERV_AGRU = _SIG_CATALOGO_BIEN_SERV_AGRU(sequelize, DataTypes);
  var SIG_CATALOGO_BIEN_SERV_ALTERNO = _SIG_CATALOGO_BIEN_SERV_ALTERNO(sequelize, DataTypes);
  var SIG_CATALOGO_BIEN_SERV_EQUI = _SIG_CATALOGO_BIEN_SERV_EQUI(sequelize, DataTypes);
  var SIG_CATALOGO_BIEN_SERV_PRECIO = _SIG_CATALOGO_BIEN_SERV_PRECIO(sequelize, DataTypes);
  var SIG_CATALOGO_BIEN_SERV_UNIDAD = _SIG_CATALOGO_BIEN_SERV_UNIDAD(sequelize, DataTypes);
  var SIG_CATALOGO_COMPONENTES = _SIG_CATALOGO_COMPONENTES(sequelize, DataTypes);
  var SIG_CATALOGO_EQUI_ADQUIS = _SIG_CATALOGO_EQUI_ADQUIS(sequelize, DataTypes);
  var SIG_CATALOGO_ONU = _SIG_CATALOGO_ONU(sequelize, DataTypes);
  var SIG_CATALOGO_PRESENTACION = _SIG_CATALOGO_PRESENTACION(sequelize, DataTypes);
  var SIG_CATALOGO_RUBRO = _SIG_CATALOGO_RUBRO(sequelize, DataTypes);
  var SIG_CATALOGO_RUBRO_X_ITEM = _SIG_CATALOGO_RUBRO_X_ITEM(sequelize, DataTypes);
  var SIG_CATALOGO_SECTOR = _SIG_CATALOGO_SECTOR(sequelize, DataTypes);
  var SIG_CATALOGO_UNIDAD_EJECUTORA = _SIG_CATALOGO_UNIDAD_EJECUTORA(sequelize, DataTypes);
  var SIG_CATEGORIA_OCUPACIONAL = _SIG_CATEGORIA_OCUPACIONAL(sequelize, DataTypes);
  var SIG_CATEGORIA_TIPO_PATRIMONIO = _SIG_CATEGORIA_TIPO_PATRIMONIO(sequelize, DataTypes);
  var SIG_CAT_BIEN_SERV_EQUI_PAO = _SIG_CAT_BIEN_SERV_EQUI_PAO(sequelize, DataTypes);
  var SIG_CAT_BIEN_SERV_PRECIO_FASE = _SIG_CAT_BIEN_SERV_PRECIO_FASE(sequelize, DataTypes);
  var SIG_CAT_BIEN_SERV_PRECIO_PROC = _SIG_CAT_BIEN_SERV_PRECIO_PROC(sequelize, DataTypes);
  var SIG_CAUSAL_ALTA = _SIG_CAUSAL_ALTA(sequelize, DataTypes);
  var SIG_CAUSAL_BAJA = _SIG_CAUSAL_BAJA(sequelize, DataTypes);
  var SIG_CENTRO_COSTO = _SIG_CENTRO_COSTO(sequelize, DataTypes);
  var SIG_CENTRO_COSTO_BK_III = _SIG_CENTRO_COSTO_BK_III(sequelize, DataTypes);
  var SIG_CENTRO_COSTO_PERSONAL = _SIG_CENTRO_COSTO_PERSONAL(sequelize, DataTypes);
  var SIG_CERTIFICACION = _SIG_CERTIFICACION(sequelize, DataTypes);
  var SIG_CERTIFICACION_DEPE = _SIG_CERTIFICACION_DEPE(sequelize, DataTypes);
  var SIG_CERTIFICACION_DOC = _SIG_CERTIFICACION_DOC(sequelize, DataTypes);
  var SIG_CERTIFICACION_DOC_SEC = _SIG_CERTIFICACION_DOC_SEC(sequelize, DataTypes);
  var SIG_CERTIFICACION_FASE = _SIG_CERTIFICACION_FASE(sequelize, DataTypes);
  var SIG_CERTIFICACION_MOV = _SIG_CERTIFICACION_MOV(sequelize, DataTypes);
  var SIG_CERTIFICACION_OPERACION = _SIG_CERTIFICACION_OPERACION(sequelize, DataTypes);
  var SIG_CERTIFICACION_OPER_FUENTE = _SIG_CERTIFICACION_OPER_FUENTE(sequelize, DataTypes);
  var SIG_CERTIFICACION_PPTO = _SIG_CERTIFICACION_PPTO(sequelize, DataTypes);
  var SIG_CLASE_ATRIBUTO = _SIG_CLASE_ATRIBUTO(sequelize, DataTypes);
  var SIG_CLASIFICADOR_GASTO = _SIG_CLASIFICADOR_GASTO(sequelize, DataTypes);
  var SIG_COLORES = _SIG_COLORES(sequelize, DataTypes);
  var SIG_COMITE = _SIG_COMITE(sequelize, DataTypes);
  var SIG_COMITE_INTEGRANTE = _SIG_COMITE_INTEGRANTE(sequelize, DataTypes);
  var SIG_COMPONENTES_ACTIVO = _SIG_COMPONENTES_ACTIVO(sequelize, DataTypes);
  var SIG_CONCEPTO_FAMILIA = _SIG_CONCEPTO_FAMILIA(sequelize, DataTypes);
  var SIG_CONCEPTO_FAMILIA_EJECUTORA = _SIG_CONCEPTO_FAMILIA_EJECUTORA(sequelize, DataTypes);
  var SIG_CONCEPTO_GASTO = _SIG_CONCEPTO_GASTO(sequelize, DataTypes);
  var SIG_CONCEPTO_GASTO_CTA = _SIG_CONCEPTO_GASTO_CTA(sequelize, DataTypes);
  var SIG_CONCEPTO_MAESTRO = _SIG_CONCEPTO_MAESTRO(sequelize, DataTypes);
  var SIG_CONCESIONES = _SIG_CONCESIONES(sequelize, DataTypes);
  var SIG_CONSORCIOS = _SIG_CONSORCIOS(sequelize, DataTypes);
  var SIG_CONSORCIOS_DET = _SIG_CONSORCIOS_DET(sequelize, DataTypes);
  var SIG_CONSTRUCCIONES = _SIG_CONSTRUCCIONES(sequelize, DataTypes);
  var SIG_CONSTRUCCIONES_DET = _SIG_CONSTRUCCIONES_DET(sequelize, DataTypes);
  var SIG_CONSTRUCCIONES_MOVIMTO = _SIG_CONSTRUCCIONES_MOVIMTO(sequelize, DataTypes);
  var SIG_CONTRATISTAS = _SIG_CONTRATISTAS(sequelize, DataTypes);
  var SIG_CONTRATISTAS_BIEN_SERV = _SIG_CONTRATISTAS_BIEN_SERV(sequelize, DataTypes);
  var SIG_CONTRATISTA_RNP = _SIG_CONTRATISTA_RNP(sequelize, DataTypes);
  var SIG_CONTRATOS = _SIG_CONTRATOS(sequelize, DataTypes);
  var SIG_CONTRATO_DET = _SIG_CONTRATO_DET(sequelize, DataTypes);
  var SIG_CONTRATO_DET_DEPE = _SIG_CONTRATO_DET_DEPE(sequelize, DataTypes);
  var SIG_CONTRATO_DET_PPTAL = _SIG_CONTRATO_DET_PPTAL(sequelize, DataTypes);
  var SIG_CONTRATO_DOCUMENTO = _SIG_CONTRATO_DOCUMENTO(sequelize, DataTypes);
  var SIG_CONTRATO_GARANTIA_MOV = _SIG_CONTRATO_GARANTIA_MOV(sequelize, DataTypes);
  var SIG_CONTRATO_INTERFASE = _SIG_CONTRATO_INTERFASE(sequelize, DataTypes);
  var SIG_CONTRATO_ITEM = _SIG_CONTRATO_ITEM(sequelize, DataTypes);
  var SIG_CONTRATO_ITEM_DETALLE = _SIG_CONTRATO_ITEM_DETALLE(sequelize, DataTypes);
  var SIG_CONTRATO_ITEM_DIST = _SIG_CONTRATO_ITEM_DIST(sequelize, DataTypes);
  var SIG_CONTRATO_ITEM_DIST_CC = _SIG_CONTRATO_ITEM_DIST_CC(sequelize, DataTypes);
  var SIG_CONTRATO_ITEM_MENSUAL = _SIG_CONTRATO_ITEM_MENSUAL(sequelize, DataTypes);
  var SIG_CONTRATO_ITEM_MENS_DEPE = _SIG_CONTRATO_ITEM_MENS_DEPE(sequelize, DataTypes);
  var SIG_CONTRATO_ITEM_MENS_PED = _SIG_CONTRATO_ITEM_MENS_PED(sequelize, DataTypes);
  var SIG_CONTRATO_ITEM_MENS_PPTAL = _SIG_CONTRATO_ITEM_MENS_PPTAL(sequelize, DataTypes);
  var SIG_CONTRATO_ITEM_PPTAL = _SIG_CONTRATO_ITEM_PPTAL(sequelize, DataTypes);
  var SIG_CONTRATO_ITEM_SECUENCIA = _SIG_CONTRATO_ITEM_SECUENCIA(sequelize, DataTypes);
  var SIG_CONTRATO_LOTE = _SIG_CONTRATO_LOTE(sequelize, DataTypes);
  var SIG_CONTRATO_MOVIMIENTO = _SIG_CONTRATO_MOVIMIENTO(sequelize, DataTypes);
  var SIG_CONTRATO_MOVIM_ITEM = _SIG_CONTRATO_MOVIM_ITEM(sequelize, DataTypes);
  var SIG_CONTRATO_MOVIM_PAGO = _SIG_CONTRATO_MOVIM_PAGO(sequelize, DataTypes);
  var SIG_CONTRATO_MOVITEM_PPTAL = _SIG_CONTRATO_MOVITEM_PPTAL(sequelize, DataTypes);
  var SIG_CONTRATO_NOTAS = _SIG_CONTRATO_NOTAS(sequelize, DataTypes);
  var SIG_CONTRATO_PENALIDAD_OTROS = _SIG_CONTRATO_PENALIDAD_OTROS(sequelize, DataTypes);
  var SIG_CONTRATO_SECUENCIA = _SIG_CONTRATO_SECUENCIA(sequelize, DataTypes);
  var SIG_CONVENIO = _SIG_CONVENIO(sequelize, DataTypes);
  var SIG_CONVOCATORIA = _SIG_CONVOCATORIA(sequelize, DataTypes);
  var SIG_CONVOCATORIA_CALENDARIO = _SIG_CONVOCATORIA_CALENDARIO(sequelize, DataTypes);
  var SIG_CONVOCATORIA_CALENDA_CAB = _SIG_CONVOCATORIA_CALENDA_CAB(sequelize, DataTypes);
  var SIG_CONVOCATORIA_ETAPAS = _SIG_CONVOCATORIA_ETAPAS(sequelize, DataTypes);
  var SIG_CONVOCATORIA_FACTOR = _SIG_CONVOCATORIA_FACTOR(sequelize, DataTypes);
  var SIG_CONVOCATORIA_FUENTE = _SIG_CONVOCATORIA_FUENTE(sequelize, DataTypes);
  var SIG_CONVOCATORIA_INVITACION = _SIG_CONVOCATORIA_INVITACION(sequelize, DataTypes);
  var SIG_CONVOCATORIA_INV_CONDICION = _SIG_CONVOCATORIA_INV_CONDICION(sequelize, DataTypes);
  var SIG_CONVOCATORIA_ITEM = _SIG_CONVOCATORIA_ITEM(sequelize, DataTypes);
  var SIG_CONVOCATORIA_ITEM_DETALLE = _SIG_CONVOCATORIA_ITEM_DETALLE(sequelize, DataTypes);
  var SIG_CONVOCATORIA_ITEM_MENSUAL = _SIG_CONVOCATORIA_ITEM_MENSUAL(sequelize, DataTypes);
  var SIG_CONVOCATORIA_ITEM_PPTAL = _SIG_CONVOCATORIA_ITEM_PPTAL(sequelize, DataTypes);
  var SIG_CONVOCATORIA_LOTE = _SIG_CONVOCATORIA_LOTE(sequelize, DataTypes);
  var SIG_CONVOCATORIA_LOTE_FACTOR = _SIG_CONVOCATORIA_LOTE_FACTOR(sequelize, DataTypes);
  var SIG_CONVOCATORIA_REQUISITOS = _SIG_CONVOCATORIA_REQUISITOS(sequelize, DataTypes);
  var SIG_CONVOCATORIA_SECUENCIA = _SIG_CONVOCATORIA_SECUENCIA(sequelize, DataTypes);
  var SIG_CUADRO_ADQUISICION = _SIG_CUADRO_ADQUISICION(sequelize, DataTypes);
  var SIG_CUADRO_ADQ_VALIDA = _SIG_CUADRO_ADQ_VALIDA(sequelize, DataTypes);
  var SIG_CUADRO_ANUAL_EQUIVALENCIA = _SIG_CUADRO_ANUAL_EQUIVALENCIA(sequelize, DataTypes);
  var SIG_CUADRO_MODIFICADO = _SIG_CUADRO_MODIFICADO(sequelize, DataTypes);
  var SIG_CUADRO_MODIFICADO_CMN = _SIG_CUADRO_MODIFICADO_CMN(sequelize, DataTypes);
  var SIG_CUADRO_MODIFICADO_DET = _SIG_CUADRO_MODIFICADO_DET(sequelize, DataTypes);
  var SIG_CUADRO_MODIFICADO_DET_ORI = _SIG_CUADRO_MODIFICADO_DET_ORI(sequelize, DataTypes);
  var SIG_CUADRO_MODIFICADO_DET_REF = _SIG_CUADRO_MODIFICADO_DET_REF(sequelize, DataTypes);
  var SIG_CUADRO_MODIFICADO_SALDO = _SIG_CUADRO_MODIFICADO_SALDO(sequelize, DataTypes);
  var SIG_CUADRO_NECESIDAD = _SIG_CUADRO_NECESIDAD(sequelize, DataTypes);
  var SIG_CUADRO_NECESIDAD_DET = _SIG_CUADRO_NECESIDAD_DET(sequelize, DataTypes);
  var SIG_CUADRO_NECESIDAD_DET_PAAC = _SIG_CUADRO_NECESIDAD_DET_PAAC(sequelize, DataTypes);
  var SIG_CUADRO_STOCK_ESTIMADO = _SIG_CUADRO_STOCK_ESTIMADO(sequelize, DataTypes);
  var SIG_CUADRO_TRANSFERENCIA = _SIG_CUADRO_TRANSFERENCIA(sequelize, DataTypes);
  var SIG_CUADRO_TRANSFERENCIA_DET = _SIG_CUADRO_TRANSFERENCIA_DET(sequelize, DataTypes);
  var SIG_CUENTA_ACTO_ADM = _SIG_CUENTA_ACTO_ADM(sequelize, DataTypes);
  var SIG_CUENTA_CONCESION = _SIG_CUENTA_CONCESION(sequelize, DataTypes);
  var SIG_CUENTA_CONSTRUCCION = _SIG_CUENTA_CONSTRUCCION(sequelize, DataTypes);
  var SIG_CUENTA_MOVIMTO = _SIG_CUENTA_MOVIMTO(sequelize, DataTypes);
  var SIG_CUENTA_PARAMETRO_ANIO = _SIG_CUENTA_PARAMETRO_ANIO(sequelize, DataTypes);
  var SIG_CUENTA_TIPO_PATRIMONIO = _SIG_CUENTA_TIPO_PATRIMONIO(sequelize, DataTypes);
  var SIG_DA_PRESUPUESTO = _SIG_DA_PRESUPUESTO(sequelize, DataTypes);
  var SIG_DEPEN_META_CUADRO = _SIG_DEPEN_META_CUADRO(sequelize, DataTypes);
  var SIG_DESP_DOC_RENDIDO = _SIG_DESP_DOC_RENDIDO(sequelize, DataTypes);
  var SIG_DESP_PEDIDOS = _SIG_DESP_PEDIDOS(sequelize, DataTypes);
  var SIG_DESP_PERSONAL = _SIG_DESP_PERSONAL(sequelize, DataTypes);
  var SIG_DESP_PLANILLA_PASAJE = _SIG_DESP_PLANILLA_PASAJE(sequelize, DataTypes);
  var SIG_DESP_PLAN_PAS_PPTA = _SIG_DESP_PLAN_PAS_PPTA(sequelize, DataTypes);
  var SIG_DESTINOS = _SIG_DESTINOS(sequelize, DataTypes);
  var SIG_DETALLE_ACTIVOS = _SIG_DETALLE_ACTIVOS(sequelize, DataTypes);
  var SIG_DETALLE_ALMACEN_LOTES = _SIG_DETALLE_ALMACEN_LOTES(sequelize, DataTypes);
  var SIG_DETALLE_ANEXO_CUADRO = _SIG_DETALLE_ANEXO_CUADRO(sequelize, DataTypes);
  var SIG_DETALLE_BIENES = _SIG_DETALLE_BIENES(sequelize, DataTypes);
  var SIG_DETALLE_BSERV_CUADRO = _SIG_DETALLE_BSERV_CUADRO(sequelize, DataTypes);
  var SIG_DETALLE_CONCESIONES = _SIG_DETALLE_CONCESIONES(sequelize, DataTypes);
  var SIG_DETALLE_CTA_ALMACEN = _SIG_DETALLE_CTA_ALMACEN(sequelize, DataTypes);
  var SIG_DETALLE_CTA_CONFOR_SERV = _SIG_DETALLE_CTA_CONFOR_SERV(sequelize, DataTypes);
  var SIG_DETALLE_INVENT_FISICO = _SIG_DETALLE_INVENT_FISICO(sequelize, DataTypes);
  var SIG_DETALLE_ITEM_ALMACEN = _SIG_DETALLE_ITEM_ALMACEN(sequelize, DataTypes);
  var SIG_DETALLE_ITEM_CONFOR_SERV = _SIG_DETALLE_ITEM_CONFOR_SERV(sequelize, DataTypes);
  var SIG_DETALLE_MEJORAS = _SIG_DETALLE_MEJORAS(sequelize, DataTypes);
  var SIG_DETALLE_METAS_CUADRO = _SIG_DETALLE_METAS_CUADRO(sequelize, DataTypes);
  var SIG_DETALLE_MOVIM_ALMACEN = _SIG_DETALLE_MOVIM_ALMACEN(sequelize, DataTypes);
  var SIG_DETALLE_MOVIM_ALMACEN_EST = _SIG_DETALLE_MOVIM_ALMACEN_EST(sequelize, DataTypes);
  var SIG_DETALLE_MOVIM_CONFOR_SERV = _SIG_DETALLE_MOVIM_CONFOR_SERV(sequelize, DataTypes);
  var SIG_DETALLE_MOVIM_PPTO = _SIG_DETALLE_MOVIM_PPTO(sequelize, DataTypes);
  var SIG_DETALLE_MOVIM_PPTO_CF = _SIG_DETALLE_MOVIM_PPTO_CF(sequelize, DataTypes);
  var SIG_DETALLE_PECOSA = _SIG_DETALLE_PECOSA(sequelize, DataTypes);
  var SIG_DETALLE_PEDIDOS = _SIG_DETALLE_PEDIDOS(sequelize, DataTypes);
  var SIG_DETALLE_PEDIDOS_ANEXO = _SIG_DETALLE_PEDIDOS_ANEXO(sequelize, DataTypes);
  var SIG_DETALLE_PEDIDO_COMISIONADO = _SIG_DETALLE_PEDIDO_COMISIONADO(sequelize, DataTypes);
  var SIG_DETALLE_PEDIDO_CUADRO = _SIG_DETALLE_PEDIDO_CUADRO(sequelize, DataTypes);
  var SIG_DET_ADMINISTRATIVO = _SIG_DET_ADMINISTRATIVO(sequelize, DataTypes);
  var SIG_DET_ADMIN_INM_COMP = _SIG_DET_ADMIN_INM_COMP(sequelize, DataTypes);
  var SIG_DET_CAUSAL_ALTA = _SIG_DET_CAUSAL_ALTA(sequelize, DataTypes);
  var SIG_DET_DISTRIBUCION = _SIG_DET_DISTRIBUCION(sequelize, DataTypes);
  var SIG_DET_MOVIM_PATRIMONIO = _SIG_DET_MOVIM_PATRIMONIO(sequelize, DataTypes);
  var SIG_DEVENGADO = _SIG_DEVENGADO(sequelize, DataTypes);
  var SIG_DEVENGADO_DOC_SECU = _SIG_DEVENGADO_DOC_SECU(sequelize, DataTypes);
  var SIG_DEVENGADO_ITEM = _SIG_DEVENGADO_ITEM(sequelize, DataTypes);
  var SIG_DEVENGADO_ITEM_PPTO = _SIG_DEVENGADO_ITEM_PPTO(sequelize, DataTypes);
  var SIG_DEVENGADO_PENALIDAD_OTROS = _SIG_DEVENGADO_PENALIDAD_OTROS(sequelize, DataTypes);
  var SIG_DEVENGADO_SECUENCIA = _SIG_DEVENGADO_SECUENCIA(sequelize, DataTypes);
  var SIG_DEVOLUCION_CAB = _SIG_DEVOLUCION_CAB(sequelize, DataTypes);
  var SIG_DEVOLUCION_DET = _SIG_DEVOLUCION_DET(sequelize, DataTypes);
  var SIG_DEVOLUCION_PPTAL = _SIG_DEVOLUCION_PPTAL(sequelize, DataTypes);
  var SIG_DIVISION = _SIG_DIVISION(sequelize, DataTypes);
  var SIG_DIVISION_FONDO = _SIG_DIVISION_FONDO(sequelize, DataTypes);
  var SIG_DOCUMENTO_ESTADO = _SIG_DOCUMENTO_ESTADO(sequelize, DataTypes);
  var SIG_ENCARGO_ITEM_ANEXO = _SIG_ENCARGO_ITEM_ANEXO(sequelize, DataTypes);
  var SIG_ENCARGO_REQ = _SIG_ENCARGO_REQ(sequelize, DataTypes);
  var SIG_ENCARGO_REQ_DET = _SIG_ENCARGO_REQ_DET(sequelize, DataTypes);
  var SIG_ENCARGO_REQ_EXP = _SIG_ENCARGO_REQ_EXP(sequelize, DataTypes);
  var SIG_ENCARGO_REQ_ITEM = _SIG_ENCARGO_REQ_ITEM(sequelize, DataTypes);
  var SIG_ENTIDAD_DONANTE = _SIG_ENTIDAD_DONANTE(sequelize, DataTypes);
  var SIG_EQUIVALENCIA_CATALOGO = _SIG_EQUIVALENCIA_CATALOGO(sequelize, DataTypes);
  var SIG_EQUIVALENCIA_CCOSTO_META = _SIG_EQUIVALENCIA_CCOSTO_META(sequelize, DataTypes);
  var SIG_EQUIVALENCIA_CENTRO = _SIG_EQUIVALENCIA_CENTRO(sequelize, DataTypes);
  var SIG_EQUIVALENCIA_CENTRO_BD = _SIG_EQUIVALENCIA_CENTRO_BD(sequelize, DataTypes);
  var SIG_EQUIVALENCIA_SUBFIN = _SIG_EQUIVALENCIA_SUBFIN(sequelize, DataTypes);
  var SIG_ESCALAS_SEDE_DEPE = _SIG_ESCALAS_SEDE_DEPE(sequelize, DataTypes);
  var SIG_ESPECIFICAS_TECNICAS = _SIG_ESPECIFICAS_TECNICAS(sequelize, DataTypes);
  var SIG_ESPECIF_TECNICA_ACTIVO = _SIG_ESPECIF_TECNICA_ACTIVO(sequelize, DataTypes);
  var SIG_ESPECIF_TECNICA_BD = _SIG_ESPECIF_TECNICA_BD(sequelize, DataTypes);
  var SIG_EXP_SIGA = _SIG_EXP_SIGA(sequelize, DataTypes);
  var SIG_EXP_SIGA_DOCU = _SIG_EXP_SIGA_DOCU(sequelize, DataTypes);
  var SIG_EXP_SIGA_PPTO = _SIG_EXP_SIGA_PPTO(sequelize, DataTypes);
  var SIG_EXP_SIGA_SECU = _SIG_EXP_SIGA_SECU(sequelize, DataTypes);
  var SIG_FACTOR_AJUSTE_ANUAL = _SIG_FACTOR_AJUSTE_ANUAL(sequelize, DataTypes);
  var SIG_FACTOR_AJUSTE_MENSUAL = _SIG_FACTOR_AJUSTE_MENSUAL(sequelize, DataTypes);
  var SIG_FACTOR_EVALUACION = _SIG_FACTOR_EVALUACION(sequelize, DataTypes);
  var SIG_FALTANTES_INVENT_FISICO = _SIG_FALTANTES_INVENT_FISICO(sequelize, DataTypes);
  var SIG_FAMILIA_CLASIFICADOR = _SIG_FAMILIA_CLASIFICADOR(sequelize, DataTypes);
  var SIG_FAMILIA_CLAS_EJECUTORA = _SIG_FAMILIA_CLAS_EJECUTORA(sequelize, DataTypes);
  var SIG_FAMILIA_CUENTA = _SIG_FAMILIA_CUENTA(sequelize, DataTypes);
  var SIG_FAMILIA_CUENTAT = _SIG_FAMILIA_CUENTAT(sequelize, DataTypes);
  var SIG_FAMILIA_CUENTA_EJECUTORA = _SIG_FAMILIA_CUENTA_EJECUTORA(sequelize, DataTypes);
  var SIG_FAMILIA_CUENTA_EQUIV = _SIG_FAMILIA_CUENTA_EQUIV(sequelize, DataTypes);
  var SIG_FAMILIA_ESNI = _SIG_FAMILIA_ESNI(sequelize, DataTypes);
  var SIG_GRUPO_NOTA = _SIG_GRUPO_NOTA(sequelize, DataTypes);
  var SIG_GUIA_REMISION = _SIG_GUIA_REMISION(sequelize, DataTypes);
  var SIG_GUIA_REMISION_DET = _SIG_GUIA_REMISION_DET(sequelize, DataTypes);
  var SIG_HT_MOVIM_CONTABLE = _SIG_HT_MOVIM_CONTABLE(sequelize, DataTypes);
  var SIG_HT_MOVIM_MENSUAL = _SIG_HT_MOVIM_MENSUAL(sequelize, DataTypes);
  var SIG_IMPORTA_CONTROL = _SIG_IMPORTA_CONTROL(sequelize, DataTypes);
  var SIG_INM_COMPONENTE = _SIG_INM_COMPONENTE(sequelize, DataTypes);
  var SIG_INM_COMPONENTES_IF = _SIG_INM_COMPONENTES_IF(sequelize, DataTypes);
  var SIG_INM_COMPONENTE_AJUSTE = _SIG_INM_COMPONENTE_AJUSTE(sequelize, DataTypes);
  var SIG_INM_COMPONENTE_CUENTA = _SIG_INM_COMPONENTE_CUENTA(sequelize, DataTypes);
  var SIG_INM_COMPONENTE_ESP_TECNICA = _SIG_INM_COMPONENTE_ESP_TECNICA(sequelize, DataTypes);
  var SIG_INM_COMPONENTE_INSPEC = _SIG_INM_COMPONENTE_INSPEC(sequelize, DataTypes);
  var SIG_INM_IF = _SIG_INM_IF(sequelize, DataTypes);
  var SIG_INM_ITEM_CATALOGO = _SIG_INM_ITEM_CATALOGO(sequelize, DataTypes);
  var SIG_INM_SEGUROS = _SIG_INM_SEGUROS(sequelize, DataTypes);
  var SIG_INM_UND_ACTIVO_ESP_TECNICA = _SIG_INM_UND_ACTIVO_ESP_TECNICA(sequelize, DataTypes);
  var SIG_INM_UNIDAD_ACTIVO = _SIG_INM_UNIDAD_ACTIVO(sequelize, DataTypes);
  var SIG_INM_UNIDAD_ACTIVO_BAJA = _SIG_INM_UNIDAD_ACTIVO_BAJA(sequelize, DataTypes);
  var SIG_INM_UNIDAD_ACTIVO_IF = _SIG_INM_UNIDAD_ACTIVO_IF(sequelize, DataTypes);
  var SIG_INT_ACT_PROY_NOMBRE = _SIG_INT_ACT_PROY_NOMBRE(sequelize, DataTypes);
  var SIG_INT_COMPONENTE_NOMBRE = _SIG_INT_COMPONENTE_NOMBRE(sequelize, DataTypes);
  var SIG_INT_CONSOLIDADO_SIAF = _SIG_INT_CONSOLIDADO_SIAF(sequelize, DataTypes);
  var SIG_INT_FINALIDAD_NOMBRE = _SIG_INT_FINALIDAD_NOMBRE(sequelize, DataTypes);
  var SIG_INT_FUNCION_NOMBRE = _SIG_INT_FUNCION_NOMBRE(sequelize, DataTypes);
  var SIG_INT_HOJA_TRABAJO = _SIG_INT_HOJA_TRABAJO(sequelize, DataTypes);
  var SIG_INT_HT_GASTO = _SIG_INT_HT_GASTO(sequelize, DataTypes);
  var SIG_INT_HT_GASTO_SIAF = _SIG_INT_HT_GASTO_SIAF(sequelize, DataTypes);
  var SIG_INT_HT_META = _SIG_INT_HT_META(sequelize, DataTypes);
  var SIG_INT_HT_META_SIAF = _SIG_INT_HT_META_SIAF(sequelize, DataTypes);
  var SIG_INT_LOG = _SIG_INT_LOG(sequelize, DataTypes);
  var SIG_INT_MENSAJES_ERROR = _SIG_INT_MENSAJES_ERROR(sequelize, DataTypes);
  var SIG_INT_META_PROPUESTA = _SIG_INT_META_PROPUESTA(sequelize, DataTypes);
  var SIG_INT_MOVIMIENTO_AUD = _SIG_INT_MOVIMIENTO_AUD(sequelize, DataTypes);
  var SIG_INT_PROGRAMA_NOMBRE = _SIG_INT_PROGRAMA_NOMBRE(sequelize, DataTypes);
  var SIG_INT_SUB_PROGRAMA_NOMBRE = _SIG_INT_SUB_PROGRAMA_NOMBRE(sequelize, DataTypes);
  var SIG_INT_TMP_ASIGNACION = _SIG_INT_TMP_ASIGNACION(sequelize, DataTypes);
  var SIG_INT_TMP_ASIGNA_GENERICA = _SIG_INT_TMP_ASIGNA_GENERICA(sequelize, DataTypes);
  var SIG_INT_TMP_JOB = _SIG_INT_TMP_JOB(sequelize, DataTypes);
  var SIG_INT_TMP_META = _SIG_INT_TMP_META(sequelize, DataTypes);
  var SIG_INT_TRANSMISION = _SIG_INT_TRANSMISION(sequelize, DataTypes);
  var SIG_INT_VERSION = _SIG_INT_VERSION(sequelize, DataTypes);
  var SIG_INVENTARIO_FISICO = _SIG_INVENTARIO_FISICO(sequelize, DataTypes);
  var SIG_INVENTARIO_FISICO_CIERRE = _SIG_INVENTARIO_FISICO_CIERRE(sequelize, DataTypes);
  var SIG_INVENTARIO_FISICO_DOCUM = _SIG_INVENTARIO_FISICO_DOCUM(sequelize, DataTypes);
  var SIG_INV_INICIAL = _SIG_INV_INICIAL(sequelize, DataTypes);
  var SIG_INV_INICIAL_temp = _SIG_INV_INICIAL_temp(sequelize, DataTypes);
  var SIG_ITEM_ATRIBUTO = _SIG_ITEM_ATRIBUTO(sequelize, DataTypes);
  var SIG_ITEM_MARCA_MODELO = _SIG_ITEM_MARCA_MODELO(sequelize, DataTypes);
  var SIG_ITEM_TIPO_UNIDAD_ACTIVO = _SIG_ITEM_TIPO_UNIDAD_ACTIVO(sequelize, DataTypes);
  var SIG_KARDEX_CTROL_EXISTENCIAS = _SIG_KARDEX_CTROL_EXISTENCIAS(sequelize, DataTypes);
  var SIG_KARDEX_CUF = _SIG_KARDEX_CUF(sequelize, DataTypes);
  var SIG_KARDEX_EQUIVALENCIA_CUENTA = _SIG_KARDEX_EQUIVALENCIA_CUENTA(sequelize, DataTypes);
  var SIG_KARDEX_INVENTARIO = _SIG_KARDEX_INVENTARIO(sequelize, DataTypes);
  var SIG_KARDEX_INVENTARIO_CAB = _SIG_KARDEX_INVENTARIO_CAB(sequelize, DataTypes);
  var SIG_KARDEX_POR_ALMACEN = _SIG_KARDEX_POR_ALMACEN(sequelize, DataTypes);
  var SIG_LOG_ALERTA = _SIG_LOG_ALERTA(sequelize, DataTypes);
  var SIG_MAESTRO_BK = _SIG_MAESTRO_BK(sequelize, DataTypes);
  var SIG_MAESTRO_DET_CATALOGO = _SIG_MAESTRO_DET_CATALOGO(sequelize, DataTypes);
  var SIG_MAESTRO_EQUIVALENCIA = _SIG_MAESTRO_EQUIVALENCIA(sequelize, DataTypes);
  var SIG_MAESTRO_ESTADO = _SIG_MAESTRO_ESTADO(sequelize, DataTypes);
  var SIG_MAESTRO_PROCESO = _SIG_MAESTRO_PROCESO(sequelize, DataTypes);
  var SIG_MANIFIESTO_CARGA = _SIG_MANIFIESTO_CARGA(sequelize, DataTypes);
  var SIG_MATRIZ_SEDE_DEPE = _SIG_MATRIZ_SEDE_DEPE(sequelize, DataTypes);
  var SIG_MA_CENTRO_RUBRO = _SIG_MA_CENTRO_RUBRO(sequelize, DataTypes);
  var SIG_MEJORAS = _SIG_MEJORAS(sequelize, DataTypes);
  var SIG_METAS_PROP_X_CENTRO = _SIG_METAS_PROP_X_CENTRO(sequelize, DataTypes);
  var SIG_META_CENTRO_TAREA = _SIG_META_CENTRO_TAREA(sequelize, DataTypes);
  var SIG_META_PROPUESTA = _SIG_META_PROPUESTA(sequelize, DataTypes);
  var SIG_META_PROPUESTA_EQUI = _SIG_META_PROPUESTA_EQUI(sequelize, DataTypes);
  var SIG_META_X_SEDE = _SIG_META_X_SEDE(sequelize, DataTypes);
  var SIG_META_X_TAREA = _SIG_META_X_TAREA(sequelize, DataTypes);
  var SIG_MODALIDAD_CONSTRUCCION = _SIG_MODALIDAD_CONSTRUCCION(sequelize, DataTypes);
  var SIG_MODULO_PROCESO = _SIG_MODULO_PROCESO(sequelize, DataTypes);
  var SIG_MOVIMIENTO_ACTIVO = _SIG_MOVIMIENTO_ACTIVO(sequelize, DataTypes);
  var SIG_MOVIMIENTO_BIENES = _SIG_MOVIMIENTO_BIENES(sequelize, DataTypes);
  var SIG_MOVIMIENTO_CONTABLE = _SIG_MOVIMIENTO_CONTABLE(sequelize, DataTypes);
  var SIG_MOVIMIENTO_CONTABLE_COMP = _SIG_MOVIMIENTO_CONTABLE_COMP(sequelize, DataTypes);
  var SIG_MOVIMIENTO_PERSONAL = _SIG_MOVIMIENTO_PERSONAL(sequelize, DataTypes);
  var SIG_MOVIM_ADMINISTRATIVO = _SIG_MOVIM_ADMINISTRATIVO(sequelize, DataTypes);
  var SIG_MOVIM_ALMACEN = _SIG_MOVIM_ALMACEN(sequelize, DataTypes);
  var SIG_MOVIM_ALMACEN_TRANS = _SIG_MOVIM_ALMACEN_TRANS(sequelize, DataTypes);
  var SIG_MOVIM_ASIGNACION = _SIG_MOVIM_ASIGNACION(sequelize, DataTypes);
  var SIG_MOVIM_CONFOR_SERVICIO = _SIG_MOVIM_CONFOR_SERVICIO(sequelize, DataTypes);
  var SIG_MOVIM_CONTABLE_INM_COMP = _SIG_MOVIM_CONTABLE_INM_COMP(sequelize, DataTypes);
  var SIG_MOVIM_PATRIMONIO = _SIG_MOVIM_PATRIMONIO(sequelize, DataTypes);
  var SIG_MOVIM_UNIDAD_PRODUCIDA = _SIG_MOVIM_UNIDAD_PRODUCIDA(sequelize, DataTypes);
  var SIG_MP_CENTRO_RUBRO = _SIG_MP_CENTRO_RUBRO(sequelize, DataTypes);
  var SIG_MSG_ACTIVA = _SIG_MSG_ACTIVA(sequelize, DataTypes);
  var SIG_MSG_ALERTA = _SIG_MSG_ALERTA(sequelize, DataTypes);
  var SIG_MSG_DESTINATARIO = _SIG_MSG_DESTINATARIO(sequelize, DataTypes);
  var SIG_MSG_DOCUMENTO = _SIG_MSG_DOCUMENTO(sequelize, DataTypes);
  var SIG_MSG_DOCU_DESTINO = _SIG_MSG_DOCU_DESTINO(sequelize, DataTypes);
  var SIG_MSG_DOCU_PROG = _SIG_MSG_DOCU_PROG(sequelize, DataTypes);
  var SIG_MSG_GRUPO = _SIG_MSG_GRUPO(sequelize, DataTypes);
  var SIG_MSG_LOG_MOVIMIENTO = _SIG_MSG_LOG_MOVIMIENTO(sequelize, DataTypes);
  var SIG_MSG_MODULO = _SIG_MSG_MODULO(sequelize, DataTypes);
  var SIG_MSG_PROGRAMA = _SIG_MSG_PROGRAMA(sequelize, DataTypes);
  var SIG_MSG_TIPO = _SIG_MSG_TIPO(sequelize, DataTypes);
  var SIG_OCE_DET = _SIG_OCE_DET(sequelize, DataTypes);
  var SIG_OPERACION_FAMILIA_PROCESO = _SIG_OPERACION_FAMILIA_PROCESO(sequelize, DataTypes);
  var SIG_ORDEN_ADQUISICION = _SIG_ORDEN_ADQUISICION(sequelize, DataTypes);
  var SIG_ORDEN_ADQUISICION_ANULAC = _SIG_ORDEN_ADQUISICION_ANULAC(sequelize, DataTypes);
  var SIG_ORDEN_IMPRESION = _SIG_ORDEN_IMPRESION(sequelize, DataTypes);
  var SIG_ORDEN_INTERFASE = _SIG_ORDEN_INTERFASE(sequelize, DataTypes);
  var SIG_ORDEN_INTERFASE_ANULAC = _SIG_ORDEN_INTERFASE_ANULAC(sequelize, DataTypes);
  var SIG_ORDEN_ITEM = _SIG_ORDEN_ITEM(sequelize, DataTypes);
  var SIG_ORDEN_ITEM_ANEXO = _SIG_ORDEN_ITEM_ANEXO(sequelize, DataTypes);
  var SIG_ORDEN_ITEM_ANEXO_ANULAC = _SIG_ORDEN_ITEM_ANEXO_ANULAC(sequelize, DataTypes);
  var SIG_ORDEN_ITEM_ANULAC = _SIG_ORDEN_ITEM_ANULAC(sequelize, DataTypes);
  var SIG_ORDEN_ITEM_PPTO = _SIG_ORDEN_ITEM_PPTO(sequelize, DataTypes);
  var SIG_ORDEN_ITEM_PPTO_ANULAC = _SIG_ORDEN_ITEM_PPTO_ANULAC(sequelize, DataTypes);
  var SIG_ORDEN_PRESUPUESTO = _SIG_ORDEN_PRESUPUESTO(sequelize, DataTypes);
  var SIG_ORDEN_PRESUPUESTO_ANULAC = _SIG_ORDEN_PRESUPUESTO_ANULAC(sequelize, DataTypes);
  var SIG_ORDEN_SECUENCIA = _SIG_ORDEN_SECUENCIA(sequelize, DataTypes);
  var SIG_ORDEN_SECUENCIA_ANULAC = _SIG_ORDEN_SECUENCIA_ANULAC(sequelize, DataTypes);
  var SIG_ORD_PASAJE_CONSOLIDADO = _SIG_ORD_PASAJE_CONSOLIDADO(sequelize, DataTypes);
  var SIG_PAAC_CENTRO_COSTO = _SIG_PAAC_CENTRO_COSTO(sequelize, DataTypes);
  var SIG_PAAC_CENTRO_COSTO_ANEXO = _SIG_PAAC_CENTRO_COSTO_ANEXO(sequelize, DataTypes);
  var SIG_PAAC_CONSOLIDADO = _SIG_PAAC_CONSOLIDADO(sequelize, DataTypes);
  var SIG_PAAC_CONSOLIDADO_UES = _SIG_PAAC_CONSOLIDADO_UES(sequelize, DataTypes);
  var SIG_PAAC_DET = _SIG_PAAC_DET(sequelize, DataTypes);
  var SIG_PAAC_DETALLE = _SIG_PAAC_DETALLE(sequelize, DataTypes);
  var SIG_PAAC_DET_DEPE = _SIG_PAAC_DET_DEPE(sequelize, DataTypes);
  var SIG_PAAC_DET_PPTAL = _SIG_PAAC_DET_PPTAL(sequelize, DataTypes);
  var SIG_PAAC_DET_SECUENCIA = _SIG_PAAC_DET_SECUENCIA(sequelize, DataTypes);
  var SIG_PAAC_FILTRO = _SIG_PAAC_FILTRO(sequelize, DataTypes);
  var SIG_PAAC_ITEM = _SIG_PAAC_ITEM(sequelize, DataTypes);
  var SIG_PAAC_ITEM_ANEXO = _SIG_PAAC_ITEM_ANEXO(sequelize, DataTypes);
  var SIG_PAAC_METAS = _SIG_PAAC_METAS(sequelize, DataTypes);
  var SIG_PAAC_RESOLUCION = _SIG_PAAC_RESOLUCION(sequelize, DataTypes);
  var SIG_PAAC_SECUENCIA = _SIG_PAAC_SECUENCIA(sequelize, DataTypes);
  var SIG_PARAMETRO_EJECUTORA_ANIO = _SIG_PARAMETRO_EJECUTORA_ANIO(sequelize, DataTypes);
  var SIG_PARAMETRO_MPAGO_FFINANC = _SIG_PARAMETRO_MPAGO_FFINANC(sequelize, DataTypes);
  var SIG_PATRIMONIO = _SIG_PATRIMONIO(sequelize, DataTypes);
  var SIG_PATRIMONIO_AJUSTE_CAB = _SIG_PATRIMONIO_AJUSTE_CAB(sequelize, DataTypes);
  var SIG_PATRIMONIO_AJUSTE_DET = _SIG_PATRIMONIO_AJUSTE_DET(sequelize, DataTypes);
  var SIG_PATRIMONIO_COMP = _SIG_PATRIMONIO_COMP(sequelize, DataTypes);
  var SIG_PATRIMONIO_INM = _SIG_PATRIMONIO_INM(sequelize, DataTypes);
  var SIG_PATRIMONIO_INM_IF = _SIG_PATRIMONIO_INM_IF(sequelize, DataTypes);
  var SIG_PEDIDOS = _SIG_PEDIDOS(sequelize, DataTypes);
  var SIG_PEDIDOS_DESTINO = _SIG_PEDIDOS_DESTINO(sequelize, DataTypes);
  var SIG_PEDIDOS_DETA_DEST = _SIG_PEDIDOS_DETA_DEST(sequelize, DataTypes);
  var SIG_PEDIDO_PECOSA_IMPRESION = _SIG_PEDIDO_PECOSA_IMPRESION(sequelize, DataTypes);
  var SIG_PEI_ACCION_EST = _SIG_PEI_ACCION_EST(sequelize, DataTypes);
  var SIG_PEI_CATEGORIA = _SIG_PEI_CATEGORIA(sequelize, DataTypes);
  var SIG_PEI_CAT_DETA_OBJETIVO_EST = _SIG_PEI_CAT_DETA_OBJETIVO_EST(sequelize, DataTypes);
  var SIG_PEI_GENERAL = _SIG_PEI_GENERAL(sequelize, DataTypes);
  var SIG_PEI_IND_OBJETIVO_EST = _SIG_PEI_IND_OBJETIVO_EST(sequelize, DataTypes);
  var SIG_PEI_META_ACCION_EST = _SIG_PEI_META_ACCION_EST(sequelize, DataTypes);
  var SIG_PEI_META_ANUAL = _SIG_PEI_META_ANUAL(sequelize, DataTypes);
  var SIG_PEI_OBJETIVO_EST = _SIG_PEI_OBJETIVO_EST(sequelize, DataTypes);
  var SIG_PERSONAL_DET = _SIG_PERSONAL_DET(sequelize, DataTypes);
  var SIG_PERSONAL_FIRMA = _SIG_PERSONAL_FIRMA(sequelize, DataTypes);
  var SIG_PLANILLAS_CERTIFICACION = _SIG_PLANILLAS_CERTIFICACION(sequelize, DataTypes);
  var SIG_PLANILLA_SNP = _SIG_PLANILLA_SNP(sequelize, DataTypes);
  var SIG_PLANILLA_SNP_DESC = _SIG_PLANILLA_SNP_DESC(sequelize, DataTypes);
  var SIG_PLANILLA_SNP_DETALLE = _SIG_PLANILLA_SNP_DETALLE(sequelize, DataTypes);
  var SIG_PLANTILLA = _SIG_PLANTILLA(sequelize, DataTypes);
  var SIG_PLANTILLA_GRUPO_NOTA = _SIG_PLANTILLA_GRUPO_NOTA(sequelize, DataTypes);
  var SIG_PLAN_CTB_MBELICO = _SIG_PLAN_CTB_MBELICO(sequelize, DataTypes);
  var SIG_PLAN_CTB_PNUD = _SIG_PLAN_CTB_PNUD(sequelize, DataTypes);
  var SIG_POI_ACCION_EST_CENTRO = _SIG_POI_ACCION_EST_CENTRO(sequelize, DataTypes);
  var SIG_POI_ASIGNA_CENTRO_COSTO = _SIG_POI_ASIGNA_CENTRO_COSTO(sequelize, DataTypes);
  var SIG_POI_ASIGNA_TAREA = _SIG_POI_ASIGNA_TAREA(sequelize, DataTypes);
  var SIG_POI_GENERAL = _SIG_POI_GENERAL(sequelize, DataTypes);
  var SIG_POI_META_ASIGNA_CENTRO = _SIG_POI_META_ASIGNA_CENTRO(sequelize, DataTypes);
  var SIG_PPAAC_CENTRO_COSTO = _SIG_PPAAC_CENTRO_COSTO(sequelize, DataTypes);
  var SIG_PPAAC_CONSOLIDADO = _SIG_PPAAC_CONSOLIDADO(sequelize, DataTypes);
  var SIG_PPAAC_ITEM = _SIG_PPAAC_ITEM(sequelize, DataTypes);
  var SIG_PPAAC_METAS = _SIG_PPAAC_METAS(sequelize, DataTypes);
  var SIG_PPAAC_SECUENCIA = _SIG_PPAAC_SECUENCIA(sequelize, DataTypes);
  var SIG_PPR_ATENCIONES_X_SUBFIN = _SIG_PPR_ATENCIONES_X_SUBFIN(sequelize, DataTypes);
  var SIG_PPR_CATEGORIA = _SIG_PPR_CATEGORIA(sequelize, DataTypes);
  var SIG_PPR_CIERRE_FASE = _SIG_PPR_CIERRE_FASE(sequelize, DataTypes);
  var SIG_PPR_COLEGIO = _SIG_PPR_COLEGIO(sequelize, DataTypes);
  var SIG_PPR_CUADRO_NECESIDAD = _SIG_PPR_CUADRO_NECESIDAD(sequelize, DataTypes);
  var SIG_PPR_CUADRO_NECESIDAD_DET = _SIG_PPR_CUADRO_NECESIDAD_DET(sequelize, DataTypes);
  var SIG_PPR_DISA = _SIG_PPR_DISA(sequelize, DataTypes);
  var SIG_PPR_DRE = _SIG_PPR_DRE(sequelize, DataTypes);
  var SIG_PPR_EESS_2010 = _SIG_PPR_EESS_2010(sequelize, DataTypes);
  var SIG_PPR_EJECUTORA_AMBITO = _SIG_PPR_EJECUTORA_AMBITO(sequelize, DataTypes);
  var SIG_PPR_ESTABLECIMIENTO = _SIG_PPR_ESTABLECIMIENTO(sequelize, DataTypes);
  var SIG_PPR_ESTCOSTOS = _SIG_PPR_ESTCOSTOS(sequelize, DataTypes);
  var SIG_PPR_FAMILIAS_ESTCOSTOS = _SIG_PPR_FAMILIAS_ESTCOSTOS(sequelize, DataTypes);
  var SIG_PPR_FINALIDAD_EJEC = _SIG_PPR_FINALIDAD_EJEC(sequelize, DataTypes);
  var SIG_PPR_FINALIDAD_EJEC_FASE = _SIG_PPR_FINALIDAD_EJEC_FASE(sequelize, DataTypes);
  var SIG_PPR_ITEMS_X_CATEGORIA = _SIG_PPR_ITEMS_X_CATEGORIA(sequelize, DataTypes);
  var SIG_PPR_KIT_EJECUTORA = _SIG_PPR_KIT_EJECUTORA(sequelize, DataTypes);
  var SIG_PPR_KIT_EJECUTORA_SEDE = _SIG_PPR_KIT_EJECUTORA_SEDE(sequelize, DataTypes);
  var SIG_PPR_KIT_EJECUTORA_meta = _SIG_PPR_KIT_EJECUTORA_meta(sequelize, DataTypes);
  var SIG_PPR_KIT_ITEMS = _SIG_PPR_KIT_ITEMS(sequelize, DataTypes);
  var SIG_PPR_KIT_ITEMS_EST = _SIG_PPR_KIT_ITEMS_EST(sequelize, DataTypes);
  var SIG_PPR_KIT_ITEMS_EST_BK = _SIG_PPR_KIT_ITEMS_EST_BK(sequelize, DataTypes);
  var SIG_PPR_KIT_PLANTILLA = _SIG_PPR_KIT_PLANTILLA(sequelize, DataTypes);
  var SIG_PPR_MAE_COSTOS = _SIG_PPR_MAE_COSTOS(sequelize, DataTypes);
  var SIG_PPR_META_MENSUAL = _SIG_PPR_META_MENSUAL(sequelize, DataTypes);
  var SIG_PPR_META_PROPUESTA_ = _SIG_PPR_META_PROPUESTA_(sequelize, DataTypes);
  var SIG_PPR_META_PROP_MENSUAL = _SIG_PPR_META_PROP_MENSUAL(sequelize, DataTypes);
  var SIG_PPR_META_PROP_X_SEDE = _SIG_PPR_META_PROP_X_SEDE(sequelize, DataTypes);
  var SIG_PPR_META_X_SEDE = _SIG_PPR_META_X_SEDE(sequelize, DataTypes);
  var SIG_PPR_METFIS_X_SUBFIN = _SIG_PPR_METFIS_X_SUBFIN(sequelize, DataTypes);
  var SIG_PPR_MICRORED = _SIG_PPR_MICRORED(sequelize, DataTypes);
  var SIG_PPR_NIVEL = _SIG_PPR_NIVEL(sequelize, DataTypes);
  var SIG_PPR_NIVEL_DESC = _SIG_PPR_NIVEL_DESC(sequelize, DataTypes);
  var SIG_PPR_RED = _SIG_PPR_RED(sequelize, DataTypes);
  var SIG_PPR_SEDE = _SIG_PPR_SEDE(sequelize, DataTypes);
  var SIG_PPR_SUBFIN_X_CATEG = _SIG_PPR_SUBFIN_X_CATEG(sequelize, DataTypes);
  var SIG_PPR_SUBFIN_X_ESTABLEC = _SIG_PPR_SUBFIN_X_ESTABLEC(sequelize, DataTypes);
  var SIG_PPR_TABLAS = _SIG_PPR_TABLAS(sequelize, DataTypes);
  var SIG_PPR_TECHO_PRESUPUESTO = _SIG_PPR_TECHO_PRESUPUESTO(sequelize, DataTypes);
  var SIG_PPR_TIPO_ESTRATEGIA = _SIG_PPR_TIPO_ESTRATEGIA(sequelize, DataTypes);
  var SIG_PPR_TIPO_INSTITUCION = _SIG_PPR_TIPO_INSTITUCION(sequelize, DataTypes);
  var SIG_PPR_UGEL = _SIG_PPR_UGEL(sequelize, DataTypes);
  var SIG_PRE_SUB_CENTRO_FINALIDAD = _SIG_PRE_SUB_CENTRO_FINALIDAD(sequelize, DataTypes);
  var SIG_PROCESO_COMITE = _SIG_PROCESO_COMITE(sequelize, DataTypes);
  var SIG_PROCESO_DE_SELECCION = _SIG_PROCESO_DE_SELECCION(sequelize, DataTypes);
  var SIG_PROCESO_ETAPAS = _SIG_PROCESO_ETAPAS(sequelize, DataTypes);
  var SIG_PROCESO_IMP_ARC = _SIG_PROCESO_IMP_ARC(sequelize, DataTypes);
  var SIG_PROCESO_SECUENCIA = _SIG_PROCESO_SECUENCIA(sequelize, DataTypes);
  var SIG_PROPUESTA_ARCHIVO = _SIG_PROPUESTA_ARCHIVO(sequelize, DataTypes);
  var SIG_PROPUESTA_ARC_OBS = _SIG_PROPUESTA_ARC_OBS(sequelize, DataTypes);
  var SIG_PROPUESTA_ITEM = _SIG_PROPUESTA_ITEM(sequelize, DataTypes);
  var SIG_PROPUESTA_ITEM_DETALLE = _SIG_PROPUESTA_ITEM_DETALLE(sequelize, DataTypes);
  var SIG_PROPUESTA_LOTE = _SIG_PROPUESTA_LOTE(sequelize, DataTypes);
  var SIG_PROPUESTA_LOTE_FACTOR = _SIG_PROPUESTA_LOTE_FACTOR(sequelize, DataTypes);
  var SIG_PROPUESTA_OBS = _SIG_PROPUESTA_OBS(sequelize, DataTypes);
  var SIG_PROPUESTA_PROVEEDOR = _SIG_PROPUESTA_PROVEEDOR(sequelize, DataTypes);
  var SIG_PROPUESTA_REQUISITOS = _SIG_PROPUESTA_REQUISITOS(sequelize, DataTypes);
  var SIG_PROYECTO_PNUD = _SIG_PROYECTO_PNUD(sequelize, DataTypes);
  var SIG_PROY_CUADRO_ADQUISICION = _SIG_PROY_CUADRO_ADQUISICION(sequelize, DataTypes);
  var SIG_PROY_DEPEN_META_CUADRO = _SIG_PROY_DEPEN_META_CUADRO(sequelize, DataTypes);
  var SIG_PROY_DETALLE_BSERV_CUADRO = _SIG_PROY_DETALLE_BSERV_CUADRO(sequelize, DataTypes);
  var SIG_PROY_DETALLE_METAS_CUADRO = _SIG_PROY_DETALLE_METAS_CUADRO(sequelize, DataTypes);
  var SIG_PROY_DOC_RENDIDO = _SIG_PROY_DOC_RENDIDO(sequelize, DataTypes);
  var SIG_PROY_PLANILLA_PASAJE = _SIG_PROY_PLANILLA_PASAJE(sequelize, DataTypes);
  var SIG_PROY_PLANILLA_VIATICO = _SIG_PROY_PLANILLA_VIATICO(sequelize, DataTypes);
  var SIG_PROY_PLAN_PAS_DESTINO = _SIG_PROY_PLAN_PAS_DESTINO(sequelize, DataTypes);
  var SIG_PROY_PLAN_PAS_PPTA = _SIG_PROY_PLAN_PAS_PPTA(sequelize, DataTypes);
  var SIG_PROY_PLAN_PAS_RUTA = _SIG_PROY_PLAN_PAS_RUTA(sequelize, DataTypes);
  var SIG_PROY_USUARIO_CCOSTO = _SIG_PROY_USUARIO_CCOSTO(sequelize, DataTypes);
  var SIG_PS_CUADRO_ADQ = _SIG_PS_CUADRO_ADQ(sequelize, DataTypes);
  var SIG_REP_FASE_CIERRE = _SIG_REP_FASE_CIERRE(sequelize, DataTypes);
  var SIG_REQ_ENTRADA_ALMACEN = _SIG_REQ_ENTRADA_ALMACEN(sequelize, DataTypes);
  var SIG_REQ_ENTRADA_ALMACEN_DET = _SIG_REQ_ENTRADA_ALMACEN_DET(sequelize, DataTypes);
  var SIG_SCRIPT_DETAIL_EJEC = _SIG_SCRIPT_DETAIL_EJEC(sequelize, DataTypes);
  var SIG_SCRIPT_ERROR_EJEC = _SIG_SCRIPT_ERROR_EJEC(sequelize, DataTypes);
  var SIG_SCRIPT_HEADER_EJEC = _SIG_SCRIPT_HEADER_EJEC(sequelize, DataTypes);
  var SIG_SECUENCIA_MOV_ALMACEN = _SIG_SECUENCIA_MOV_ALMACEN(sequelize, DataTypes);
  var SIG_SECUENCIA_MOV_CONFOR_SERV = _SIG_SECUENCIA_MOV_CONFOR_SERV(sequelize, DataTypes);
  var SIG_SEDE_DEPENDIENCIA = _SIG_SEDE_DEPENDIENCIA(sequelize, DataTypes);
  var SIG_SEGUIMIENTO = _SIG_SEGUIMIENTO(sequelize, DataTypes);
  var SIG_SEGUIMIENTO_ESTADO = _SIG_SEGUIMIENTO_ESTADO(sequelize, DataTypes);
  var SIG_SEGUIMIENTO_SECUENCIA = _SIG_SEGUIMIENTO_SECUENCIA(sequelize, DataTypes);
  var SIG_SERIE_DOCUMENTOS = _SIG_SERIE_DOCUMENTOS(sequelize, DataTypes);
  var SIG_SOLICITUD_COTIZACION = _SIG_SOLICITUD_COTIZACION(sequelize, DataTypes);
  var SIG_SOLICITUD_COTIZACION_ITEM = _SIG_SOLICITUD_COTIZACION_ITEM(sequelize, DataTypes);
  var SIG_SOLICITUD_ESPECIFICACIONES = _SIG_SOLICITUD_ESPECIFICACIONES(sequelize, DataTypes);
  var SIG_SOLICITUD_GRUPO = _SIG_SOLICITUD_GRUPO(sequelize, DataTypes);
  var SIG_SOLICITUD_GRUPO_DET = _SIG_SOLICITUD_GRUPO_DET(sequelize, DataTypes);
  var SIG_SOLICITUD_MODIFICACION = _SIG_SOLICITUD_MODIFICACION(sequelize, DataTypes);
  var SIG_SOLICITUD_MODIFICACION_DET = _SIG_SOLICITUD_MODIFICACION_DET(sequelize, DataTypes);
  var SIG_SUB_FINALIDAD = _SIG_SUB_FINALIDAD(sequelize, DataTypes);
  var SIG_TAREA_ESTRATEGICO = _SIG_TAREA_ESTRATEGICO(sequelize, DataTypes);
  var SIG_TASACION_ACTIVOS = _SIG_TASACION_ACTIVOS(sequelize, DataTypes);
  var SIG_TECHO_PRESUPUESTO = _SIG_TECHO_PRESUPUESTO(sequelize, DataTypes);
  var SIG_TES_ARQUEO_ACREDITACION = _SIG_TES_ARQUEO_ACREDITACION(sequelize, DataTypes);
  var SIG_TES_ARQUEO_CAJA = _SIG_TES_ARQUEO_CAJA(sequelize, DataTypes);
  var SIG_TES_ARQUEO_CAJA_OBS = _SIG_TES_ARQUEO_CAJA_OBS(sequelize, DataTypes);
  var SIG_TES_CAJA = _SIG_TES_CAJA(sequelize, DataTypes);
  var SIG_TES_CAJA_CHICA = _SIG_TES_CAJA_CHICA(sequelize, DataTypes);
  var SIG_TES_CAJA_CHICA_DGASTO = _SIG_TES_CAJA_CHICA_DGASTO(sequelize, DataTypes);
  var SIG_TES_CAJA_CHICA_LIQUIDACION = _SIG_TES_CAJA_CHICA_LIQUIDACION(sequelize, DataTypes);
  var SIG_TES_CAJA_CHICA_LIQUIDA_EXT = _SIG_TES_CAJA_CHICA_LIQUIDA_EXT(sequelize, DataTypes);
  var SIG_TES_CAJA_CHICA_MOV = _SIG_TES_CAJA_CHICA_MOV(sequelize, DataTypes);
  var SIG_TES_CAJA_CHICA_MOVIL = _SIG_TES_CAJA_CHICA_MOVIL(sequelize, DataTypes);
  var SIG_TES_CAJA_CHICA_PEDIDO = _SIG_TES_CAJA_CHICA_PEDIDO(sequelize, DataTypes);
  var SIG_TES_CAJA_CHICA_PEDIDO_DET = _SIG_TES_CAJA_CHICA_PEDIDO_DET(sequelize, DataTypes);
  var SIG_TES_CAJA_CHICA_PPTAL = _SIG_TES_CAJA_CHICA_PPTAL(sequelize, DataTypes);
  var SIG_TES_CAJA_CHICA_REND = _SIG_TES_CAJA_CHICA_REND(sequelize, DataTypes);
  var SIG_TES_CAJA_CHICA_SALDO = _SIG_TES_CAJA_CHICA_SALDO(sequelize, DataTypes);
  var SIG_TES_CAJA_CHICA_SALDO_PAO = _SIG_TES_CAJA_CHICA_SALDO_PAO(sequelize, DataTypes);
  var SIG_TES_CAJA_DETALLE = _SIG_TES_CAJA_DETALLE(sequelize, DataTypes);
  var SIG_TES_CONCEPTO_INGRESO = _SIG_TES_CONCEPTO_INGRESO(sequelize, DataTypes);
  var SIG_TES_INTERFASE_CAB = _SIG_TES_INTERFASE_CAB(sequelize, DataTypes);
  var SIG_TES_INTERFASE_PPTO = _SIG_TES_INTERFASE_PPTO(sequelize, DataTypes);
  var SIG_TES_INTERFASE_SECU = _SIG_TES_INTERFASE_SECU(sequelize, DataTypes);
  var SIG_TES_MAESTRO_DETRACCION = _SIG_TES_MAESTRO_DETRACCION(sequelize, DataTypes);
  var SIG_TES_PERSONA = _SIG_TES_PERSONA(sequelize, DataTypes);
  var SIG_TES_PLANTILLA_OBSERV = _SIG_TES_PLANTILLA_OBSERV(sequelize, DataTypes);
  var SIG_TES_RECIBO_INGRESO = _SIG_TES_RECIBO_INGRESO(sequelize, DataTypes);
  var SIG_TES_RECIBO_INGRESO_DET = _SIG_TES_RECIBO_INGRESO_DET(sequelize, DataTypes);
  var SIG_TES_RECIBO_PROV = _SIG_TES_RECIBO_PROV(sequelize, DataTypes);
  var SIG_TES_RECIBO_PROV_DET = _SIG_TES_RECIBO_PROV_DET(sequelize, DataTypes);
  var SIG_TES_REGISTRO_COMPRA_VENTA = _SIG_TES_REGISTRO_COMPRA_VENTA(sequelize, DataTypes);
  var SIG_TES_TARIFARIO_CAJA = _SIG_TES_TARIFARIO_CAJA(sequelize, DataTypes);
  var SIG_TIPO_ALTA = _SIG_TIPO_ALTA(sequelize, DataTypes);
  var SIG_TIPO_CAMBIO = _SIG_TIPO_CAMBIO(sequelize, DataTypes);
  var SIG_TIPO_CAUSA_RES = _SIG_TIPO_CAUSA_RES(sequelize, DataTypes);
  var SIG_TIPO_CERTIFICACION_HIST = _SIG_TIPO_CERTIFICACION_HIST(sequelize, DataTypes);
  var SIG_TIPO_CONSTRUCCION = _SIG_TIPO_CONSTRUCCION(sequelize, DataTypes);
  var SIG_TIPO_CONSTRUC_INM = _SIG_TIPO_CONSTRUC_INM(sequelize, DataTypes);
  var SIG_TIPO_CONTRATISTAS = _SIG_TIPO_CONTRATISTAS(sequelize, DataTypes);
  var SIG_TIPO_INMUEBLE = _SIG_TIPO_INMUEBLE(sequelize, DataTypes);
  var SIG_TIPO_INM_UNID_ACT = _SIG_TIPO_INM_UNID_ACT(sequelize, DataTypes);
  var SIG_TIPO_MODALIDAD = _SIG_TIPO_MODALIDAD(sequelize, DataTypes);
  var SIG_TIPO_MOVIMIENTO = _SIG_TIPO_MOVIMIENTO(sequelize, DataTypes);
  var SIG_TIPO_MOVIMIENTO_INM = _SIG_TIPO_MOVIMIENTO_INM(sequelize, DataTypes);
  var SIG_TIPO_REAJUSTE_PPTO = _SIG_TIPO_REAJUSTE_PPTO(sequelize, DataTypes);
  var SIG_TIPO_REA_PPTO_DOC = _SIG_TIPO_REA_PPTO_DOC(sequelize, DataTypes);
  var SIG_TIPO_SALIDA = _SIG_TIPO_SALIDA(sequelize, DataTypes);
  var SIG_TIPO_UNIDAD_ACTIVO = _SIG_TIPO_UNIDAD_ACTIVO(sequelize, DataTypes);
  var SIG_TIPO_UNIDAD_ACTIVO_CUENTA = _SIG_TIPO_UNIDAD_ACTIVO_CUENTA(sequelize, DataTypes);
  var SIG_TMP_CARGA_CLASIFICADOR = _SIG_TMP_CARGA_CLASIFICADOR(sequelize, DataTypes);
  var SIG_TMP_CARGA_PIA_NF = _SIG_TMP_CARGA_PIA_NF(sequelize, DataTypes);
  var SIG_TMP_CATALOGO_JUSTIF = _SIG_TMP_CATALOGO_JUSTIF(sequelize, DataTypes);
  var SIG_TMP_CUADRO_NECESIDAD = _SIG_TMP_CUADRO_NECESIDAD(sequelize, DataTypes);
  var SIG_TMP_CUADRO_NECESIDAD_DET = _SIG_TMP_CUADRO_NECESIDAD_DET(sequelize, DataTypes);
  var SIG_TMP_DETALLE_PED_DEST = _SIG_TMP_DETALLE_PED_DEST(sequelize, DataTypes);
  var SIG_TMP_METAS_PROP_X_CENTRO = _SIG_TMP_METAS_PROP_X_CENTRO(sequelize, DataTypes);
  var SIG_TMP_META_PROPUESTA = _SIG_TMP_META_PROPUESTA(sequelize, DataTypes);
  var SIG_TMP_MOVIM_ALMACEN_CTA = _SIG_TMP_MOVIM_ALMACEN_CTA(sequelize, DataTypes);
  var SIG_TMP_MP_CENTRO_RUBRO = _SIG_TMP_MP_CENTRO_RUBRO(sequelize, DataTypes);
  var SIG_TMP_PPR_META_MENSUAL = _SIG_TMP_PPR_META_MENSUAL(sequelize, DataTypes);
  var SIG_TMP_PPR_META_PROPUESTA = _SIG_TMP_PPR_META_PROPUESTA(sequelize, DataTypes);
  var SIG_TMP_PPR_META_PROP_MENSUAL = _SIG_TMP_PPR_META_PROP_MENSUAL(sequelize, DataTypes);
  var SIG_TMP_PPR_METFIS_X_SUBFIN = _SIG_TMP_PPR_METFIS_X_SUBFIN(sequelize, DataTypes);
  var SIG_TMP_PROCESO_DEST = _SIG_TMP_PROCESO_DEST(sequelize, DataTypes);
  var SIG_TMP_PS_CARGA_PROPUESTA = _SIG_TMP_PS_CARGA_PROPUESTA(sequelize, DataTypes);
  var SIG_TMP_PS_REP_CONS_EVAL = _SIG_TMP_PS_REP_CONS_EVAL(sequelize, DataTypes);
  var SIG_TMP_REP_INV_VALORIZADO = _SIG_TMP_REP_INV_VALORIZADO(sequelize, DataTypes);
  var SIG_TMP_TECHO_PRESUPUESTO = _SIG_TMP_TECHO_PRESUPUESTO(sequelize, DataTypes);
  var SIG_TOPES_PROCESOS = _SIG_TOPES_PROCESOS(sequelize, DataTypes);
  var SIG_TRANSACCION_ESTADO = _SIG_TRANSACCION_ESTADO(sequelize, DataTypes);
  var SIG_TRANSPORTISTA = _SIG_TRANSPORTISTA(sequelize, DataTypes);
  var SIG_TRANS_ENVIO = _SIG_TRANS_ENVIO(sequelize, DataTypes);
  var SIG_TRANS_PROGRA = _SIG_TRANS_PROGRA(sequelize, DataTypes);
  var SIG_TRANS_PROGRAMACION_UE = _SIG_TRANS_PROGRAMACION_UE(sequelize, DataTypes);
  var SIG_TRANS_PROGRAMACION_UE2 = _SIG_TRANS_PROGRAMACION_UE2(sequelize, DataTypes);
  var SIG_TRANS_PROGRA_HOR = _SIG_TRANS_PROGRA_HOR(sequelize, DataTypes);
  var SIG_UBICAC_FISICA = _SIG_UBICAC_FISICA(sequelize, DataTypes);
  var SIG_UNIDAD_EQUIV_OSCE = _SIG_UNIDAD_EQUIV_OSCE(sequelize, DataTypes);
  var SIG_UNIDAD_MEDIDA_EQUI = _SIG_UNIDAD_MEDIDA_EQUI(sequelize, DataTypes);
  var SIG_UNIDAD_MEDIDA_TIPO = _SIG_UNIDAD_MEDIDA_TIPO(sequelize, DataTypes);
  var SIG_USUARIO_ALMACEN = _SIG_USUARIO_ALMACEN(sequelize, DataTypes);
  var SIG_USUARIO_CAJA = _SIG_USUARIO_CAJA(sequelize, DataTypes);
  var SIG_USUARIO_CAJA_CHICA = _SIG_USUARIO_CAJA_CHICA(sequelize, DataTypes);
  var SIG_USUARIO_CCOSTO = _SIG_USUARIO_CCOSTO(sequelize, DataTypes);
  var SIG_USUARIO_CCOSTO_BK_III = _SIG_USUARIO_CCOSTO_BK_III(sequelize, DataTypes);
  var SIG_VALIDA_CADENA_FASE = _SIG_VALIDA_CADENA_FASE(sequelize, DataTypes);
  var SI_ALMACEN = _SI_ALMACEN(sequelize, DataTypes);
  var SI_CENTRO_COSTO = _SI_CENTRO_COSTO(sequelize, DataTypes);
  var SI_CONTRATISTA = _SI_CONTRATISTA(sequelize, DataTypes);
  var SI_CONTRATO = _SI_CONTRATO(sequelize, DataTypes);
  var SI_CONTRATO_DETA = _SI_CONTRATO_DETA(sequelize, DataTypes);
  var SI_CONTRATO_DETA_TRX = _SI_CONTRATO_DETA_TRX(sequelize, DataTypes);
  var SI_CONTRATO_TRX = _SI_CONTRATO_TRX(sequelize, DataTypes);
  var SI_FINALIDAD_UM = _SI_FINALIDAD_UM(sequelize, DataTypes);
  var SI_INVENTARIO_INM_TRX = _SI_INVENTARIO_INM_TRX(sequelize, DataTypes);
  var SI_MARCA = _SI_MARCA(sequelize, DataTypes);
  var SI_MOVIMIENTO_ALMACEN = _SI_MOVIMIENTO_ALMACEN(sequelize, DataTypes);
  var SI_MOVIMIENTO_ALMACEN_DETA = _SI_MOVIMIENTO_ALMACEN_DETA(sequelize, DataTypes);
  var SI_MOVIMIENTO_ALMACEN_DETA_TRX = _SI_MOVIMIENTO_ALMACEN_DETA_TRX(sequelize, DataTypes);
  var SI_MOVIMIENTO_ALMACEN_TRX = _SI_MOVIMIENTO_ALMACEN_TRX(sequelize, DataTypes);
  var SI_ORDEN = _SI_ORDEN(sequelize, DataTypes);
  var SI_ORDEN_DETA = _SI_ORDEN_DETA(sequelize, DataTypes);
  var SI_ORDEN_DETA_TRX = _SI_ORDEN_DETA_TRX(sequelize, DataTypes);
  var SI_ORDEN_TRX = _SI_ORDEN_TRX(sequelize, DataTypes);
  var SI_PATRIMONIO = _SI_PATRIMONIO(sequelize, DataTypes);
  var SI_PATRIMONIO_TRX = _SI_PATRIMONIO_TRX(sequelize, DataTypes);
  var SI_PEDIDO = _SI_PEDIDO(sequelize, DataTypes);
  var SI_PEDIDO_DETA = _SI_PEDIDO_DETA(sequelize, DataTypes);
  var SI_PEDIDO_DETA_TRX = _SI_PEDIDO_DETA_TRX(sequelize, DataTypes);
  var SI_PEDIDO_TRX = _SI_PEDIDO_TRX(sequelize, DataTypes);
  var SI_PERSONAL = _SI_PERSONAL(sequelize, DataTypes);
  var SI_PPR_AMBITO = _SI_PPR_AMBITO(sequelize, DataTypes);
  var SI_PPR_ESTABLECIMIENTO = _SI_PPR_ESTABLECIMIENTO(sequelize, DataTypes);
  var SI_PPR_KIT_FILTRO = _SI_PPR_KIT_FILTRO(sequelize, DataTypes);
  var SI_PPR_KIT_ITEMS = _SI_PPR_KIT_ITEMS(sequelize, DataTypes);
  var SI_PPR_KIT_ITEMS_BK = _SI_PPR_KIT_ITEMS_BK(sequelize, DataTypes);
  var SI_PPR_SEDE = _SI_PPR_SEDE(sequelize, DataTypes);
  var SI_PRG_META = _SI_PRG_META(sequelize, DataTypes);
  var SI_PRG_META_EJECUTORA = _SI_PRG_META_EJECUTORA(sequelize, DataTypes);
  var SI_PRG_META_EJECUTORA_TRX = _SI_PRG_META_EJECUTORA_TRX(sequelize, DataTypes);
  var SI_PRG_META_TRX = _SI_PRG_META_TRX(sequelize, DataTypes);
  var SI_PRG_TABLAS_TRANSFER = _SI_PRG_TABLAS_TRANSFER(sequelize, DataTypes);
  var SI_PROGRAMACION = _SI_PROGRAMACION(sequelize, DataTypes);
  var SI_PROGRAMACION_DETA = _SI_PROGRAMACION_DETA(sequelize, DataTypes);
  var SI_PROGRAMACION_DETA_TRX = _SI_PROGRAMACION_DETA_TRX(sequelize, DataTypes);
  var SI_PROGRAMACION_ID_KIT = _SI_PROGRAMACION_ID_KIT(sequelize, DataTypes);
  var SI_PROGRAMACION_ID_KIT_TRX = _SI_PROGRAMACION_ID_KIT_TRX(sequelize, DataTypes);
  var SI_PROGRAMACION_TRX = _SI_PROGRAMACION_TRX(sequelize, DataTypes);
  var SI_REGISTRO_INM_TRX = _SI_REGISTRO_INM_TRX(sequelize, DataTypes);
  var SI_RESUMEN_TRX = _SI_RESUMEN_TRX(sequelize, DataTypes);
  var SI_SEDE = _SI_SEDE(sequelize, DataTypes);
  var SI_TRANS_ORDEN = _SI_TRANS_ORDEN(sequelize, DataTypes);
  var SI_TRANS_PEDIDO = _SI_TRANS_PEDIDO(sequelize, DataTypes);
  var STOCKS_MINIMOS = _STOCKS_MINIMOS(sequelize, DataTypes);
  var SUB_PROGRAMA_NOMBRE_FASE = _SUB_PROGRAMA_NOMBRE_FASE(sequelize, DataTypes);
  var Sub_Programa = _Sub_Programa(sequelize, DataTypes);
  var Sub_Programa_Nombre = _Sub_Programa_Nombre(sequelize, DataTypes);
  var TABLA_AUXILIAR = _TABLA_AUXILIAR(sequelize, DataTypes);
  var TA_CATALOGO = _TA_CATALOGO(sequelize, DataTypes);
  var TA_CLASIFICADOR = _TA_CLASIFICADOR(sequelize, DataTypes);
  var TA_EJECUTORA = _TA_EJECUTORA(sequelize, DataTypes);
  var TA_ESTABLECIMIENTO = _TA_ESTABLECIMIENTO(sequelize, DataTypes);
  var TA_PERSONAL = _TA_PERSONAL(sequelize, DataTypes);
  var TA_PLAN_PRODUCCION = _TA_PLAN_PRODUCCION(sequelize, DataTypes);
  var TA_PLAN_REQUERIMIENTO = _TA_PLAN_REQUERIMIENTO(sequelize, DataTypes);
  var TA_PRECIOS = _TA_PRECIOS(sequelize, DataTypes);
  var TA_UNIDAD_MEDIDA = _TA_UNIDAD_MEDIDA(sequelize, DataTypes);
  var TCATALOGO_PROD = _TCATALOGO_PROD(sequelize, DataTypes);
  var TCatalogo = _TCatalogo(sequelize, DataTypes);
  var TEMP_CCN_ORIGEN = _TEMP_CCN_ORIGEN(sequelize, DataTypes);
  var TEMP_SIG_CUADRO_NECESIDAD = _TEMP_SIG_CUADRO_NECESIDAD(sequelize, DataTypes);
  var TEMP_SIG_CUADRO_NECESIDAD_DET = _TEMP_SIG_CUADRO_NECESIDAD_DET(sequelize, DataTypes);
  var TIPO_A = _TIPO_A(sequelize, DataTypes);
  var TIPO_B = _TIPO_B(sequelize, DataTypes);
  var TIPO_B_A = _TIPO_B_A(sequelize, DataTypes);
  var TIPO_B_CUENTA = _TIPO_B_CUENTA(sequelize, DataTypes);
  var TIPO_B_ITEM = _TIPO_B_ITEM(sequelize, DataTypes);
  var TIPO_DOCUMENTO = _TIPO_DOCUMENTO(sequelize, DataTypes);
  var TMP_ACT_PROY_NOMBRE_FASE = _TMP_ACT_PROY_NOMBRE_FASE(sequelize, DataTypes);
  var TMP_CATALOGO_EQUIV_SBN = _TMP_CATALOGO_EQUIV_SBN(sequelize, DataTypes);
  var TMP_COMPONENTE_NOMBRE_FASE = _TMP_COMPONENTE_NOMBRE_FASE(sequelize, DataTypes);
  var TMP_CONSUCODE_SIG_PAAC_CONS = _TMP_CONSUCODE_SIG_PAAC_CONS(sequelize, DataTypes);
  var TMP_ESTRATEGIA_NACIONAL = _TMP_ESTRATEGIA_NACIONAL(sequelize, DataTypes);
  var TMP_ESTRATEGIA_NACIONAL_EJEC = _TMP_ESTRATEGIA_NACIONAL_EJEC(sequelize, DataTypes);
  var TMP_ESTRATEGIA_NACIONAL_NOMBRE = _TMP_ESTRATEGIA_NACIONAL_NOMBRE(sequelize, DataTypes);
  var TMP_FINALIDAD_FASE = _TMP_FINALIDAD_FASE(sequelize, DataTypes);
  var TMP_FUNCION_FASE = _TMP_FUNCION_FASE(sequelize, DataTypes);
  var TMP_KITS = _TMP_KITS(sequelize, DataTypes);
  var TMP_ORDEN_X_CC = _TMP_ORDEN_X_CC(sequelize, DataTypes);
  var TMP_PARAMETROS_CRON_OT = _TMP_PARAMETROS_CRON_OT(sequelize, DataTypes);
  var TMP_PARAMETROS_PREPAO = _TMP_PARAMETROS_PREPAO(sequelize, DataTypes);
  var TMP_PLIEGO_SIAF = _TMP_PLIEGO_SIAF(sequelize, DataTypes);
  var TMP_PROGRAMA_NOMBRE_FASE = _TMP_PROGRAMA_NOMBRE_FASE(sequelize, DataTypes);
  var TMP_SEGUIMIENTO_PAAC_MODIF = _TMP_SEGUIMIENTO_PAAC_MODIF(sequelize, DataTypes);
  var TMP_SIG_CENTRO_COSTO = _TMP_SIG_CENTRO_COSTO(sequelize, DataTypes);
  var TMP_SIG_CN_TECHO_APROBADO = _TMP_SIG_CN_TECHO_APROBADO(sequelize, DataTypes);
  var TMP_SIG_CN_TECHO_APROB_UPD = _TMP_SIG_CN_TECHO_APROB_UPD(sequelize, DataTypes);
  var TMP_SIG_DETALLE_MOVIM_ALMACEN = _TMP_SIG_DETALLE_MOVIM_ALMACEN(sequelize, DataTypes);
  var TMP_SIG_FAMILIA_CUENTA_EJECUTORA = _TMP_SIG_FAMILIA_CUENTA_EJECUTORA(sequelize, DataTypes);
  var TMP_SIG_KARDEX_POR_ALMACEN = _TMP_SIG_KARDEX_POR_ALMACEN(sequelize, DataTypes);
  var TMP_SIG_MAESTRO_ACTIVIDAD_POI = _TMP_SIG_MAESTRO_ACTIVIDAD_POI(sequelize, DataTypes);
  var TMP_SIG_MOVIM_ALMACEN = _TMP_SIG_MOVIM_ALMACEN(sequelize, DataTypes);
  var TMP_SIG_PAAC_CENTRO_COSTO = _TMP_SIG_PAAC_CENTRO_COSTO(sequelize, DataTypes);
  var TMP_SIG_PAAC_ITEM = _TMP_SIG_PAAC_ITEM(sequelize, DataTypes);
  var TMP_SIG_PAAC_METAS = _TMP_SIG_PAAC_METAS(sequelize, DataTypes);
  var TMP_SIG_SECUENCIA_MOV_ALMACEN = _TMP_SIG_SECUENCIA_MOV_ALMACEN(sequelize, DataTypes);
  var TMP_SIG_SUB_FINALIDAD = _TMP_SIG_SUB_FINALIDAD(sequelize, DataTypes);
  var TMP_SIG_TECHO_APROB_UPD_01 = _TMP_SIG_TECHO_APROB_UPD_01(sequelize, DataTypes);
  var TMP_SIG_TECHO_APROB_UPD_02 = _TMP_SIG_TECHO_APROB_UPD_02(sequelize, DataTypes);
  var TMP_SIG_TECHO_APROB_UPD_03 = _TMP_SIG_TECHO_APROB_UPD_03(sequelize, DataTypes);
  var TMP_SIG_TECHO_APROB_UPD_04 = _TMP_SIG_TECHO_APROB_UPD_04(sequelize, DataTypes);
  var TMP_SIG_TECHO_APROB_UPD_05 = _TMP_SIG_TECHO_APROB_UPD_05(sequelize, DataTypes);
  var TMP_SIG_UBICAC_FISICA = _TMP_SIG_UBICAC_FISICA(sequelize, DataTypes);
  var TMP_SUBFIN_XLS = _TMP_SUBFIN_XLS(sequelize, DataTypes);
  var TMP_SUB_FINALIDAD = _TMP_SUB_FINALIDAD(sequelize, DataTypes);
  var TMP_SUB_PROGRAMA_NOMBRE_FASE = _TMP_SUB_PROGRAMA_NOMBRE_FASE(sequelize, DataTypes);
  var TMP_UNIDAD_MEDIDA = _TMP_UNIDAD_MEDIDA(sequelize, DataTypes);
  var TMP_VALIDA_PROG_ESTRATEGICO = _TMP_VALIDA_PROG_ESTRATEGICO(sequelize, DataTypes);
  var TRANSFERENCIA_ORIGEN = _TRANSFERENCIA_ORIGEN(sequelize, DataTypes);
  var VALIDA_CADENA_X_UNID_MEDIDA = _VALIDA_CADENA_X_UNID_MEDIDA(sequelize, DataTypes);
  var VALIDA_CAD_X_UNID_MEDIDA_TMP = _VALIDA_CAD_X_UNID_MEDIDA_TMP(sequelize, DataTypes);
  var VALIDA_PROG_ESTRATEGICO = _VALIDA_PROG_ESTRATEGICO(sequelize, DataTypes);
  var XXX_MIGRA_2016_MAESTRO = _XXX_MIGRA_2016_MAESTRO(sequelize, DataTypes);
  var aaa = _aaa(sequelize, DataTypes);
  var acumulado_encargo = _acumulado_encargo(sequelize, DataTypes);
  var cert_cab = _cert_cab(sequelize, DataTypes);
  var cert_det = _cert_det(sequelize, DataTypes);
  var clase_bien_serv = _clase_bien_serv(sequelize, DataTypes);
  var codigo_general = _codigo_general(sequelize, DataTypes);
  var codigo_general_det = _codigo_general_det(sequelize, DataTypes);
  var dnpp_act_proy_nombre = _dnpp_act_proy_nombre(sequelize, DataTypes);
  var dnpp_clasificador = _dnpp_clasificador(sequelize, DataTypes);
  var dnpp_clasificador_equivalencia = _dnpp_clasificador_equivalencia(sequelize, DataTypes);
  var dnpp_componente_nombre = _dnpp_componente_nombre(sequelize, DataTypes);
  var dnpp_familia_clasificador = _dnpp_familia_clasificador(sequelize, DataTypes);
  var dnpp_finalidad = _dnpp_finalidad(sequelize, DataTypes);
  var dnpp_funcion = _dnpp_funcion(sequelize, DataTypes);
  var dnpp_programa_nombre = _dnpp_programa_nombre(sequelize, DataTypes);
  var dnpp_sub_programa_nombre = _dnpp_sub_programa_nombre(sequelize, DataTypes);
  var dtproperties = _dtproperties(sequelize, DataTypes);
  var ejecutora = _ejecutora(sequelize, DataTypes);
  var ejecutora_externa = _ejecutora_externa(sequelize, DataTypes);
  var elemento_ciiu = _elemento_ciiu(sequelize, DataTypes);
  var expediente_encargo = _expediente_encargo(sequelize, DataTypes);
  var familia_bien_serv = _familia_bien_serv(sequelize, DataTypes);
  var familia_equivalencia = _familia_equivalencia(sequelize, DataTypes);
  var gestora = _gestora(sequelize, DataTypes);
  var grupo_bien_serv = _grupo_bien_serv(sequelize, DataTypes);
  var menus = _menus(sequelize, DataTypes);
  var meta = _meta(sequelize, DataTypes);
  var meta_encargo = _meta_encargo(sequelize, DataTypes);
  var metas_tmp = _metas_tmp(sequelize, DataTypes);
  var operacion = _operacion(sequelize, DataTypes);
  var operacion_familia = _operacion_familia(sequelize, DataTypes);
  var pais = _pais(sequelize, DataTypes);
  var pbcatcol = _pbcatcol(sequelize, DataTypes);
  var pbcatedt = _pbcatedt(sequelize, DataTypes);
  var pbcatfmt = _pbcatfmt(sequelize, DataTypes);
  var pbcattbl = _pbcattbl(sequelize, DataTypes);
  var pbcatvld = _pbcatvld(sequelize, DataTypes);
  var per = _per(sequelize, DataTypes);
  var pliego = _pliego(sequelize, DataTypes);
  var prov = _prov(sequelize, DataTypes);
  var sector = _sector(sequelize, DataTypes);
  var sig_act_proy_nombre = _sig_act_proy_nombre(sequelize, DataTypes);
  var sig_cadena_equivalencia = _sig_cadena_equivalencia(sequelize, DataTypes);
  var sig_centro_costo_equivalencia = _sig_centro_costo_equivalencia(sequelize, DataTypes);
  var sig_centro_costo_tarea = _sig_centro_costo_tarea(sequelize, DataTypes);
  var sig_centro_costo_x_item = _sig_centro_costo_x_item(sequelize, DataTypes);
  var sig_componente_nombre = _sig_componente_nombre(sequelize, DataTypes);
  var sig_conciliacion_sobrantes = _sig_conciliacion_sobrantes(sequelize, DataTypes);
  var sig_concurrencia_interfase_web = _sig_concurrencia_interfase_web(sequelize, DataTypes);
  var sig_contrato_descuento = _sig_contrato_descuento(sequelize, DataTypes);
  var sig_cua_nec_det_id = _sig_cua_nec_det_id(sequelize, DataTypes);
  var sig_cuadro_anual = _sig_cuadro_anual(sequelize, DataTypes);
  var sig_cuadro_necesidad_det_tmp = _sig_cuadro_necesidad_det_tmp(sequelize, DataTypes);
  var sig_cuadro_necesidad_tmp = _sig_cuadro_necesidad_tmp(sequelize, DataTypes);
  var sig_cuadro_x_centro = _sig_cuadro_x_centro(sequelize, DataTypes);
  var sig_cuenta_equivalencia = _sig_cuenta_equivalencia(sequelize, DataTypes);
  var sig_detalle_cuadro_anual = _sig_detalle_cuadro_anual(sequelize, DataTypes);
  var sig_detalle_movim_temp = _sig_detalle_movim_temp(sequelize, DataTypes);
  var sig_ejecutora = _sig_ejecutora(sequelize, DataTypes);
  var sig_equivalencia_ue = _sig_equivalencia_ue(sequelize, DataTypes);
  var sig_estrategia_parametro = _sig_estrategia_parametro(sequelize, DataTypes);
  var sig_finalidad = _sig_finalidad(sequelize, DataTypes);
  var sig_funcion = _sig_funcion(sequelize, DataTypes);
  var sig_int_consolidado = _sig_int_consolidado(sequelize, DataTypes);
  var sig_int_techo_ppto = _sig_int_techo_ppto(sequelize, DataTypes);
  var sig_int_techo_ppto_carga = _sig_int_techo_ppto_carga(sequelize, DataTypes);
  var sig_item_viatico_pasaje = _sig_item_viatico_pasaje(sequelize, DataTypes);
  var sig_kardex_equivalencia_item = _sig_kardex_equivalencia_item(sequelize, DataTypes);
  var sig_maestro = _sig_maestro(sequelize, DataTypes);
  var sig_maestro_det_cadena = _sig_maestro_det_cadena(sequelize, DataTypes);
  var sig_maestro_det_numerico = _sig_maestro_det_numerico(sequelize, DataTypes);
  var sig_maestro_det_referencia = _sig_maestro_det_referencia(sequelize, DataTypes);
  var sig_maestro_parametro = _sig_maestro_parametro(sequelize, DataTypes);
  var sig_meta_prop = _sig_meta_prop(sequelize, DataTypes);
  var sig_metas_x_centro = _sig_metas_x_centro(sequelize, DataTypes);
  var sig_parametro_anio = _sig_parametro_anio(sequelize, DataTypes);
  var sig_parametro_ejecutora = _sig_parametro_ejecutora(sequelize, DataTypes);
  var sig_pat_equi_cuenta = _sig_pat_equi_cuenta(sequelize, DataTypes);
  var sig_personal = _sig_personal(sequelize, DataTypes);
  var sig_personal_beneficiario = _sig_personal_beneficiario(sequelize, DataTypes);
  var sig_planilla_concepto_clasif = _sig_planilla_concepto_clasif(sequelize, DataTypes);
  var sig_planilla_concepto_cpago = _sig_planilla_concepto_cpago(sequelize, DataTypes);
  var sig_pliego = _sig_pliego(sequelize, DataTypes);
  var sig_ppr_cua_nec_det_id = _sig_ppr_cua_nec_det_id(sequelize, DataTypes);
  var sig_ppr_espserv = _sig_ppr_espserv(sequelize, DataTypes);
  var sig_ppr_sube = _sig_ppr_sube(sequelize, DataTypes);
  var sig_ppr_ups = _sig_ppr_ups(sequelize, DataTypes);
  var sig_ppr_ups_sbas = _sig_ppr_ups_sbas(sequelize, DataTypes);
  var sig_programa_nombre = _sig_programa_nombre(sequelize, DataTypes);
  var sig_proy_cargo = _sig_proy_cargo(sequelize, DataTypes);
  var sig_proy_ciudad = _sig_proy_ciudad(sequelize, DataTypes);
  var sig_proy_comi = _sig_proy_comi(sequelize, DataTypes);
  var sig_proy_comi_destino = _sig_proy_comi_destino(sequelize, DataTypes);
  var sig_proy_comi_ruta = _sig_proy_comi_ruta(sequelize, DataTypes);
  var sig_proy_concepto_gasto = _sig_proy_concepto_gasto(sequelize, DataTypes);
  var sig_proy_destino = _sig_proy_destino(sequelize, DataTypes);
  var sig_proy_destino_cargo = _sig_proy_destino_cargo(sequelize, DataTypes);
  var sig_proy_docu_pasaje = _sig_proy_docu_pasaje(sequelize, DataTypes);
  var sig_proy_pedidos = _sig_proy_pedidos(sequelize, DataTypes);
  var sig_proy_ruta = _sig_proy_ruta(sequelize, DataTypes);
  var sig_proy_subactividad = _sig_proy_subactividad(sequelize, DataTypes);
  var sig_proy_tipo_cargo = _sig_proy_tipo_cargo(sequelize, DataTypes);
  var sig_sedes = _sig_sedes(sequelize, DataTypes);
  var sig_sub_programa_nombre = _sig_sub_programa_nombre(sequelize, DataTypes);
  var sig_subtipos_patrimonio = _sig_subtipos_patrimonio(sequelize, DataTypes);
  var sig_tarea = _sig_tarea(sequelize, DataTypes);
  var sig_techo_presupuestal = _sig_techo_presupuestal(sequelize, DataTypes);
  var sig_tes_registro_compras = _sig_tes_registro_compras(sequelize, DataTypes);
  var sig_tipo_ActProy = _sig_tipo_ActProy(sequelize, DataTypes);
  var sig_tipo_bienes = _sig_tipo_bienes(sequelize, DataTypes);
  var sig_tipo_generico = _sig_tipo_generico(sequelize, DataTypes);
  var sig_tipo_patrimonio = _sig_tipo_patrimonio(sequelize, DataTypes);
  var sig_tipo_proyecto = _sig_tipo_proyecto(sequelize, DataTypes);
  var sig_tmp_cat_justif = _sig_tmp_cat_justif(sequelize, DataTypes);
  var sig_tmp_cua_nec_det_id = _sig_tmp_cua_nec_det_id(sequelize, DataTypes);
  var sig_tmp_equivalencia_meta = _sig_tmp_equivalencia_meta(sequelize, DataTypes);
  var sig_tmp_migracion_metas = _sig_tmp_migracion_metas(sequelize, DataTypes);
  var sig_tmp_pedidos_rutas = _sig_tmp_pedidos_rutas(sequelize, DataTypes);
  var sig_usuario_ejecutora = _sig_usuario_ejecutora(sequelize, DataTypes);
  var sig_valida_techo = _sig_valida_techo(sequelize, DataTypes);
  var t_act_proy = _t_act_proy(sequelize, DataTypes);
  var t_act_proy_nombre = _t_act_proy_nombre(sequelize, DataTypes);
  var t_componente = _t_componente(sequelize, DataTypes);
  var t_componente_nombre = _t_componente_nombre(sequelize, DataTypes);
  var t_finalidad = _t_finalidad(sequelize, DataTypes);
  var t_funcion = _t_funcion(sequelize, DataTypes);
  var t_meta = _t_meta(sequelize, DataTypes);
  var t_programa = _t_programa(sequelize, DataTypes);
  var t_programa_nombre = _t_programa_nombre(sequelize, DataTypes);
  var t_sub_programa = _t_sub_programa(sequelize, DataTypes);
  var t_sub_programa_nombre = _t_sub_programa_nombre(sequelize, DataTypes);
  var temp_SIG_PPR_METFIS_X_SUBFIN = _temp_SIG_PPR_METFIS_X_SUBFIN(sequelize, DataTypes);
  var temp_sig_cua_nec_det_id = _temp_sig_cua_nec_det_id(sequelize, DataTypes);
  var tmpPagosLotes = _tmpPagosLotes(sequelize, DataTypes);
  var tmp_SIG_ASIGNACIONES = _tmp_SIG_ASIGNACIONES(sequelize, DataTypes);
  var tmp_SIG_DETALLE_ACTIVOS = _tmp_SIG_DETALLE_ACTIVOS(sequelize, DataTypes);
  var tmp_SIG_DETALLE_INVENT_FISICO = _tmp_SIG_DETALLE_INVENT_FISICO(sequelize, DataTypes);
  var tmp_SIG_DET_MOVIM_PATRIMONIO = _tmp_SIG_DET_MOVIM_PATRIMONIO(sequelize, DataTypes);
  var tmp_SIG_ESPECIF_TECNICA_ACTIVO = _tmp_SIG_ESPECIF_TECNICA_ACTIVO(sequelize, DataTypes);
  var tmp_SIG_INVENTARIO_FISICO = _tmp_SIG_INVENTARIO_FISICO(sequelize, DataTypes);
  var tmp_cab = _tmp_cab(sequelize, DataTypes);
  var tmp_carga_kit = _tmp_carga_kit(sequelize, DataTypes);
  var tmp_catalogo_procesar_items = _tmp_catalogo_procesar_items(sequelize, DataTypes);
  var tmp_categorias = _tmp_categorias(sequelize, DataTypes);
  var tmp_det = _tmp_det(sequelize, DataTypes);
  var tmp_ejecutora = _tmp_ejecutora(sequelize, DataTypes);
  var tmp_familia = _tmp_familia(sequelize, DataTypes);
  var tmp_formulacion_detalle = _tmp_formulacion_detalle(sequelize, DataTypes);
  var tmp_item = _tmp_item(sequelize, DataTypes);
  var tmp_item0 = _tmp_item0(sequelize, DataTypes);
  var tmp_parametros_pao = _tmp_parametros_pao(sequelize, DataTypes);
  var tmp_per = _tmp_per(sequelize, DataTypes);
  var tmp_ppr_PATRIMONIO = _tmp_ppr_PATRIMONIO(sequelize, DataTypes);
  var tmp_propuesta_fase = _tmp_propuesta_fase(sequelize, DataTypes);
  var tmp_sig_personal = _tmp_sig_personal(sequelize, DataTypes);
  var tmp_techo_cn_fase = _tmp_techo_cn_fase(sequelize, DataTypes);
  var tmp_techo_fase_2 = _tmp_techo_fase_2(sequelize, DataTypes);
  var tmp_techo_fase_3 = _tmp_techo_fase_3(sequelize, DataTypes);
  var tmp_techo_fase_4 = _tmp_techo_fase_4(sequelize, DataTypes);
  var tmp_techo_fase_5 = _tmp_techo_fase_5(sequelize, DataTypes);
  var tmp_techo_fase_6 = _tmp_techo_fase_6(sequelize, DataTypes);
  var tmp_techo_fase_7 = _tmp_techo_fase_7(sequelize, DataTypes);
  var tmp_techo_fase_8 = _tmp_techo_fase_8(sequelize, DataTypes);
  var ubigeo = _ubigeo(sequelize, DataTypes);
  var unidad_medida = _unidad_medida(sequelize, DataTypes);
  var users = _users(sequelize, DataTypes);
  var users_menu = _users_menu(sequelize, DataTypes);
  var users_opcion = _users_opcion(sequelize, DataTypes);

  CATEGORIA_CIIU.belongsToMany(CATEGORIA_CIIU, { as: 'TIPO_CIIU_CATEGORIA_CIIUs', through: GRUPO_CIIU, foreignKey: "CATEGORIA_CIIU", otherKey: "TIPO_CIIU" });
  CATEGORIA_CIIU.belongsToMany(CATEGORIA_CIIU, { as: 'CATEGORIA_CIIU_CATEGORIA_CIIUs', through: GRUPO_CIIU, foreignKey: "TIPO_CIIU", otherKey: "CATEGORIA_CIIU" });
  Categoria_Gasto.belongsToMany(Categoria_Gasto, { as: 'categ_gasto_Categoria_Gastos', through: Grupo_Gasto, foreignKey: "ANO_EJE", otherKey: "categ_gasto" });
  Categoria_Gasto.belongsToMany(Categoria_Gasto, { as: 'ANO_EJE_Categoria_Gastos', through: Grupo_Gasto, foreignKey: "categ_gasto", otherKey: "ANO_EJE" });
  ESTRATEGIA_NACIONAL_NOMBRE.belongsToMany(ESTRATEGIA_NACIONAL_NOMBRE, { as: 'ESTRATEGIA_NACIONAL_ESTRATEGIA_NACIONAL_NOMBREs', through: ESTRATEGIA_NACIONAL, foreignKey: "ANO_EJE", otherKey: "ESTRATEGIA_NACIONAL" });
  ESTRATEGIA_NACIONAL_NOMBRE.belongsToMany(ESTRATEGIA_NACIONAL_NOMBRE, { as: 'ANO_EJE_ESTRATEGIA_NACIONAL_NOMBREs', through: ESTRATEGIA_NACIONAL, foreignKey: "ESTRATEGIA_NACIONAL", otherKey: "ANO_EJE" });
  ESTRATEGIA_NACIONAL_NOMBRE.belongsToMany(ESTRATEGIA_NACIONAL_NOMBRE, { as: 'ESTRATEGIA_NACIONAL_ESTRATEGIA_NACIONAL_NOMBRE_ESTRATEGIA_NACIONAL_EJECs', through: ESTRATEGIA_NACIONAL_EJEC, foreignKey: "ANO_EJE", otherKey: "ESTRATEGIA_NACIONAL" });
  ESTRATEGIA_NACIONAL_NOMBRE.belongsToMany(ESTRATEGIA_NACIONAL_NOMBRE, { as: 'ANO_EJE_ESTRATEGIA_NACIONAL_NOMBRE_ESTRATEGIA_NACIONAL_EJECs', through: ESTRATEGIA_NACIONAL_EJEC, foreignKey: "ESTRATEGIA_NACIONAL", otherKey: "ANO_EJE" });
  Origen.belongsToMany(Origen, { as: 'ORIGEN_Origens', through: Fuente_Financ, foreignKey: "ANO_EJE", otherKey: "ORIGEN" });
  Origen.belongsToMany(Origen, { as: 'ANO_EJE_Origens', through: Fuente_Financ, foreignKey: "ORIGEN", otherKey: "ANO_EJE" });
  SIG_CATALOGO_RUBRO.belongsToMany(SIG_CATALOGO_RUBRO, { as: 'TIPO_SIG_CATALOGO_RUBROs', through: SIG_CATALOGO_RUBRO_X_ITEM, foreignKey: "RUBRO", otherKey: "TIPO" });
  SIG_CATALOGO_RUBRO.belongsToMany(SIG_CATALOGO_RUBRO, { as: 'RUBRO_SIG_CATALOGO_RUBROs', through: SIG_CATALOGO_RUBRO_X_ITEM, foreignKey: "TIPO", otherKey: "RUBRO" });
  SIG_CENTRO_COSTO.belongsToMany(sig_personal, { as: 'SEC_EJEC_sig_personals', through: SIG_BIENES_DURADEROS, foreignKey: "ANO_EJE", otherKey: "SEC_EJEC" });
  SIG_CENTRO_COSTO.belongsToMany(sig_personal, { as: 'SEC_EJEC_sig_personal_SIG_CUADRO_ADQUISICIONs', through: SIG_CUADRO_ADQUISICION, foreignKey: "ANO_EJE", otherKey: "SEC_EJEC" });
  SIG_CERTIFICACION.belongsToMany(SIG_CERTIFICACION, { as: 'ANO_EJE_SIG_CERTIFICACIONs', through: SIG_ORDEN_ADQUISICION, foreignKey: "SEC_EJEC", otherKey: "ANO_EJE" });
  SIG_CERTIFICACION.belongsToMany(SIG_CERTIFICACION, { as: 'SEC_EJEC_SIG_CERTIFICACIONs', through: SIG_ORDEN_ADQUISICION, foreignKey: "ANO_EJE", otherKey: "SEC_EJEC" });
  SIG_CLASIFICADOR_GASTO.belongsToMany(SIG_CLASIFICADOR_GASTO, { as: 'CLASIFICADOR_SIG_CLASIFICADOR_GASTOs', through: SIG_OPERACION_FAMILIA_PROCESO, foreignKey: "ANO_EJE", otherKey: "CLASIFICADOR" });
  SIG_CLASIFICADOR_GASTO.belongsToMany(SIG_CLASIFICADOR_GASTO, { as: 'ANO_EJE_SIG_CLASIFICADOR_GASTOs', through: SIG_OPERACION_FAMILIA_PROCESO, foreignKey: "CLASIFICADOR", otherKey: "ANO_EJE" });
  SIG_CONCEPTO_MAESTRO.belongsToMany(operacion, { as: 'ANO_EJE_operacions', through: SIG_CONCEPTO_GASTO, foreignKey: "CONCEPTO_GASTO", otherKey: "ANO_EJE" });
  SIG_CONSORCIOS.belongsToMany(SIG_CONTRATISTAS, { as: 'PROVEEDOR_SIG_CONTRATISTA', through: SIG_CONSORCIOS_DET, foreignKey: "COD_CONSORCIO", otherKey: "PROVEEDOR" });
  SIG_CONSTRUCCIONES.belongsToMany(SIG_CONSTRUCCIONES, { as: 'SEC_EJEC_SIG_CONSTRUCCIONEs', through: SIG_CONSTRUCCIONES_DET, foreignKey: "COD_CONSTRUC", otherKey: "SEC_EJEC" });
  SIG_CONSTRUCCIONES.belongsToMany(SIG_CONSTRUCCIONES, { as: 'COD_CONSTRUC_SIG_CONSTRUCCIONEs', through: SIG_CONSTRUCCIONES_DET, foreignKey: "SEC_EJEC", otherKey: "COD_CONSTRUC" });
  SIG_CONTRATISTAS.belongsToMany(SIG_CONSORCIOS, { as: 'COD_CONSORCIO_SIG_CONSORCIOs', through: SIG_CONSORCIOS_DET, foreignKey: "PROVEEDOR", otherKey: "COD_CONSORCIO" });
  SIG_CONVENIO.belongsToMany(SIG_CONVENIO, { as: 'SEC_EJEC_SIG_CONVENIOs', through: SIG_ENCARGO_REQ, foreignKey: "ANO_EJE", otherKey: "SEC_EJEC" });
  SIG_CONVENIO.belongsToMany(SIG_CONVENIO, { as: 'ANO_EJE_SIG_CONVENIOs', through: SIG_ENCARGO_REQ, foreignKey: "SEC_EJEC", otherKey: "ANO_EJE" });
  SIG_CUADRO_MODIFICADO.belongsToMany(SIG_CUADRO_MODIFICADO, { as: 'SEC_EJEC_SIG_CUADRO_MODIFICADOs', through: SIG_CUADRO_TRANSFERENCIA, foreignKey: "ANNO_EJEC", otherKey: "SEC_EJEC" });
  SIG_CUADRO_MODIFICADO.belongsToMany(SIG_CUADRO_MODIFICADO, { as: 'ANNO_EJEC_SIG_CUADRO_MODIFICADOs', through: SIG_CUADRO_TRANSFERENCIA, foreignKey: "SEC_EJEC", otherKey: "ANNO_EJEC" });
  SIG_DESTINOS.belongsToMany(sig_centro_costo_tarea, { as: 'ANO_EJE_sig_centro_costo_tareas', through: SIG_PEDIDOS, foreignKey: "SEC_EJEC", otherKey: "ANO_EJE" });
  SIG_MSG_MODULO.belongsToMany(SIG_MSG_MODULO, { as: 'SEC_MODULO_SIG_MSG_MODULOs', through: SIG_MSG_ACTIVA, foreignKey: "SEC_EJEC", otherKey: "SEC_MODULO" });
  SIG_MSG_MODULO.belongsToMany(SIG_MSG_MODULO, { as: 'SEC_EJEC_SIG_MSG_MODULOs', through: SIG_MSG_ACTIVA, foreignKey: "SEC_MODULO", otherKey: "SEC_EJEC" });
  SIG_MSG_MODULO.belongsToMany(SIG_MSG_MODULO, { as: 'SEC_MODULO_SIG_MSG_MODULO_SIG_MSG_GRUPOs', through: SIG_MSG_GRUPO, foreignKey: "SEC_EJEC", otherKey: "SEC_MODULO" });
  SIG_MSG_MODULO.belongsToMany(SIG_MSG_MODULO, { as: 'SEC_EJEC_SIG_MSG_MODULO_SIG_MSG_GRUPOs', through: SIG_MSG_GRUPO, foreignKey: "SEC_MODULO", otherKey: "SEC_EJEC" });
  SIG_MSG_MODULO.belongsToMany(SIG_MSG_MODULO, { as: 'SEC_MODULO_SIG_MSG_MODULO_SIG_MSG_TIPOs', through: SIG_MSG_TIPO, foreignKey: "SEC_EJEC", otherKey: "SEC_MODULO" });
  SIG_MSG_MODULO.belongsToMany(SIG_MSG_MODULO, { as: 'SEC_EJEC_SIG_MSG_MODULO_SIG_MSG_TIPOs', through: SIG_MSG_TIPO, foreignKey: "SEC_MODULO", otherKey: "SEC_EJEC" });
  SIG_ORDEN_ADQUISICION.belongsToMany(SIG_ORDEN_ADQUISICION, { as: 'SEC_EJEC_SIG_ORDEN_ADQUISICIONs', through: SIG_DEVENGADO, foreignKey: "ANO_EJE", otherKey: "SEC_EJEC" });
  SIG_ORDEN_ADQUISICION.belongsToMany(SIG_ORDEN_ADQUISICION, { as: 'ANO_EJE_SIG_ORDEN_ADQUISICIONs', through: SIG_DEVENGADO, foreignKey: "SEC_EJEC", otherKey: "ANO_EJE" });
  SIG_PAAC_CONSOLIDADO.belongsToMany(SIG_PAAC_CONSOLIDADO, { as: 'SEC_EJEC_SIG_PAAC_CONSOLIDADOs', through: SIG_CONTRATOS, foreignKey: "ANO_EJE", otherKey: "SEC_EJEC" });
  SIG_PAAC_CONSOLIDADO.belongsToMany(SIG_PAAC_CONSOLIDADO, { as: 'ANO_EJE_SIG_PAAC_CONSOLIDADOs', through: SIG_CONTRATOS, foreignKey: "SEC_EJEC", otherKey: "ANO_EJE" });
  SIG_PATRIMONIO.belongsToMany(SIG_PATRIMONIO, { as: 'SECUENCIA_SIG_PATRIMONIOs', through: SIG_MEJORAS, foreignKey: "SEC_EJEC", otherKey: "SECUENCIA" });
  SIG_PATRIMONIO.belongsToMany(SIG_PATRIMONIO, { as: 'SEC_EJEC_SIG_PATRIMONIOs', through: SIG_MEJORAS, foreignKey: "SECUENCIA", otherKey: "SEC_EJEC" });
  SIG_PATRIMONIO_INM.belongsToMany(SIG_PATRIMONIO_INM, { as: 'SECUENCIA_SIG_PATRIMONIO_INMs', through: SIG_INM_SEGUROS, foreignKey: "SEC_EJEC", otherKey: "SECUENCIA" });
  SIG_PATRIMONIO_INM.belongsToMany(SIG_PATRIMONIO_INM, { as: 'SEC_EJEC_SIG_PATRIMONIO_INMs', through: SIG_INM_SEGUROS, foreignKey: "SECUENCIA", otherKey: "SEC_EJEC" });
  SIG_PATRIMONIO_INM.belongsToMany(SIG_PATRIMONIO_INM, { as: 'SECUENCIA_SIG_PATRIMONIO_INM_SIG_INM_UNIDAD_ACTIVOs', through: SIG_INM_UNIDAD_ACTIVO, foreignKey: "SEC_EJEC", otherKey: "SECUENCIA" });
  SIG_PATRIMONIO_INM.belongsToMany(SIG_PATRIMONIO_INM, { as: 'SEC_EJEC_SIG_PATRIMONIO_INM_SIG_INM_UNIDAD_ACTIVOs', through: SIG_INM_UNIDAD_ACTIVO, foreignKey: "SECUENCIA", otherKey: "SEC_EJEC" });
  SIG_PEI_GENERAL.belongsToMany(SIG_PEI_GENERAL, { as: 'SECUENCIA_SIG_PEI_GENERALs', through: SIG_PEI_OBJETIVO_EST, foreignKey: "SEC_EJEC", otherKey: "SECUENCIA" });
  SIG_PEI_GENERAL.belongsToMany(SIG_PEI_GENERAL, { as: 'SEC_EJEC_SIG_PEI_GENERALs', through: SIG_PEI_OBJETIVO_EST, foreignKey: "SECUENCIA", otherKey: "SEC_EJEC" });
  SIG_PLANTILLA_GRUPO_NOTA.belongsToMany(sig_proy_comi, { as: 'ANO_EJEC_sig_proy_comis', through: SIG_PROY_PLANILLA_PASAJE, foreignKey: "SEC_EJEC", otherKey: "ANO_EJEC" });
  SIG_TES_CAJA.belongsToMany(SIG_TES_CAJA, { as: 'SEC_EJEC_SIG_TES_CAJAs', through: SIG_TES_CAJA_DETALLE, foreignKey: "COD_CAJA", otherKey: "SEC_EJEC" });
  SIG_TES_CAJA.belongsToMany(SIG_TES_CAJA, { as: 'COD_CAJA_SIG_TES_CAJAs', through: SIG_TES_CAJA_DETALLE, foreignKey: "SEC_EJEC", otherKey: "COD_CAJA" });
  SIG_TES_CAJA.belongsToMany(SIG_TES_CAJA, { as: 'SEC_EJEC_SIG_TES_CAJA_SIG_USUARIO_CAJAs', through: SIG_USUARIO_CAJA, foreignKey: "COD_CAJA", otherKey: "SEC_EJEC" });
  SIG_TES_CAJA.belongsToMany(SIG_TES_CAJA, { as: 'COD_CAJA_SIG_TES_CAJA_SIG_USUARIO_CAJAs', through: SIG_USUARIO_CAJA, foreignKey: "SEC_EJEC", otherKey: "COD_CAJA" });
  SIG_TIPO_INMUEBLE.belongsToMany(SIG_TIPO_UNIDAD_ACTIVO, { as: 'CODIGO_TIPO_UA_SIG_TIPO_UNIDAD_ACTIVOs', through: SIG_TIPO_INM_UNID_ACT, foreignKey: "CODIGO_TIPO_INM", otherKey: "CODIGO_TIPO_UA" });
  SIG_TIPO_UNIDAD_ACTIVO.belongsToMany(SIG_TIPO_INMUEBLE, { as: 'CODIGO_TIPO_INM_SIG_TIPO_INMUEBLEs', through: SIG_TIPO_INM_UNID_ACT, foreignKey: "CODIGO_TIPO_UA", otherKey: "CODIGO_TIPO_INM" });
  TIPO_A.belongsToMany(TIPO_B, { as: 'CODIGO_B_TIPO_Bs', through: TIPO_B_A, foreignKey: "CODIGO_A", otherKey: "CODIGO_B" });
  TIPO_B.belongsToMany(TIPO_A, { as: 'CODIGO_A_TIPO_As', through: TIPO_B_A, foreignKey: "CODIGO_B", otherKey: "CODIGO_A" });
  grupo_bien_serv.belongsToMany(grupo_bien_serv, { as: 'tipo_bien_grupo_bien_servs', through: clase_bien_serv, foreignKey: "grupo_bien", otherKey: "tipo_bien" });
  grupo_bien_serv.belongsToMany(grupo_bien_serv, { as: 'grupo_bien_grupo_bien_servs', through: clase_bien_serv, foreignKey: "tipo_bien", otherKey: "grupo_bien" });
  operacion.belongsToMany(SIG_CONCEPTO_MAESTRO, { as: 'CONCEPTO_GASTO_SIG_CONCEPTO_MAESTROs', through: SIG_CONCEPTO_GASTO, foreignKey: "ANO_EJE", otherKey: "CONCEPTO_GASTO" });
  pliego.belongsToMany(pliego, { as: 'sector_pliegos', through: gestora, foreignKey: "pliego", otherKey: "sector" });
  pliego.belongsToMany(pliego, { as: 'pliego_pliegos', through: gestora, foreignKey: "sector", otherKey: "pliego" });
  pliego.belongsToMany(pliego, { as: 'sector_pliego_sig_pliegos', through: sig_pliego, foreignKey: "pliego", otherKey: "sector" });
  pliego.belongsToMany(pliego, { as: 'pliego_pliego_sig_pliegos', through: sig_pliego, foreignKey: "sector", otherKey: "pliego" });
  sig_centro_costo_tarea.belongsToMany(SIG_DESTINOS, { as: 'SEC_EJEC_SIG_DESTINOs', through: SIG_PEDIDOS, foreignKey: "ANO_EJE", otherKey: "SEC_EJEC" });
  sig_ejecutora.belongsToMany(sig_maestro, { as: 'cod_maestro_sig_maestros', through: SIG_PARAMETRO_EJECUTORA_ANIO, foreignKey: "SEC_EJEC", otherKey: "cod_maestro" });
  sig_ejecutora.belongsToMany(sig_maestro, { as: 'cod_maestro_sig_maestro_sig_parametro_ejecutoras', through: sig_parametro_ejecutora, foreignKey: "sec_ejec", otherKey: "cod_maestro" });
  sig_maestro.belongsToMany(sig_ejecutora, { as: 'SEC_EJEC_sig_ejecutoras', through: SIG_PARAMETRO_EJECUTORA_ANIO, foreignKey: "cod_maestro", otherKey: "SEC_EJEC" });
  sig_maestro.belongsToMany(sig_ejecutora, { as: 'sec_ejec_sig_ejecutoras', through: sig_parametro_ejecutora, foreignKey: "cod_maestro", otherKey: "sec_ejec" });
  sig_personal.belongsToMany(SIG_CENTRO_COSTO, { as: 'ANO_EJE_SIG_CENTRO_COSTOs', through: SIG_BIENES_DURADEROS, foreignKey: "SEC_EJEC", otherKey: "ANO_EJE" });
  sig_personal.belongsToMany(SIG_CENTRO_COSTO, { as: 'ANO_EJE_SIG_CENTRO_COSTO_SIG_CUADRO_ADQUISICIONs', through: SIG_CUADRO_ADQUISICION, foreignKey: "SEC_EJEC", otherKey: "ANO_EJE" });
  sig_personal.belongsToMany(sig_personal, { as: 'sec_ejec_sig_personals', through: SIG_MOVIMIENTO_PERSONAL, foreignKey: "empleado", otherKey: "sec_ejec" });
  sig_personal.belongsToMany(sig_personal, { as: 'empleado_sig_personals', through: SIG_MOVIMIENTO_PERSONAL, foreignKey: "sec_ejec", otherKey: "empleado" });
  sig_personal.belongsToMany(sig_personal, { as: 'sec_ejec_sig_personal_SIG_PERSONAL_FIRMAs', through: SIG_PERSONAL_FIRMA, foreignKey: "empleado", otherKey: "sec_ejec" });
  sig_personal.belongsToMany(sig_personal, { as: 'empleado_sig_personal_SIG_PERSONAL_FIRMAs', through: SIG_PERSONAL_FIRMA, foreignKey: "sec_ejec", otherKey: "empleado" });
  sig_proy_cargo.belongsToMany(sig_proy_destino, { as: 'SEC_DESTINO_sig_proy_destinos', through: sig_proy_destino_cargo, foreignKey: "CARGO", otherKey: "SEC_DESTINO" });
  sig_proy_comi.belongsToMany(SIG_PLANTILLA_GRUPO_NOTA, { as: 'SEC_EJEC_SIG_PLANTILLA_GRUPO_NOTa', through: SIG_PROY_PLANILLA_PASAJE, foreignKey: "ANO_EJEC", otherKey: "SEC_EJEC" });
  sig_proy_destino.belongsToMany(sig_proy_cargo, { as: 'CARGO_sig_proy_cargos', through: sig_proy_destino_cargo, foreignKey: "SEC_DESTINO", otherKey: "CARGO" });
  sig_proy_destino.belongsToMany(sig_proy_destino, { as: 'O_SEC_DESTINO_sig_proy_destinos', through: sig_proy_ruta, foreignKey: "D_SEC_DESTINO", otherKey: "O_SEC_DESTINO" });
  sig_proy_destino.belongsToMany(sig_proy_destino, { as: 'D_SEC_DESTINO_sig_proy_destinos', through: sig_proy_ruta, foreignKey: "O_SEC_DESTINO", otherKey: "D_SEC_DESTINO" });
  sig_tarea.belongsToMany(sig_tarea, { as: 'ANO_EJE_sig_tareas', through: SIG_META_PROPUESTA, foreignKey: "SEC_EJEC", otherKey: "ANO_EJE" });
  sig_tarea.belongsToMany(sig_tarea, { as: 'SEC_EJEC_sig_tareas', through: SIG_META_PROPUESTA, foreignKey: "ANO_EJE", otherKey: "SEC_EJEC" });
  sig_tarea.belongsToMany(sig_tarea, { as: 'ano_eje_sig_tareas', through: meta, foreignKey: "sec_ejec", otherKey: "ano_eje" });
  sig_tarea.belongsToMany(sig_tarea, { as: 'sec_ejec_sig_tareas', through: meta, foreignKey: "ano_eje", otherKey: "sec_ejec" });
  sig_tipo_patrimonio.belongsToMany(sig_tipo_patrimonio, { as: 'tipo_patrim_sig_tipo_patrimonios', through: sig_subtipos_patrimonio, foreignKey: "clase_patrim", otherKey: "tipo_patrim" });
  sig_tipo_patrimonio.belongsToMany(sig_tipo_patrimonio, { as: 'clase_patrim_sig_tipo_patrimonios', through: sig_subtipos_patrimonio, foreignKey: "tipo_patrim", otherKey: "clase_patrim" });
  Componente.belongsTo(Act_Proy, { as: "act_proy_Act_Proy", foreignKey: "act_proy"});
  Act_Proy.hasMany(Componente, { as: "Componentes", foreignKey: "act_proy"});
  Componente.belongsTo(Act_Proy, { as: "funcion_Act_Proy", foreignKey: "funcion"});
  Act_Proy.hasMany(Componente, { as: "funcion_Componentes", foreignKey: "funcion"});
  Componente.belongsTo(Act_Proy, { as: "programa_Act_Proy", foreignKey: "programa"});
  Act_Proy.hasMany(Componente, { as: "programa_Componentes", foreignKey: "programa"});
  Componente.belongsTo(Act_Proy, { as: "sub_programa_Act_Proy", foreignKey: "sub_programa"});
  Act_Proy.hasMany(Componente, { as: "sub_programa_Componentes", foreignKey: "sub_programa"});
  Act_Proy.belongsTo(Act_Proy_Nombre, { as: "act_proy_Act_Proy_Nombre", foreignKey: "act_proy"});
  Act_Proy_Nombre.hasMany(Act_Proy, { as: "Act_Proys", foreignKey: "act_proy"});
  SIG_BIENES_DURADEROS.belongsTo(CATALOGO_BIEN_SERV, { as: "CLASE_BIEN_CATALOGO_BIEN_SERV", foreignKey: "CLASE_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_BIENES_DURADEROS, { as: "SIG_BIENES_DURADEROs", foreignKey: "CLASE_BIEN"});
  SIG_BIENES_DURADEROS.belongsTo(CATALOGO_BIEN_SERV, { as: "FAMILIA_BIEN_CATALOGO_BIEN_SERV", foreignKey: "FAMILIA_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_BIENES_DURADEROS, { as: "FAMILIA_BIEN_SIG_BIENES_DURADEROs", foreignKey: "FAMILIA_BIEN"});
  SIG_BIENES_DURADEROS.belongsTo(CATALOGO_BIEN_SERV, { as: "GRUPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "GRUPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_BIENES_DURADEROS, { as: "GRUPO_BIEN_SIG_BIENES_DURADEROs", foreignKey: "GRUPO_BIEN"});
  SIG_BIENES_DURADEROS.belongsTo(CATALOGO_BIEN_SERV, { as: "ITEM_BIEN_CATALOGO_BIEN_SERV", foreignKey: "ITEM_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_BIENES_DURADEROS, { as: "ITEM_BIEN_SIG_BIENES_DURADEROs", foreignKey: "ITEM_BIEN"});
  SIG_BIENES_DURADEROS.belongsTo(CATALOGO_BIEN_SERV, { as: "TIPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "TIPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_BIENES_DURADEROS, { as: "TIPO_BIEN_SIG_BIENES_DURADEROs", foreignKey: "TIPO_BIEN"});
  SIG_CATALOGO_COMPONENTES.belongsTo(CATALOGO_BIEN_SERV, { as: "CLASE_BIEN_CATALOGO_BIEN_SERV", foreignKey: "CLASE_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CATALOGO_COMPONENTES, { as: "SIG_CATALOGO_COMPONENTEs", foreignKey: "CLASE_BIEN"});
  SIG_CATALOGO_COMPONENTES.belongsTo(CATALOGO_BIEN_SERV, { as: "FAMILIA_BIEN_CATALOGO_BIEN_SERV", foreignKey: "FAMILIA_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CATALOGO_COMPONENTES, { as: "FAMILIA_BIEN_SIG_CATALOGO_COMPONENTEs", foreignKey: "FAMILIA_BIEN"});
  SIG_CATALOGO_COMPONENTES.belongsTo(CATALOGO_BIEN_SERV, { as: "GRUPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "GRUPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CATALOGO_COMPONENTES, { as: "GRUPO_BIEN_SIG_CATALOGO_COMPONENTEs", foreignKey: "GRUPO_BIEN"});
  SIG_CATALOGO_COMPONENTES.belongsTo(CATALOGO_BIEN_SERV, { as: "ITEM_BIEN_CATALOGO_BIEN_SERV", foreignKey: "ITEM_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CATALOGO_COMPONENTES, { as: "ITEM_BIEN_SIG_CATALOGO_COMPONENTEs", foreignKey: "ITEM_BIEN"});
  SIG_CATALOGO_COMPONENTES.belongsTo(CATALOGO_BIEN_SERV, { as: "SEC_EJEC_CATALOGO_BIEN_SERV", foreignKey: "SEC_EJEC"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CATALOGO_COMPONENTES, { as: "SEC_EJEC_SIG_CATALOGO_COMPONENTEs", foreignKey: "SEC_EJEC"});
  SIG_CATALOGO_COMPONENTES.belongsTo(CATALOGO_BIEN_SERV, { as: "TIPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "TIPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CATALOGO_COMPONENTES, { as: "TIPO_BIEN_SIG_CATALOGO_COMPONENTEs", foreignKey: "TIPO_BIEN"});
  SIG_CATALOGO_UNIDAD_EJECUTORA.belongsTo(CATALOGO_BIEN_SERV, { as: "CLASE_BIEN_CATALOGO_BIEN_SERV", foreignKey: "CLASE_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CATALOGO_UNIDAD_EJECUTORA, { as: "SIG_CATALOGO_UNIDAD_EJECUTORAs", foreignKey: "CLASE_BIEN"});
  SIG_CATALOGO_UNIDAD_EJECUTORA.belongsTo(CATALOGO_BIEN_SERV, { as: "FAMILIA_BIEN_CATALOGO_BIEN_SERV", foreignKey: "FAMILIA_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CATALOGO_UNIDAD_EJECUTORA, { as: "FAMILIA_BIEN_SIG_CATALOGO_UNIDAD_EJECUTORAs", foreignKey: "FAMILIA_BIEN"});
  SIG_CATALOGO_UNIDAD_EJECUTORA.belongsTo(CATALOGO_BIEN_SERV, { as: "GRUPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "GRUPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CATALOGO_UNIDAD_EJECUTORA, { as: "GRUPO_BIEN_SIG_CATALOGO_UNIDAD_EJECUTORAs", foreignKey: "GRUPO_BIEN"});
  SIG_CATALOGO_UNIDAD_EJECUTORA.belongsTo(CATALOGO_BIEN_SERV, { as: "ITEM_BIEN_CATALOGO_BIEN_SERV", foreignKey: "ITEM_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CATALOGO_UNIDAD_EJECUTORA, { as: "ITEM_BIEN_SIG_CATALOGO_UNIDAD_EJECUTORAs", foreignKey: "ITEM_BIEN"});
  SIG_CATALOGO_UNIDAD_EJECUTORA.belongsTo(CATALOGO_BIEN_SERV, { as: "SEC_EJEC_CATALOGO_BIEN_SERV", foreignKey: "SEC_EJEC"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CATALOGO_UNIDAD_EJECUTORA, { as: "SEC_EJEC_SIG_CATALOGO_UNIDAD_EJECUTORAs", foreignKey: "SEC_EJEC"});
  SIG_CATALOGO_UNIDAD_EJECUTORA.belongsTo(CATALOGO_BIEN_SERV, { as: "TIPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "TIPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CATALOGO_UNIDAD_EJECUTORA, { as: "TIPO_BIEN_SIG_CATALOGO_UNIDAD_EJECUTORAs", foreignKey: "TIPO_BIEN"});
  SIG_CONTRATO_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "CLASE_BIEN_CATALOGO_BIEN_SERV", foreignKey: "CLASE_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CONTRATO_ITEM, { as: "SIG_CONTRATO_ITEMs", foreignKey: "CLASE_BIEN"});
  SIG_CONTRATO_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "FAMILIA_BIEN_CATALOGO_BIEN_SERV", foreignKey: "FAMILIA_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CONTRATO_ITEM, { as: "FAMILIA_BIEN_SIG_CONTRATO_ITEMs", foreignKey: "FAMILIA_BIEN"});
  SIG_CONTRATO_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "GRUPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "GRUPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CONTRATO_ITEM, { as: "GRUPO_BIEN_SIG_CONTRATO_ITEMs", foreignKey: "GRUPO_BIEN"});
  SIG_CONTRATO_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "ITEM_BIEN_CATALOGO_BIEN_SERV", foreignKey: "ITEM_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CONTRATO_ITEM, { as: "ITEM_BIEN_SIG_CONTRATO_ITEMs", foreignKey: "ITEM_BIEN"});
  SIG_CONTRATO_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "TIPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "TIPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CONTRATO_ITEM, { as: "TIPO_BIEN_SIG_CONTRATO_ITEMs", foreignKey: "TIPO_BIEN"});
  SIG_CONTRATO_ITEM_SECUENCIA.belongsTo(CATALOGO_BIEN_SERV, { as: "CLASE_BIEN_CATALOGO_BIEN_SERV", foreignKey: "CLASE_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CONTRATO_ITEM_SECUENCIA, { as: "SIG_CONTRATO_ITEM_SECUENCIa", foreignKey: "CLASE_BIEN"});
  SIG_CONTRATO_ITEM_SECUENCIA.belongsTo(CATALOGO_BIEN_SERV, { as: "FAMILIA_BIEN_CATALOGO_BIEN_SERV", foreignKey: "FAMILIA_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CONTRATO_ITEM_SECUENCIA, { as: "FAMILIA_BIEN_SIG_CONTRATO_ITEM_SECUENCIa", foreignKey: "FAMILIA_BIEN"});
  SIG_CONTRATO_ITEM_SECUENCIA.belongsTo(CATALOGO_BIEN_SERV, { as: "GRUPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "GRUPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CONTRATO_ITEM_SECUENCIA, { as: "GRUPO_BIEN_SIG_CONTRATO_ITEM_SECUENCIa", foreignKey: "GRUPO_BIEN"});
  SIG_CONTRATO_ITEM_SECUENCIA.belongsTo(CATALOGO_BIEN_SERV, { as: "ITEM_BIEN_CATALOGO_BIEN_SERV", foreignKey: "ITEM_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CONTRATO_ITEM_SECUENCIA, { as: "ITEM_BIEN_SIG_CONTRATO_ITEM_SECUENCIa", foreignKey: "ITEM_BIEN"});
  SIG_CONTRATO_ITEM_SECUENCIA.belongsTo(CATALOGO_BIEN_SERV, { as: "TIPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "TIPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CONTRATO_ITEM_SECUENCIA, { as: "TIPO_BIEN_SIG_CONTRATO_ITEM_SECUENCIa", foreignKey: "TIPO_BIEN"});
  SIG_CONVOCATORIA_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "CLASE_BIEN_CATALOGO_BIEN_SERV", foreignKey: "CLASE_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CONVOCATORIA_ITEM, { as: "SIG_CONVOCATORIA_ITEMs", foreignKey: "CLASE_BIEN"});
  SIG_CONVOCATORIA_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "FAMILIA_BIEN_CATALOGO_BIEN_SERV", foreignKey: "FAMILIA_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CONVOCATORIA_ITEM, { as: "FAMILIA_BIEN_SIG_CONVOCATORIA_ITEMs", foreignKey: "FAMILIA_BIEN"});
  SIG_CONVOCATORIA_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "GRUPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "GRUPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CONVOCATORIA_ITEM, { as: "GRUPO_BIEN_SIG_CONVOCATORIA_ITEMs", foreignKey: "GRUPO_BIEN"});
  SIG_CONVOCATORIA_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "ITEM_BIEN_CATALOGO_BIEN_SERV", foreignKey: "ITEM_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CONVOCATORIA_ITEM, { as: "ITEM_BIEN_SIG_CONVOCATORIA_ITEMs", foreignKey: "ITEM_BIEN"});
  SIG_CONVOCATORIA_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "TIPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "TIPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CONVOCATORIA_ITEM, { as: "TIPO_BIEN_SIG_CONVOCATORIA_ITEMs", foreignKey: "TIPO_BIEN"});
  SIG_CUADRO_MODIFICADO_DET.belongsTo(CATALOGO_BIEN_SERV, { as: "CLASE_BIEN_CATALOGO_BIEN_SERV", foreignKey: "CLASE_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CUADRO_MODIFICADO_DET, { as: "SIG_CUADRO_MODIFICADO_DETs", foreignKey: "CLASE_BIEN"});
  SIG_CUADRO_MODIFICADO_DET.belongsTo(CATALOGO_BIEN_SERV, { as: "FAMILIA_BIEN_CATALOGO_BIEN_SERV", foreignKey: "FAMILIA_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CUADRO_MODIFICADO_DET, { as: "FAMILIA_BIEN_SIG_CUADRO_MODIFICADO_DETs", foreignKey: "FAMILIA_BIEN"});
  SIG_CUADRO_MODIFICADO_DET.belongsTo(CATALOGO_BIEN_SERV, { as: "GRUPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "GRUPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CUADRO_MODIFICADO_DET, { as: "GRUPO_BIEN_SIG_CUADRO_MODIFICADO_DETs", foreignKey: "GRUPO_BIEN"});
  SIG_CUADRO_MODIFICADO_DET.belongsTo(CATALOGO_BIEN_SERV, { as: "ITEM_BIEN_CATALOGO_BIEN_SERV", foreignKey: "ITEM_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CUADRO_MODIFICADO_DET, { as: "ITEM_BIEN_SIG_CUADRO_MODIFICADO_DETs", foreignKey: "ITEM_BIEN"});
  SIG_CUADRO_MODIFICADO_DET.belongsTo(CATALOGO_BIEN_SERV, { as: "TIPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "TIPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CUADRO_MODIFICADO_DET, { as: "TIPO_BIEN_SIG_CUADRO_MODIFICADO_DETs", foreignKey: "TIPO_BIEN"});
  SIG_CUADRO_NECESIDAD_DET.belongsTo(CATALOGO_BIEN_SERV, { as: "CLASE_BIEN_CATALOGO_BIEN_SERV", foreignKey: "CLASE_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CUADRO_NECESIDAD_DET, { as: "SIG_CUADRO_NECESIDAD_DETs", foreignKey: "CLASE_BIEN"});
  SIG_CUADRO_NECESIDAD_DET.belongsTo(CATALOGO_BIEN_SERV, { as: "FAMILIA_BIEN_CATALOGO_BIEN_SERV", foreignKey: "FAMILIA_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CUADRO_NECESIDAD_DET, { as: "FAMILIA_BIEN_SIG_CUADRO_NECESIDAD_DETs", foreignKey: "FAMILIA_BIEN"});
  SIG_CUADRO_NECESIDAD_DET.belongsTo(CATALOGO_BIEN_SERV, { as: "GRUPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "GRUPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CUADRO_NECESIDAD_DET, { as: "GRUPO_BIEN_SIG_CUADRO_NECESIDAD_DETs", foreignKey: "GRUPO_BIEN"});
  SIG_CUADRO_NECESIDAD_DET.belongsTo(CATALOGO_BIEN_SERV, { as: "ITEM_BIEN_CATALOGO_BIEN_SERV", foreignKey: "ITEM_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CUADRO_NECESIDAD_DET, { as: "ITEM_BIEN_SIG_CUADRO_NECESIDAD_DETs", foreignKey: "ITEM_BIEN"});
  SIG_CUADRO_NECESIDAD_DET.belongsTo(CATALOGO_BIEN_SERV, { as: "TIPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "TIPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_CUADRO_NECESIDAD_DET, { as: "TIPO_BIEN_SIG_CUADRO_NECESIDAD_DETs", foreignKey: "TIPO_BIEN"});
  SIG_DETALLE_BSERV_CUADRO.belongsTo(CATALOGO_BIEN_SERV, { as: "CLASE_BIEN_CATALOGO_BIEN_SERV", foreignKey: "CLASE_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_DETALLE_BSERV_CUADRO, { as: "SIG_DETALLE_BSERV_CUADROs", foreignKey: "CLASE_BIEN"});
  SIG_DETALLE_BSERV_CUADRO.belongsTo(CATALOGO_BIEN_SERV, { as: "FAMILIA_BIEN_CATALOGO_BIEN_SERV", foreignKey: "FAMILIA_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_DETALLE_BSERV_CUADRO, { as: "FAMILIA_BIEN_SIG_DETALLE_BSERV_CUADROs", foreignKey: "FAMILIA_BIEN"});
  SIG_DETALLE_BSERV_CUADRO.belongsTo(CATALOGO_BIEN_SERV, { as: "GRUPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "GRUPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_DETALLE_BSERV_CUADRO, { as: "GRUPO_BIEN_SIG_DETALLE_BSERV_CUADROs", foreignKey: "GRUPO_BIEN"});
  SIG_DETALLE_BSERV_CUADRO.belongsTo(CATALOGO_BIEN_SERV, { as: "ITEM_BIEN_CATALOGO_BIEN_SERV", foreignKey: "ITEM_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_DETALLE_BSERV_CUADRO, { as: "ITEM_BIEN_SIG_DETALLE_BSERV_CUADROs", foreignKey: "ITEM_BIEN"});
  SIG_DETALLE_MOVIM_ALMACEN.belongsTo(CATALOGO_BIEN_SERV, { as: "CLASE_BIEN_CATALOGO_BIEN_SERV", foreignKey: "CLASE_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_DETALLE_MOVIM_ALMACEN, { as: "SIG_DETALLE_MOVIM_ALMACENs", foreignKey: "CLASE_BIEN"});
  SIG_DETALLE_MOVIM_ALMACEN.belongsTo(CATALOGO_BIEN_SERV, { as: "FAMILIA_BIEN_CATALOGO_BIEN_SERV", foreignKey: "FAMILIA_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_DETALLE_MOVIM_ALMACEN, { as: "FAMILIA_BIEN_SIG_DETALLE_MOVIM_ALMACENs", foreignKey: "FAMILIA_BIEN"});
  SIG_DETALLE_MOVIM_ALMACEN.belongsTo(CATALOGO_BIEN_SERV, { as: "GRUPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "GRUPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_DETALLE_MOVIM_ALMACEN, { as: "GRUPO_BIEN_SIG_DETALLE_MOVIM_ALMACENs", foreignKey: "GRUPO_BIEN"});
  SIG_DETALLE_MOVIM_ALMACEN.belongsTo(CATALOGO_BIEN_SERV, { as: "ITEM_BIEN_CATALOGO_BIEN_SERV", foreignKey: "ITEM_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_DETALLE_MOVIM_ALMACEN, { as: "ITEM_BIEN_SIG_DETALLE_MOVIM_ALMACENs", foreignKey: "ITEM_BIEN"});
  SIG_DETALLE_MOVIM_ALMACEN.belongsTo(CATALOGO_BIEN_SERV, { as: "TIPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "TIPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_DETALLE_MOVIM_ALMACEN, { as: "TIPO_BIEN_SIG_DETALLE_MOVIM_ALMACENs", foreignKey: "TIPO_BIEN"});
  SIG_DETALLE_MOVIM_CONFOR_SERV.belongsTo(CATALOGO_BIEN_SERV, { as: "CLASE_BIEN_CATALOGO_BIEN_SERV", foreignKey: "CLASE_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_DETALLE_MOVIM_CONFOR_SERV, { as: "SIG_DETALLE_MOVIM_CONFOR_SERVs", foreignKey: "CLASE_BIEN"});
  SIG_DETALLE_MOVIM_CONFOR_SERV.belongsTo(CATALOGO_BIEN_SERV, { as: "FAMILIA_BIEN_CATALOGO_BIEN_SERV", foreignKey: "FAMILIA_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_DETALLE_MOVIM_CONFOR_SERV, { as: "FAMILIA_BIEN_SIG_DETALLE_MOVIM_CONFOR_SERVs", foreignKey: "FAMILIA_BIEN"});
  SIG_DETALLE_MOVIM_CONFOR_SERV.belongsTo(CATALOGO_BIEN_SERV, { as: "GRUPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "GRUPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_DETALLE_MOVIM_CONFOR_SERV, { as: "GRUPO_BIEN_SIG_DETALLE_MOVIM_CONFOR_SERVs", foreignKey: "GRUPO_BIEN"});
  SIG_DETALLE_MOVIM_CONFOR_SERV.belongsTo(CATALOGO_BIEN_SERV, { as: "ITEM_BIEN_CATALOGO_BIEN_SERV", foreignKey: "ITEM_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_DETALLE_MOVIM_CONFOR_SERV, { as: "ITEM_BIEN_SIG_DETALLE_MOVIM_CONFOR_SERVs", foreignKey: "ITEM_BIEN"});
  SIG_DETALLE_MOVIM_CONFOR_SERV.belongsTo(CATALOGO_BIEN_SERV, { as: "TIPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "TIPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_DETALLE_MOVIM_CONFOR_SERV, { as: "TIPO_BIEN_SIG_DETALLE_MOVIM_CONFOR_SERVs", foreignKey: "TIPO_BIEN"});
  SIG_DETALLE_PEDIDOS.belongsTo(CATALOGO_BIEN_SERV, { as: "CLASE_BIEN_CATALOGO_BIEN_SERV", foreignKey: "CLASE_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_DETALLE_PEDIDOS, { as: "SIG_DETALLE_PEDIDOs", foreignKey: "CLASE_BIEN"});
  SIG_DETALLE_PEDIDOS.belongsTo(CATALOGO_BIEN_SERV, { as: "FAMILIA_BIEN_CATALOGO_BIEN_SERV", foreignKey: "FAMILIA_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_DETALLE_PEDIDOS, { as: "FAMILIA_BIEN_SIG_DETALLE_PEDIDOs", foreignKey: "FAMILIA_BIEN"});
  SIG_DETALLE_PEDIDOS.belongsTo(CATALOGO_BIEN_SERV, { as: "GRUPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "GRUPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_DETALLE_PEDIDOS, { as: "GRUPO_BIEN_SIG_DETALLE_PEDIDOs", foreignKey: "GRUPO_BIEN"});
  SIG_DETALLE_PEDIDOS.belongsTo(CATALOGO_BIEN_SERV, { as: "ITEM_BIEN_CATALOGO_BIEN_SERV", foreignKey: "ITEM_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_DETALLE_PEDIDOS, { as: "ITEM_BIEN_SIG_DETALLE_PEDIDOs", foreignKey: "ITEM_BIEN"});
  SIG_DEVENGADO_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "CLASE_BIEN_CATALOGO_BIEN_SERV", foreignKey: "CLASE_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_DEVENGADO_ITEM, { as: "SIG_DEVENGADO_ITEMs", foreignKey: "CLASE_BIEN"});
  SIG_DEVENGADO_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "FAMILIA_BIEN_CATALOGO_BIEN_SERV", foreignKey: "FAMILIA_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_DEVENGADO_ITEM, { as: "FAMILIA_BIEN_SIG_DEVENGADO_ITEMs", foreignKey: "FAMILIA_BIEN"});
  SIG_DEVENGADO_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "GRUPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "GRUPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_DEVENGADO_ITEM, { as: "GRUPO_BIEN_SIG_DEVENGADO_ITEMs", foreignKey: "GRUPO_BIEN"});
  SIG_DEVENGADO_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "ITEM_BIEN_CATALOGO_BIEN_SERV", foreignKey: "ITEM_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_DEVENGADO_ITEM, { as: "ITEM_BIEN_SIG_DEVENGADO_ITEMs", foreignKey: "ITEM_BIEN"});
  SIG_DEVENGADO_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "TIPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "TIPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_DEVENGADO_ITEM, { as: "TIPO_BIEN_SIG_DEVENGADO_ITEMs", foreignKey: "TIPO_BIEN"});
  SIG_ENCARGO_REQ_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "CLASE_BIEN_CATALOGO_BIEN_SERV", foreignKey: "CLASE_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_ENCARGO_REQ_ITEM, { as: "SIG_ENCARGO_REQ_ITEMs", foreignKey: "CLASE_BIEN"});
  SIG_ENCARGO_REQ_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "FAMILIA_BIEN_CATALOGO_BIEN_SERV", foreignKey: "FAMILIA_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_ENCARGO_REQ_ITEM, { as: "FAMILIA_BIEN_SIG_ENCARGO_REQ_ITEMs", foreignKey: "FAMILIA_BIEN"});
  SIG_ENCARGO_REQ_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "GRUPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "GRUPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_ENCARGO_REQ_ITEM, { as: "GRUPO_BIEN_SIG_ENCARGO_REQ_ITEMs", foreignKey: "GRUPO_BIEN"});
  SIG_ENCARGO_REQ_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "ITEM_BIEN_CATALOGO_BIEN_SERV", foreignKey: "ITEM_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_ENCARGO_REQ_ITEM, { as: "ITEM_BIEN_SIG_ENCARGO_REQ_ITEMs", foreignKey: "ITEM_BIEN"});
  SIG_ENCARGO_REQ_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "TIPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "TIPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_ENCARGO_REQ_ITEM, { as: "TIPO_BIEN_SIG_ENCARGO_REQ_ITEMs", foreignKey: "TIPO_BIEN"});
  SIG_ITEM_ATRIBUTO.belongsTo(CATALOGO_BIEN_SERV, { as: "CLASE_BIEN_CATALOGO_BIEN_SERV", foreignKey: "CLASE_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_ITEM_ATRIBUTO, { as: "SIG_ITEM_ATRIBUTOs", foreignKey: "CLASE_BIEN"});
  SIG_ITEM_ATRIBUTO.belongsTo(CATALOGO_BIEN_SERV, { as: "FAMILIA_BIEN_CATALOGO_BIEN_SERV", foreignKey: "FAMILIA_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_ITEM_ATRIBUTO, { as: "FAMILIA_BIEN_SIG_ITEM_ATRIBUTOs", foreignKey: "FAMILIA_BIEN"});
  SIG_ITEM_ATRIBUTO.belongsTo(CATALOGO_BIEN_SERV, { as: "GRUPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "GRUPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_ITEM_ATRIBUTO, { as: "GRUPO_BIEN_SIG_ITEM_ATRIBUTOs", foreignKey: "GRUPO_BIEN"});
  SIG_ITEM_ATRIBUTO.belongsTo(CATALOGO_BIEN_SERV, { as: "ITEM_BIEN_CATALOGO_BIEN_SERV", foreignKey: "ITEM_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_ITEM_ATRIBUTO, { as: "ITEM_BIEN_SIG_ITEM_ATRIBUTOs", foreignKey: "ITEM_BIEN"});
  SIG_ITEM_ATRIBUTO.belongsTo(CATALOGO_BIEN_SERV, { as: "SEC_EJEC_CATALOGO_BIEN_SERV", foreignKey: "SEC_EJEC"});
  CATALOGO_BIEN_SERV.hasMany(SIG_ITEM_ATRIBUTO, { as: "SEC_EJEC_SIG_ITEM_ATRIBUTOs", foreignKey: "SEC_EJEC"});
  SIG_ITEM_ATRIBUTO.belongsTo(CATALOGO_BIEN_SERV, { as: "TIPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "TIPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_ITEM_ATRIBUTO, { as: "TIPO_BIEN_SIG_ITEM_ATRIBUTOs", foreignKey: "TIPO_BIEN"});
  SIG_KARDEX_INVENTARIO.belongsTo(CATALOGO_BIEN_SERV, { as: "CLASE_BIEN_CATALOGO_BIEN_SERV", foreignKey: "CLASE_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_KARDEX_INVENTARIO, { as: "SIG_KARDEX_INVENTARIOs", foreignKey: "CLASE_BIEN"});
  SIG_KARDEX_INVENTARIO.belongsTo(CATALOGO_BIEN_SERV, { as: "FAMILIA_BIEN_CATALOGO_BIEN_SERV", foreignKey: "FAMILIA_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_KARDEX_INVENTARIO, { as: "FAMILIA_BIEN_SIG_KARDEX_INVENTARIOs", foreignKey: "FAMILIA_BIEN"});
  SIG_KARDEX_INVENTARIO.belongsTo(CATALOGO_BIEN_SERV, { as: "GRUPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "GRUPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_KARDEX_INVENTARIO, { as: "GRUPO_BIEN_SIG_KARDEX_INVENTARIOs", foreignKey: "GRUPO_BIEN"});
  SIG_KARDEX_INVENTARIO.belongsTo(CATALOGO_BIEN_SERV, { as: "ITEM_BIEN_CATALOGO_BIEN_SERV", foreignKey: "ITEM_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_KARDEX_INVENTARIO, { as: "ITEM_BIEN_SIG_KARDEX_INVENTARIOs", foreignKey: "ITEM_BIEN"});
  SIG_KARDEX_INVENTARIO.belongsTo(CATALOGO_BIEN_SERV, { as: "TIPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "TIPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_KARDEX_INVENTARIO, { as: "TIPO_BIEN_SIG_KARDEX_INVENTARIOs", foreignKey: "TIPO_BIEN"});
  SIG_KARDEX_POR_ALMACEN.belongsTo(CATALOGO_BIEN_SERV, { as: "CLASE_BIEN_CATALOGO_BIEN_SERV", foreignKey: "CLASE_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_KARDEX_POR_ALMACEN, { as: "SIG_KARDEX_POR_ALMACENs", foreignKey: "CLASE_BIEN"});
  SIG_KARDEX_POR_ALMACEN.belongsTo(CATALOGO_BIEN_SERV, { as: "FAMILIA_BIEN_CATALOGO_BIEN_SERV", foreignKey: "FAMILIA_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_KARDEX_POR_ALMACEN, { as: "FAMILIA_BIEN_SIG_KARDEX_POR_ALMACENs", foreignKey: "FAMILIA_BIEN"});
  SIG_KARDEX_POR_ALMACEN.belongsTo(CATALOGO_BIEN_SERV, { as: "GRUPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "GRUPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_KARDEX_POR_ALMACEN, { as: "GRUPO_BIEN_SIG_KARDEX_POR_ALMACENs", foreignKey: "GRUPO_BIEN"});
  SIG_KARDEX_POR_ALMACEN.belongsTo(CATALOGO_BIEN_SERV, { as: "ITEM_BIEN_CATALOGO_BIEN_SERV", foreignKey: "ITEM_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_KARDEX_POR_ALMACEN, { as: "ITEM_BIEN_SIG_KARDEX_POR_ALMACENs", foreignKey: "ITEM_BIEN"});
  SIG_KARDEX_POR_ALMACEN.belongsTo(CATALOGO_BIEN_SERV, { as: "TIPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "TIPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_KARDEX_POR_ALMACEN, { as: "TIPO_BIEN_SIG_KARDEX_POR_ALMACENs", foreignKey: "TIPO_BIEN"});
  SIG_PAAC_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "CLASE_BIEN_CATALOGO_BIEN_SERV", foreignKey: "CLASE_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_PAAC_ITEM, { as: "SIG_PAAC_ITEMs", foreignKey: "CLASE_BIEN"});
  SIG_PAAC_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "FAMILIA_BIEN_CATALOGO_BIEN_SERV", foreignKey: "FAMILIA_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_PAAC_ITEM, { as: "FAMILIA_BIEN_SIG_PAAC_ITEMs", foreignKey: "FAMILIA_BIEN"});
  SIG_PAAC_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "GRUPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "GRUPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_PAAC_ITEM, { as: "GRUPO_BIEN_SIG_PAAC_ITEMs", foreignKey: "GRUPO_BIEN"});
  SIG_PAAC_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "ITEM_BIEN_CATALOGO_BIEN_SERV", foreignKey: "ITEM_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_PAAC_ITEM, { as: "ITEM_BIEN_SIG_PAAC_ITEMs", foreignKey: "ITEM_BIEN"});
  SIG_PATRIMONIO.belongsTo(CATALOGO_BIEN_SERV, { as: "CLASE_BIEN_CATALOGO_BIEN_SERV", foreignKey: "CLASE_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_PATRIMONIO, { as: "SIG_PATRIMONIOs", foreignKey: "CLASE_BIEN"});
  SIG_PATRIMONIO.belongsTo(CATALOGO_BIEN_SERV, { as: "FAMILIA_BIEN_CATALOGO_BIEN_SERV", foreignKey: "FAMILIA_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_PATRIMONIO, { as: "FAMILIA_BIEN_SIG_PATRIMONIOs", foreignKey: "FAMILIA_BIEN"});
  SIG_PATRIMONIO.belongsTo(CATALOGO_BIEN_SERV, { as: "GRUPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "GRUPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_PATRIMONIO, { as: "GRUPO_BIEN_SIG_PATRIMONIOs", foreignKey: "GRUPO_BIEN"});
  SIG_PATRIMONIO.belongsTo(CATALOGO_BIEN_SERV, { as: "ITEM_BIEN_CATALOGO_BIEN_SERV", foreignKey: "ITEM_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_PATRIMONIO, { as: "ITEM_BIEN_SIG_PATRIMONIOs", foreignKey: "ITEM_BIEN"});
  SIG_PATRIMONIO.belongsTo(CATALOGO_BIEN_SERV, { as: "TIPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "TIPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_PATRIMONIO, { as: "TIPO_BIEN_SIG_PATRIMONIOs", foreignKey: "TIPO_BIEN"});
  SIG_PPAAC_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "CLASE_BIEN_CATALOGO_BIEN_SERV", foreignKey: "CLASE_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_PPAAC_ITEM, { as: "SIG_PPAAC_ITEMs", foreignKey: "CLASE_BIEN"});
  SIG_PPAAC_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "FAMILIA_BIEN_CATALOGO_BIEN_SERV", foreignKey: "FAMILIA_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_PPAAC_ITEM, { as: "FAMILIA_BIEN_SIG_PPAAC_ITEMs", foreignKey: "FAMILIA_BIEN"});
  SIG_PPAAC_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "GRUPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "GRUPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_PPAAC_ITEM, { as: "GRUPO_BIEN_SIG_PPAAC_ITEMs", foreignKey: "GRUPO_BIEN"});
  SIG_PPAAC_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "ITEM_BIEN_CATALOGO_BIEN_SERV", foreignKey: "ITEM_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_PPAAC_ITEM, { as: "ITEM_BIEN_SIG_PPAAC_ITEMs", foreignKey: "ITEM_BIEN"});
  SIG_PROPUESTA_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "CLASE_BIEN_CATALOGO_BIEN_SERV", foreignKey: "CLASE_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_PROPUESTA_ITEM, { as: "SIG_PROPUESTA_ITEMs", foreignKey: "CLASE_BIEN"});
  SIG_PROPUESTA_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "FAMILIA_BIEN_CATALOGO_BIEN_SERV", foreignKey: "FAMILIA_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_PROPUESTA_ITEM, { as: "FAMILIA_BIEN_SIG_PROPUESTA_ITEMs", foreignKey: "FAMILIA_BIEN"});
  SIG_PROPUESTA_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "GRUPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "GRUPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_PROPUESTA_ITEM, { as: "GRUPO_BIEN_SIG_PROPUESTA_ITEMs", foreignKey: "GRUPO_BIEN"});
  SIG_PROPUESTA_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "ITEM_BIEN_CATALOGO_BIEN_SERV", foreignKey: "ITEM_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_PROPUESTA_ITEM, { as: "ITEM_BIEN_SIG_PROPUESTA_ITEMs", foreignKey: "ITEM_BIEN"});
  SIG_PROPUESTA_ITEM.belongsTo(CATALOGO_BIEN_SERV, { as: "TIPO_BIEN_CATALOGO_BIEN_SERV", foreignKey: "TIPO_BIEN"});
  CATALOGO_BIEN_SERV.hasMany(SIG_PROPUESTA_ITEM, { as: "TIPO_BIEN_SIG_PROPUESTA_ITEMs", foreignKey: "TIPO_BIEN"});
  sig_detalle_cuadro_anual.belongsTo(CATALOGO_BIEN_SERV, { as: "clase_bien_CATALOGO_BIEN_SERV", foreignKey: "clase_bien"});
  CATALOGO_BIEN_SERV.hasMany(sig_detalle_cuadro_anual, { as: "sig_detalle_cuadro_anuals", foreignKey: "clase_bien"});
  sig_detalle_cuadro_anual.belongsTo(CATALOGO_BIEN_SERV, { as: "familia_bien_CATALOGO_BIEN_SERV", foreignKey: "familia_bien"});
  CATALOGO_BIEN_SERV.hasMany(sig_detalle_cuadro_anual, { as: "familia_bien_sig_detalle_cuadro_anuals", foreignKey: "familia_bien"});
  sig_detalle_cuadro_anual.belongsTo(CATALOGO_BIEN_SERV, { as: "grupo_bien_CATALOGO_BIEN_SERV", foreignKey: "grupo_bien"});
  CATALOGO_BIEN_SERV.hasMany(sig_detalle_cuadro_anual, { as: "grupo_bien_sig_detalle_cuadro_anuals", foreignKey: "grupo_bien"});
  sig_detalle_cuadro_anual.belongsTo(CATALOGO_BIEN_SERV, { as: "item_bien_CATALOGO_BIEN_SERV", foreignKey: "item_bien"});
  CATALOGO_BIEN_SERV.hasMany(sig_detalle_cuadro_anual, { as: "item_bien_sig_detalle_cuadro_anuals", foreignKey: "item_bien"});
  sig_detalle_cuadro_anual.belongsTo(CATALOGO_BIEN_SERV, { as: "tipo_bien_CATALOGO_BIEN_SERV", foreignKey: "tipo_bien"});
  CATALOGO_BIEN_SERV.hasMany(sig_detalle_cuadro_anual, { as: "tipo_bien_sig_detalle_cuadro_anuals", foreignKey: "tipo_bien"});
  GRUPO_CIIU.belongsTo(CATEGORIA_CIIU, { as: "CATEGORIA_CIIU_CATEGORIA_CIIU", foreignKey: "CATEGORIA_CIIU"});
  CATEGORIA_CIIU.hasMany(GRUPO_CIIU, { as: "GRUPO_CIIUs", foreignKey: "CATEGORIA_CIIU"});
  GRUPO_CIIU.belongsTo(CATEGORIA_CIIU, { as: "TIPO_CIIU_CATEGORIA_CIIU", foreignKey: "TIPO_CIIU"});
  CATEGORIA_CIIU.hasMany(GRUPO_CIIU, { as: "TIPO_CIIU_GRUPO_CIIUs", foreignKey: "TIPO_CIIU"});
  CONTROL_TRANSACCION_DESTINO.belongsTo(CONTROL_TRANSACCION, { as: "control", foreignKey: "control_id"});
  CONTROL_TRANSACCION.hasMany(CONTROL_TRANSACCION_DESTINO, { as: "CONTROL_TRANSACCION_DESTINOs", foreignKey: "control_id"});
  CONTROL_TRANSACCION_DETALLE.belongsTo(CONTROL_TRANSACCION, { as: "control", foreignKey: "control_id"});
  CONTROL_TRANSACCION.hasMany(CONTROL_TRANSACCION_DETALLE, { as: "CONTROL_TRANSACCION_DETALLEs", foreignKey: "control_id"});
  Grupo_Gasto.belongsTo(Categoria_Gasto, { as: "ANO_EJE_Categoria_Gasto", foreignKey: "ANO_EJE"});
  Categoria_Gasto.hasMany(Grupo_Gasto, { as: "Grupo_Gastos", foreignKey: "ANO_EJE"});
  Grupo_Gasto.belongsTo(Categoria_Gasto, { as: "categ_gasto_Categoria_Gasto", foreignKey: "categ_gasto"});
  Categoria_Gasto.hasMany(Grupo_Gasto, { as: "categ_gasto_Grupo_Gastos", foreignKey: "categ_gasto"});
  Componente_Ejec.belongsTo(Componente, { as: "act_proy_Componente", foreignKey: "act_proy"});
  Componente.hasMany(Componente_Ejec, { as: "Componente_Ejecs", foreignKey: "act_proy"});
  Componente_Ejec.belongsTo(Componente, { as: "ANO_EJE_Componente", foreignKey: "ANO_EJE"});
  Componente.hasMany(Componente_Ejec, { as: "ANO_EJE_Componente_Ejecs", foreignKey: "ANO_EJE"});
  Componente_Ejec.belongsTo(Componente, { as: "componente_Componente", foreignKey: "componente"});
  Componente.hasMany(Componente_Ejec, { as: "componente_Componente_Ejecs", foreignKey: "componente"});
  Componente_Ejec.belongsTo(Componente, { as: "funcion_Componente", foreignKey: "funcion"});
  Componente.hasMany(Componente_Ejec, { as: "funcion_Componente_Ejecs", foreignKey: "funcion"});
  Componente_Ejec.belongsTo(Componente, { as: "programa_Componente", foreignKey: "programa"});
  Componente.hasMany(Componente_Ejec, { as: "programa_Componente_Ejecs", foreignKey: "programa"});
  Componente_Ejec.belongsTo(Componente, { as: "sub_programa_Componente", foreignKey: "sub_programa"});
  Componente.hasMany(Componente_Ejec, { as: "sub_programa_Componente_Ejecs", foreignKey: "sub_programa"});
  Componente.belongsTo(Componente_Nombre, { as: "ANO_EJE_Componente_Nombre", foreignKey: "ANO_EJE"});
  Componente_Nombre.hasMany(Componente, { as: "Componentes", foreignKey: "ANO_EJE"});
  Componente.belongsTo(Componente_Nombre, { as: "componente_Componente_Nombre", foreignKey: "componente"});
  Componente_Nombre.hasMany(Componente, { as: "componente_Componentes", foreignKey: "componente"});
  ESTRATEGIA_NACIONAL.belongsTo(ESTRATEGIA_NACIONAL_NOMBRE, { as: "ANO_EJE_ESTRATEGIA_NACIONAL_NOMBRE", foreignKey: "ANO_EJE"});
  ESTRATEGIA_NACIONAL_NOMBRE.hasMany(ESTRATEGIA_NACIONAL, { as: "ESTRATEGIA_NACIONALs", foreignKey: "ANO_EJE"});
  ESTRATEGIA_NACIONAL.belongsTo(ESTRATEGIA_NACIONAL_NOMBRE, { as: "ESTRATEGIA_NACIONAL_ESTRATEGIA_NACIONAL_NOMBRE", foreignKey: "ESTRATEGIA_NACIONAL"});
  ESTRATEGIA_NACIONAL_NOMBRE.hasMany(ESTRATEGIA_NACIONAL, { as: "ESTRATEGIA_NACIONAL_ESTRATEGIA_NACIONALs", foreignKey: "ESTRATEGIA_NACIONAL"});
  ESTRATEGIA_NACIONAL_EJEC.belongsTo(ESTRATEGIA_NACIONAL_NOMBRE, { as: "ANO_EJE_ESTRATEGIA_NACIONAL_NOMBRE", foreignKey: "ANO_EJE"});
  ESTRATEGIA_NACIONAL_NOMBRE.hasMany(ESTRATEGIA_NACIONAL_EJEC, { as: "ESTRATEGIA_NACIONAL_EJECs", foreignKey: "ANO_EJE"});
  ESTRATEGIA_NACIONAL_EJEC.belongsTo(ESTRATEGIA_NACIONAL_NOMBRE, { as: "ESTRATEGIA_NACIONAL_ESTRATEGIA_NACIONAL_NOMBRE", foreignKey: "ESTRATEGIA_NACIONAL"});
  ESTRATEGIA_NACIONAL_NOMBRE.hasMany(ESTRATEGIA_NACIONAL_EJEC, { as: "ESTRATEGIA_NACIONAL_ESTRATEGIA_NACIONAL_EJECs", foreignKey: "ESTRATEGIA_NACIONAL"});
  Fuente_Financ.belongsTo(FUENTE_FINANC_AGREGADA, { as: "FUENTE_FINANC_AGREGADA_FUENTE_FINANC_AGREGADA", foreignKey: "FUENTE_FINANC_AGREGADA"});
  FUENTE_FINANC_AGREGADA.hasMany(Fuente_Financ, { as: "Fuente_Financs", foreignKey: "FUENTE_FINANC_AGREGADA"});
  Fuente_Financ_Ejec.belongsTo(Fuente_Financ, { as: "ANO_EJE_Fuente_Financ", foreignKey: "ANO_EJE"});
  Fuente_Financ.hasMany(Fuente_Financ_Ejec, { as: "Fuente_Financ_Ejecs", foreignKey: "ANO_EJE"});
  Fuente_Financ_Ejec.belongsTo(Fuente_Financ, { as: "FUENTE_FINANC_Fuente_Financ", foreignKey: "FUENTE_FINANC"});
  Fuente_Financ.hasMany(Fuente_Financ_Ejec, { as: "FUENTE_FINANC_Fuente_Financ_Ejecs", foreignKey: "FUENTE_FINANC"});
  Fuente_Financ_Ejec.belongsTo(Fuente_Financ, { as: "ORIGEN_Fuente_Financ", foreignKey: "ORIGEN"});
  Fuente_Financ.hasMany(Fuente_Financ_Ejec, { as: "ORIGEN_Fuente_Financ_Ejecs", foreignKey: "ORIGEN"});
  SIG_CONTRATO_ITEM_MENS_PPTAL.belongsTo(Fuente_Financ, { as: "FUENTE_FINANC_Fuente_Financ", foreignKey: "FUENTE_FINANC"});
  Fuente_Financ.hasMany(SIG_CONTRATO_ITEM_MENS_PPTAL, { as: "SIG_CONTRATO_ITEM_MENS_PPTALs", foreignKey: "FUENTE_FINANC"});
  SIG_CONTRATO_ITEM_MENS_PPTAL.belongsTo(Fuente_Financ, { as: "ORIGEN_Fuente_Financ", foreignKey: "ORIGEN"});
  Fuente_Financ.hasMany(SIG_CONTRATO_ITEM_MENS_PPTAL, { as: "ORIGEN_SIG_CONTRATO_ITEM_MENS_PPTALs", foreignKey: "ORIGEN"});
  SIG_CONTRATO_ITEM_PPTAL.belongsTo(Fuente_Financ, { as: "FUENTE_FINANC_Fuente_Financ", foreignKey: "FUENTE_FINANC"});
  Fuente_Financ.hasMany(SIG_CONTRATO_ITEM_PPTAL, { as: "SIG_CONTRATO_ITEM_PPTALs", foreignKey: "FUENTE_FINANC"});
  SIG_CONTRATO_ITEM_PPTAL.belongsTo(Fuente_Financ, { as: "ORIGEN_Fuente_Financ", foreignKey: "ORIGEN"});
  Fuente_Financ.hasMany(SIG_CONTRATO_ITEM_PPTAL, { as: "ORIGEN_SIG_CONTRATO_ITEM_PPTALs", foreignKey: "ORIGEN"});
  SIG_CONTRATO_MOVIM_PAGO.belongsTo(Fuente_Financ, { as: "FUENTE_FINANC_Fuente_Financ", foreignKey: "FUENTE_FINANC"});
  Fuente_Financ.hasMany(SIG_CONTRATO_MOVIM_PAGO, { as: "SIG_CONTRATO_MOVIM_PAGOs", foreignKey: "FUENTE_FINANC"});
  SIG_CONTRATO_MOVIM_PAGO.belongsTo(Fuente_Financ, { as: "ORIGEN_Fuente_Financ", foreignKey: "ORIGEN"});
  Fuente_Financ.hasMany(SIG_CONTRATO_MOVIM_PAGO, { as: "ORIGEN_SIG_CONTRATO_MOVIM_PAGOs", foreignKey: "ORIGEN"});
  SIG_CONVOCATORIA_FUENTE.belongsTo(Fuente_Financ, { as: "FUENTE_FINANC_Fuente_Financ", foreignKey: "FUENTE_FINANC"});
  Fuente_Financ.hasMany(SIG_CONVOCATORIA_FUENTE, { as: "SIG_CONVOCATORIA_FUENTEs", foreignKey: "FUENTE_FINANC"});
  SIG_CONVOCATORIA_FUENTE.belongsTo(Fuente_Financ, { as: "ORIGEN_Fuente_Financ", foreignKey: "ORIGEN"});
  Fuente_Financ.hasMany(SIG_CONVOCATORIA_FUENTE, { as: "ORIGEN_SIG_CONVOCATORIA_FUENTEs", foreignKey: "ORIGEN"});
  SIG_CONVOCATORIA_ITEM_PPTAL.belongsTo(Fuente_Financ, { as: "FUENTE_FINANC_Fuente_Financ", foreignKey: "FUENTE_FINANC"});
  Fuente_Financ.hasMany(SIG_CONVOCATORIA_ITEM_PPTAL, { as: "SIG_CONVOCATORIA_ITEM_PPTALs", foreignKey: "FUENTE_FINANC"});
  SIG_CONVOCATORIA_ITEM_PPTAL.belongsTo(Fuente_Financ, { as: "ORIGEN_Fuente_Financ", foreignKey: "ORIGEN"});
  Fuente_Financ.hasMany(SIG_CONVOCATORIA_ITEM_PPTAL, { as: "ORIGEN_SIG_CONVOCATORIA_ITEM_PPTALs", foreignKey: "ORIGEN"});
  SIG_CUADRO_TRANSFERENCIA.belongsTo(Fuente_Financ, { as: "ORIG_FUENTE_FINANC_Fuente_Financ", foreignKey: "ORIG_FUENTE_FINANC"});
  Fuente_Financ.hasMany(SIG_CUADRO_TRANSFERENCIA, { as: "SIG_CUADRO_TRANSFERENCIa", foreignKey: "ORIG_FUENTE_FINANC"});
  SIG_CUADRO_TRANSFERENCIA.belongsTo(Fuente_Financ, { as: "ORIG_ORIGEN_Fuente_Financ", foreignKey: "ORIG_ORIGEN"});
  Fuente_Financ.hasMany(SIG_CUADRO_TRANSFERENCIA, { as: "ORIG_ORIGEN_SIG_CUADRO_TRANSFERENCIa", foreignKey: "ORIG_ORIGEN"});
  SIG_DETALLE_METAS_CUADRO.belongsTo(Fuente_Financ, { as: "FUENTE_FINANC_Fuente_Financ", foreignKey: "FUENTE_FINANC"});
  Fuente_Financ.hasMany(SIG_DETALLE_METAS_CUADRO, { as: "SIG_DETALLE_METAS_CUADROs", foreignKey: "FUENTE_FINANC"});
  SIG_DETALLE_METAS_CUADRO.belongsTo(Fuente_Financ, { as: "ORIGEN_Fuente_Financ", foreignKey: "ORIGEN"});
  Fuente_Financ.hasMany(SIG_DETALLE_METAS_CUADRO, { as: "ORIGEN_SIG_DETALLE_METAS_CUADROs", foreignKey: "ORIGEN"});
  SIG_METAS_PROP_X_CENTRO.belongsTo(Fuente_Financ, { as: "ANO_EJE_Fuente_Financ", foreignKey: "ANO_EJE"});
  Fuente_Financ.hasMany(SIG_METAS_PROP_X_CENTRO, { as: "SIG_METAS_PROP_X_CENTROs", foreignKey: "ANO_EJE"});
  SIG_METAS_PROP_X_CENTRO.belongsTo(Fuente_Financ, { as: "FUENTE_FINANC_Fuente_Financ", foreignKey: "FUENTE_FINANC"});
  Fuente_Financ.hasMany(SIG_METAS_PROP_X_CENTRO, { as: "FUENTE_FINANC_SIG_METAS_PROP_X_CENTROs", foreignKey: "FUENTE_FINANC"});
  SIG_METAS_PROP_X_CENTRO.belongsTo(Fuente_Financ, { as: "ORIGEN_Fuente_Financ", foreignKey: "ORIGEN"});
  Fuente_Financ.hasMany(SIG_METAS_PROP_X_CENTRO, { as: "ORIGEN_SIG_METAS_PROP_X_CENTROs", foreignKey: "ORIGEN"});
  SIG_ORDEN_ITEM_PPTO.belongsTo(Fuente_Financ, { as: "FUENTE_FINANC_Fuente_Financ", foreignKey: "FUENTE_FINANC"});
  Fuente_Financ.hasMany(SIG_ORDEN_ITEM_PPTO, { as: "SIG_ORDEN_ITEM_PPTOs", foreignKey: "FUENTE_FINANC"});
  SIG_ORDEN_ITEM_PPTO.belongsTo(Fuente_Financ, { as: "ORIGEN_Fuente_Financ", foreignKey: "ORIGEN"});
  Fuente_Financ.hasMany(SIG_ORDEN_ITEM_PPTO, { as: "ORIGEN_SIG_ORDEN_ITEM_PPTOs", foreignKey: "ORIGEN"});
  SIG_PAAC_METAS.belongsTo(Fuente_Financ, { as: "FUENTE_FINANC_Fuente_Financ", foreignKey: "FUENTE_FINANC"});
  Fuente_Financ.hasMany(SIG_PAAC_METAS, { as: "SIG_PAAC_METa", foreignKey: "FUENTE_FINANC"});
  SIG_PAAC_METAS.belongsTo(Fuente_Financ, { as: "ORIGEN_Fuente_Financ", foreignKey: "ORIGEN"});
  Fuente_Financ.hasMany(SIG_PAAC_METAS, { as: "ORIGEN_SIG_PAAC_METa", foreignKey: "ORIGEN"});
  SIG_PPAAC_METAS.belongsTo(Fuente_Financ, { as: "FUENTE_FINANC_Fuente_Financ", foreignKey: "FUENTE_FINANC"});
  Fuente_Financ.hasMany(SIG_PPAAC_METAS, { as: "SIG_PPAAC_METa", foreignKey: "FUENTE_FINANC"});
  SIG_PPAAC_METAS.belongsTo(Fuente_Financ, { as: "ORIGEN_Fuente_Financ", foreignKey: "ORIGEN"});
  Fuente_Financ.hasMany(SIG_PPAAC_METAS, { as: "ORIGEN_SIG_PPAAC_METa", foreignKey: "ORIGEN"});
  SIG_CUADRO_MODIFICADO_DET.belongsTo(Fuente_Financ_Ejec, { as: "FUENTE_FINANC_Fuente_Financ_Ejec", foreignKey: "FUENTE_FINANC"});
  Fuente_Financ_Ejec.hasMany(SIG_CUADRO_MODIFICADO_DET, { as: "SIG_CUADRO_MODIFICADO_DETs", foreignKey: "FUENTE_FINANC"});
  SIG_CUADRO_MODIFICADO_DET.belongsTo(Fuente_Financ_Ejec, { as: "ORIGEN_Fuente_Financ_Ejec", foreignKey: "ORIGEN"});
  Fuente_Financ_Ejec.hasMany(SIG_CUADRO_MODIFICADO_DET, { as: "ORIGEN_SIG_CUADRO_MODIFICADO_DETs", foreignKey: "ORIGEN"});
  SIG_CUADRO_NECESIDAD.belongsTo(Fuente_Financ_Ejec, { as: "FUENTE_FINANC_Fuente_Financ_Ejec", foreignKey: "FUENTE_FINANC"});
  Fuente_Financ_Ejec.hasMany(SIG_CUADRO_NECESIDAD, { as: "SIG_CUADRO_NECESIDADs", foreignKey: "FUENTE_FINANC"});
  SIG_CUADRO_NECESIDAD.belongsTo(Fuente_Financ_Ejec, { as: "ORIGEN_Fuente_Financ_Ejec", foreignKey: "ORIGEN"});
  Fuente_Financ_Ejec.hasMany(SIG_CUADRO_NECESIDAD, { as: "ORIGEN_SIG_CUADRO_NECESIDADs", foreignKey: "ORIGEN"});
  SIG_PEDIDOS.belongsTo(Fuente_Financ_Ejec, { as: "FUENTE_FINANC_Fuente_Financ_Ejec", foreignKey: "FUENTE_FINANC"});
  Fuente_Financ_Ejec.hasMany(SIG_PEDIDOS, { as: "SIG_PEDIDOs", foreignKey: "FUENTE_FINANC"});
  SIG_PEDIDOS.belongsTo(Fuente_Financ_Ejec, { as: "ORIGEN_Fuente_Financ_Ejec", foreignKey: "ORIGEN"});
  Fuente_Financ_Ejec.hasMany(SIG_PEDIDOS, { as: "ORIGEN_SIG_PEDIDOs", foreignKey: "ORIGEN"});
  SIG_TECHO_PRESUPUESTO.belongsTo(Fuente_Financ_Ejec, { as: "FUENTE_FINANC_Fuente_Financ_Ejec", foreignKey: "FUENTE_FINANC"});
  Fuente_Financ_Ejec.hasMany(SIG_TECHO_PRESUPUESTO, { as: "SIG_TECHO_PRESUPUESTOs", foreignKey: "FUENTE_FINANC"});
  SIG_TECHO_PRESUPUESTO.belongsTo(Fuente_Financ_Ejec, { as: "ORIGEN_Fuente_Financ_Ejec", foreignKey: "ORIGEN"});
  Fuente_Financ_Ejec.hasMany(SIG_TECHO_PRESUPUESTO, { as: "ORIGEN_SIG_TECHO_PRESUPUESTOs", foreignKey: "ORIGEN"});
  sig_cuadro_anual.belongsTo(Fuente_Financ_Ejec, { as: "fuente_financ_Fuente_Financ_Ejec", foreignKey: "fuente_financ"});
  Fuente_Financ_Ejec.hasMany(sig_cuadro_anual, { as: "sig_cuadro_anuals", foreignKey: "fuente_financ"});
  sig_cuadro_anual.belongsTo(Fuente_Financ_Ejec, { as: "origen_Fuente_Financ_Ejec", foreignKey: "origen"});
  Fuente_Financ_Ejec.hasMany(sig_cuadro_anual, { as: "origen_sig_cuadro_anuals", foreignKey: "origen"});
  sig_metas_x_centro.belongsTo(Fuente_Financ_Ejec, { as: "ano_eje_Fuente_Financ_Ejec", foreignKey: "ano_eje"});
  Fuente_Financ_Ejec.hasMany(sig_metas_x_centro, { as: "sig_metas_x_centros", foreignKey: "ano_eje"});
  sig_metas_x_centro.belongsTo(Fuente_Financ_Ejec, { as: "sec_ejec_Fuente_Financ_Ejec", foreignKey: "sec_ejec"});
  Fuente_Financ_Ejec.hasMany(sig_metas_x_centro, { as: "sec_ejec_sig_metas_x_centros", foreignKey: "sec_ejec"});
  sig_metas_x_centro.belongsTo(Fuente_Financ_Ejec, { as: "fuente_financ_Fuente_Financ_Ejec", foreignKey: "fuente_financ"});
  Fuente_Financ_Ejec.hasMany(sig_metas_x_centro, { as: "fuente_financ_sig_metas_x_centros", foreignKey: "fuente_financ"});
  sig_metas_x_centro.belongsTo(Fuente_Financ_Ejec, { as: "origen_Fuente_Financ_Ejec", foreignKey: "origen"});
  Fuente_Financ_Ejec.hasMany(sig_metas_x_centro, { as: "origen_sig_metas_x_centros", foreignKey: "origen"});
  sig_techo_presupuestal.belongsTo(Fuente_Financ_Ejec, { as: "fuente_financ_Fuente_Financ_Ejec", foreignKey: "fuente_financ"});
  Fuente_Financ_Ejec.hasMany(sig_techo_presupuestal, { as: "sig_techo_presupuestals", foreignKey: "fuente_financ"});
  sig_techo_presupuestal.belongsTo(Fuente_Financ_Ejec, { as: "origen_Fuente_Financ_Ejec", foreignKey: "origen"});
  Fuente_Financ_Ejec.hasMany(sig_techo_presupuestal, { as: "origen_sig_techo_presupuestals", foreignKey: "origen"});
  Programa.belongsTo(Funcion, { as: "funcion_Funcion", foreignKey: "funcion"});
  Funcion.hasMany(Programa, { as: "Programas", foreignKey: "funcion"});
  SIG_PAAC_CONSOLIDADO.belongsTo(GRUPO_CIIU, { as: "CATEGORIA_CIIU_GRUPO_CIIU", foreignKey: "CATEGORIA_CIIU"});
  GRUPO_CIIU.hasMany(SIG_PAAC_CONSOLIDADO, { as: "SIG_PAAC_CONSOLIDADOs", foreignKey: "CATEGORIA_CIIU"});
  SIG_PAAC_CONSOLIDADO.belongsTo(GRUPO_CIIU, { as: "GRUPO_CIIU_GRUPO_CIIU", foreignKey: "GRUPO_CIIU"});
  GRUPO_CIIU.hasMany(SIG_PAAC_CONSOLIDADO, { as: "GRUPO_CIIU_SIG_PAAC_CONSOLIDADOs", foreignKey: "GRUPO_CIIU"});
  SIG_PAAC_CONSOLIDADO.belongsTo(GRUPO_CIIU, { as: "TIPO_CIIU_GRUPO_CIIU", foreignKey: "TIPO_CIIU"});
  GRUPO_CIIU.hasMany(SIG_PAAC_CONSOLIDADO, { as: "TIPO_CIIU_SIG_PAAC_CONSOLIDADOs", foreignKey: "TIPO_CIIU"});
  Acumulado.belongsTo(Grupo_Gasto, { as: "ANO_EJE_Grupo_Gasto", foreignKey: "ANO_EJE"});
  Grupo_Gasto.hasMany(Acumulado, { as: "Acumulados", foreignKey: "ANO_EJE"});
  Acumulado.belongsTo(Grupo_Gasto, { as: "categ_gasto_Grupo_Gasto", foreignKey: "categ_gasto"});
  Grupo_Gasto.hasMany(Acumulado, { as: "categ_gasto_Acumulados", foreignKey: "categ_gasto"});
  Acumulado.belongsTo(Grupo_Gasto, { as: "grupo_gasto_Grupo_Gasto", foreignKey: "grupo_gasto"});
  Grupo_Gasto.hasMany(Acumulado, { as: "grupo_gasto_Acumulados", foreignKey: "grupo_gasto"});
  SIG_TECHO_PRESUPUESTO.belongsTo(Grupo_Gasto, { as: "CATEG_GASTO_Grupo_Gasto", foreignKey: "CATEG_GASTO"});
  Grupo_Gasto.hasMany(SIG_TECHO_PRESUPUESTO, { as: "SIG_TECHO_PRESUPUESTOs", foreignKey: "CATEG_GASTO"});
  SIG_TECHO_PRESUPUESTO.belongsTo(Grupo_Gasto, { as: "GRUPO_GASTO_Grupo_Gasto", foreignKey: "GRUPO_GASTO"});
  Grupo_Gasto.hasMany(SIG_TECHO_PRESUPUESTO, { as: "GRUPO_GASTO_SIG_TECHO_PRESUPUESTOs", foreignKey: "GRUPO_GASTO"});
  SIG_ITEM_MARCA_MODELO.belongsTo(MARCA, { as: "MARCA_MARCA", foreignKey: "MARCA"});
  MARCA.hasMany(SIG_ITEM_MARCA_MODELO, { as: "SIG_ITEM_MARCA_MODELOs", foreignKey: "MARCA"});
  SIG_ITEM_MARCA_MODELO.belongsTo(MARCA, { as: "TIPO_MARCA_MARCA", foreignKey: "TIPO_MARCA"});
  MARCA.hasMany(SIG_ITEM_MARCA_MODELO, { as: "TIPO_MARCA_SIG_ITEM_MARCA_MODELOs", foreignKey: "TIPO_MARCA"});
  Fuente_Financ.belongsTo(Origen, { as: "ANO_EJE_Origen", foreignKey: "ANO_EJE"});
  Origen.hasMany(Fuente_Financ, { as: "Fuente_Financs", foreignKey: "ANO_EJE"});
  Fuente_Financ.belongsTo(Origen, { as: "ORIGEN_Origen", foreignKey: "ORIGEN"});
  Origen.hasMany(Fuente_Financ, { as: "ORIGEN_Fuente_Financs", foreignKey: "ORIGEN"});
  Sub_Programa.belongsTo(Programa, { as: "funcion_Programa", foreignKey: "funcion"});
  Programa.hasMany(Sub_Programa, { as: "Sub_Programas", foreignKey: "funcion"});
  Sub_Programa.belongsTo(Programa, { as: "programa_Programa", foreignKey: "programa"});
  Programa.hasMany(Sub_Programa, { as: "programa_Sub_Programas", foreignKey: "programa"});
  Programa.belongsTo(Programa_Nombre, { as: "ANO_EJE_Programa_Nombre", foreignKey: "ANO_EJE"});
  Programa_Nombre.hasMany(Programa, { as: "Programas", foreignKey: "ANO_EJE"});
  Programa.belongsTo(Programa_Nombre, { as: "programa_Programa_Nombre", foreignKey: "programa"});
  Programa_Nombre.hasMany(Programa, { as: "programa_Programas", foreignKey: "programa"});
  CATEGORIA_CIIU.belongsTo(SECCION_CIIU, { as: "TIPO_CIIU_SECCION_CIIU", foreignKey: "TIPO_CIIU"});
  SECCION_CIIU.hasMany(CATEGORIA_CIIU, { as: "CATEGORIA_CIIUs", foreignKey: "TIPO_CIIU"});
  SIG_DETALLE_PEDIDOS.belongsTo(SIG_ALMACEN, { as: "ALMACEN_SIG_ALMACEN", foreignKey: "ALMACEN"});
  SIG_ALMACEN.hasMany(SIG_DETALLE_PEDIDOS, { as: "SIG_DETALLE_PEDIDOs", foreignKey: "ALMACEN"});
  SIG_DETALLE_PEDIDOS.belongsTo(SIG_ALMACEN, { as: "SEC_ALMACEN_SIG_ALMACEN", foreignKey: "SEC_ALMACEN"});
  SIG_ALMACEN.hasMany(SIG_DETALLE_PEDIDOS, { as: "SEC_ALMACEN_SIG_DETALLE_PEDIDOs", foreignKey: "SEC_ALMACEN"});
  SIG_KARDEX_INVENTARIO.belongsTo(SIG_ALMACEN, { as: "SEC_EJEC_SIG_ALMACEN", foreignKey: "SEC_EJEC"});
  SIG_ALMACEN.hasMany(SIG_KARDEX_INVENTARIO, { as: "SIG_KARDEX_INVENTARIOs", foreignKey: "SEC_EJEC"});
  SIG_KARDEX_INVENTARIO.belongsTo(SIG_ALMACEN, { as: "ALMACEN_SIG_ALMACEN", foreignKey: "ALMACEN"});
  SIG_ALMACEN.hasMany(SIG_KARDEX_INVENTARIO, { as: "ALMACEN_SIG_KARDEX_INVENTARIOs", foreignKey: "ALMACEN"});
  SIG_KARDEX_INVENTARIO.belongsTo(SIG_ALMACEN, { as: "SEC_ALMACEN_SIG_ALMACEN", foreignKey: "SEC_ALMACEN"});
  SIG_ALMACEN.hasMany(SIG_KARDEX_INVENTARIO, { as: "SEC_ALMACEN_SIG_KARDEX_INVENTARIOs", foreignKey: "SEC_ALMACEN"});
  SIG_KARDEX_POR_ALMACEN.belongsTo(SIG_ALMACEN, { as: "SEC_EJEC_SIG_ALMACEN", foreignKey: "SEC_EJEC"});
  SIG_ALMACEN.hasMany(SIG_KARDEX_POR_ALMACEN, { as: "SIG_KARDEX_POR_ALMACENs", foreignKey: "SEC_EJEC"});
  SIG_KARDEX_POR_ALMACEN.belongsTo(SIG_ALMACEN, { as: "ALMACEN_SIG_ALMACEN", foreignKey: "ALMACEN"});
  SIG_ALMACEN.hasMany(SIG_KARDEX_POR_ALMACEN, { as: "ALMACEN_SIG_KARDEX_POR_ALMACENs", foreignKey: "ALMACEN"});
  SIG_KARDEX_POR_ALMACEN.belongsTo(SIG_ALMACEN, { as: "SEC_ALMACEN_SIG_ALMACEN", foreignKey: "SEC_ALMACEN"});
  SIG_ALMACEN.hasMany(SIG_KARDEX_POR_ALMACEN, { as: "SEC_ALMACEN_SIG_KARDEX_POR_ALMACENs", foreignKey: "SEC_ALMACEN"});
  SIG_MOVIM_ALMACEN.belongsTo(SIG_ALMACEN, { as: "ALMACEN_SIG_ALMACEN", foreignKey: "ALMACEN"});
  SIG_ALMACEN.hasMany(SIG_MOVIM_ALMACEN, { as: "SIG_MOVIM_ALMACENs", foreignKey: "ALMACEN"});
  SIG_MOVIM_ALMACEN.belongsTo(SIG_ALMACEN, { as: "SEC_ALMACEN_SIG_ALMACEN", foreignKey: "SEC_ALMACEN"});
  SIG_ALMACEN.hasMany(SIG_MOVIM_ALMACEN, { as: "SEC_ALMACEN_SIG_MOVIM_ALMACENs", foreignKey: "SEC_ALMACEN"});
  SIG_PATRIMONIO.belongsTo(SIG_ALMACEN, { as: "ALMACEN_SIG_ALMACEN", foreignKey: "ALMACEN"});
  SIG_ALMACEN.hasMany(SIG_PATRIMONIO, { as: "SIG_PATRIMONIOs", foreignKey: "ALMACEN"});
  SIG_PATRIMONIO.belongsTo(SIG_ALMACEN, { as: "SEC_ALMACEN_SIG_ALMACEN", foreignKey: "SEC_ALMACEN"});
  SIG_ALMACEN.hasMany(SIG_PATRIMONIO, { as: "SEC_ALMACEN_SIG_PATRIMONIOs", foreignKey: "SEC_ALMACEN"});
  SIG_USUARIO_ALMACEN.belongsTo(SIG_ALMACEN, { as: "ALMACEN_SIG_ALMACEN", foreignKey: "ALMACEN"});
  SIG_ALMACEN.hasMany(SIG_USUARIO_ALMACEN, { as: "SIG_USUARIO_ALMACENs", foreignKey: "ALMACEN"});
  SIG_USUARIO_ALMACEN.belongsTo(SIG_ALMACEN, { as: "SEC_ALMACEN_SIG_ALMACEN", foreignKey: "SEC_ALMACEN"});
  SIG_ALMACEN.hasMany(SIG_USUARIO_ALMACEN, { as: "SEC_ALMACEN_SIG_USUARIO_ALMACENs", foreignKey: "SEC_ALMACEN"});
  SIG_USUARIO_ALMACEN.belongsTo(SIG_ALMACEN, { as: "SEC_EJEC_SIG_ALMACEN", foreignKey: "SEC_EJEC"});
  SIG_ALMACEN.hasMany(SIG_USUARIO_ALMACEN, { as: "SEC_EJEC_SIG_USUARIO_ALMACENs", foreignKey: "SEC_EJEC"});
  SIG_ASIGNACIONES_BD.belongsTo(SIG_BIENES_DURADEROS, { as: "SECUENCIA_SIG_BIENES_DURADERO", foreignKey: "SECUENCIA"});
  SIG_BIENES_DURADEROS.hasMany(SIG_ASIGNACIONES_BD, { as: "SIG_ASIGNACIONES_BDs", foreignKey: "SECUENCIA"});
  SIG_ASIGNACIONES_BD.belongsTo(SIG_BIENES_DURADEROS, { as: "TIPO_MODALIDAD_SIG_BIENES_DURADERO", foreignKey: "TIPO_MODALIDAD"});
  SIG_BIENES_DURADEROS.hasMany(SIG_ASIGNACIONES_BD, { as: "TIPO_MODALIDAD_SIG_ASIGNACIONES_BDs", foreignKey: "TIPO_MODALIDAD"});
  SIG_DETALLE_BIENES.belongsTo(SIG_BIENES_DURADEROS, { as: "SECUENCIA_SIG_BIENES_DURADERO", foreignKey: "SECUENCIA"});
  SIG_BIENES_DURADEROS.hasMany(SIG_DETALLE_BIENES, { as: "SIG_DETALLE_BIENEs", foreignKey: "SECUENCIA"});
  SIG_DETALLE_BIENES.belongsTo(SIG_BIENES_DURADEROS, { as: "TIPO_MODALIDAD_SIG_BIENES_DURADERO", foreignKey: "TIPO_MODALIDAD"});
  SIG_BIENES_DURADEROS.hasMany(SIG_DETALLE_BIENES, { as: "TIPO_MODALIDAD_SIG_DETALLE_BIENEs", foreignKey: "TIPO_MODALIDAD"});
  SIG_ESPECIF_TECNICA_BD.belongsTo(SIG_BIENES_DURADEROS, { as: "ANO_EJE_SIG_BIENES_DURADERO", foreignKey: "ANO_EJE"});
  SIG_BIENES_DURADEROS.hasMany(SIG_ESPECIF_TECNICA_BD, { as: "SIG_ESPECIF_TECNICA_BDs", foreignKey: "ANO_EJE"});
  SIG_ESPECIF_TECNICA_BD.belongsTo(SIG_BIENES_DURADEROS, { as: "SEC_EJEC_SIG_BIENES_DURADERO", foreignKey: "SEC_EJEC"});
  SIG_BIENES_DURADEROS.hasMany(SIG_ESPECIF_TECNICA_BD, { as: "SEC_EJEC_SIG_ESPECIF_TECNICA_BDs", foreignKey: "SEC_EJEC"});
  SIG_ESPECIF_TECNICA_BD.belongsTo(SIG_BIENES_DURADEROS, { as: "SECUENCIA_SIG_BIENES_DURADERO", foreignKey: "SECUENCIA"});
  SIG_BIENES_DURADEROS.hasMany(SIG_ESPECIF_TECNICA_BD, { as: "SECUENCIA_SIG_ESPECIF_TECNICA_BDs", foreignKey: "SECUENCIA"});
  SIG_ESPECIF_TECNICA_BD.belongsTo(SIG_BIENES_DURADEROS, { as: "TIPO_MODALIDAD_SIG_BIENES_DURADERO", foreignKey: "TIPO_MODALIDAD"});
  SIG_BIENES_DURADEROS.hasMany(SIG_ESPECIF_TECNICA_BD, { as: "TIPO_MODALIDAD_SIG_ESPECIF_TECNICA_BDs", foreignKey: "TIPO_MODALIDAD"});
  SIG_DET_DISTRIBUCION.belongsTo(SIG_CAB_DISTRIBUCION, { as: "ANO_EJE_SIG_CAB_DISTRIBUCION", foreignKey: "ANO_EJE"});
  SIG_CAB_DISTRIBUCION.hasMany(SIG_DET_DISTRIBUCION, { as: "SIG_DET_DISTRIBUCIONs", foreignKey: "ANO_EJE"});
  SIG_DET_DISTRIBUCION.belongsTo(SIG_CAB_DISTRIBUCION, { as: "NRO_PEDIDO_SIG_CAB_DISTRIBUCION", foreignKey: "NRO_PEDIDO"});
  SIG_CAB_DISTRIBUCION.hasMany(SIG_DET_DISTRIBUCION, { as: "NRO_PEDIDO_SIG_DET_DISTRIBUCIONs", foreignKey: "NRO_PEDIDO"});
  SIG_DET_DISTRIBUCION.belongsTo(SIG_CAB_DISTRIBUCION, { as: "SEC_DISTRIB_SIG_CAB_DISTRIBUCION", foreignKey: "SEC_DISTRIB"});
  SIG_CAB_DISTRIBUCION.hasMany(SIG_DET_DISTRIBUCION, { as: "SEC_DISTRIB_SIG_DET_DISTRIBUCIONs", foreignKey: "SEC_DISTRIB"});
  SIG_DET_DISTRIBUCION.belongsTo(SIG_CAB_DISTRIBUCION, { as: "sec_ejec_SIG_CAB_DISTRIBUCION", foreignKey: "sec_ejec"});
  SIG_CAB_DISTRIBUCION.hasMany(SIG_DET_DISTRIBUCION, { as: "sec_ejec_SIG_DET_DISTRIBUCIONs", foreignKey: "sec_ejec"});
  SIG_DET_DISTRIBUCION.belongsTo(SIG_CAB_DISTRIBUCION, { as: "SECUENCIA_SIG_CAB_DISTRIBUCION", foreignKey: "SECUENCIA"});
  SIG_CAB_DISTRIBUCION.hasMany(SIG_DET_DISTRIBUCION, { as: "SECUENCIA_SIG_DET_DISTRIBUCIONs", foreignKey: "SECUENCIA"});
  SIG_DET_DISTRIBUCION.belongsTo(SIG_CAB_DISTRIBUCION, { as: "TIPO_BIEN_SIG_CAB_DISTRIBUCION", foreignKey: "TIPO_BIEN"});
  SIG_CAB_DISTRIBUCION.hasMany(SIG_DET_DISTRIBUCION, { as: "TIPO_BIEN_SIG_DET_DISTRIBUCIONs", foreignKey: "TIPO_BIEN"});
  SIG_DET_DISTRIBUCION.belongsTo(SIG_CAB_DISTRIBUCION, { as: "TIPO_PEDIDO_SIG_CAB_DISTRIBUCION", foreignKey: "TIPO_PEDIDO"});
  SIG_CAB_DISTRIBUCION.hasMany(SIG_DET_DISTRIBUCION, { as: "TIPO_PEDIDO_SIG_DET_DISTRIBUCIONs", foreignKey: "TIPO_PEDIDO"});
  SIG_CAT_BIEN_SERV_PRECIO_FASE.belongsTo(SIG_CATALOGO_BIEN_SERV_PRECIO, { as: "ANO_EJE_SIG_CATALOGO_BIEN_SERV_PRECIO", foreignKey: "ANO_EJE"});
  SIG_CATALOGO_BIEN_SERV_PRECIO.hasMany(SIG_CAT_BIEN_SERV_PRECIO_FASE, { as: "SIG_CAT_BIEN_SERV_PRECIO_FASEs", foreignKey: "ANO_EJE"});
  SIG_CAT_BIEN_SERV_PRECIO_FASE.belongsTo(SIG_CATALOGO_BIEN_SERV_PRECIO, { as: "CLASE_BIEN_SIG_CATALOGO_BIEN_SERV_PRECIO", foreignKey: "CLASE_BIEN"});
  SIG_CATALOGO_BIEN_SERV_PRECIO.hasMany(SIG_CAT_BIEN_SERV_PRECIO_FASE, { as: "CLASE_BIEN_SIG_CAT_BIEN_SERV_PRECIO_FASEs", foreignKey: "CLASE_BIEN"});
  SIG_CAT_BIEN_SERV_PRECIO_FASE.belongsTo(SIG_CATALOGO_BIEN_SERV_PRECIO, { as: "FAMILIA_BIEN_SIG_CATALOGO_BIEN_SERV_PRECIO", foreignKey: "FAMILIA_BIEN"});
  SIG_CATALOGO_BIEN_SERV_PRECIO.hasMany(SIG_CAT_BIEN_SERV_PRECIO_FASE, { as: "FAMILIA_BIEN_SIG_CAT_BIEN_SERV_PRECIO_FASEs", foreignKey: "FAMILIA_BIEN"});
  SIG_CAT_BIEN_SERV_PRECIO_FASE.belongsTo(SIG_CATALOGO_BIEN_SERV_PRECIO, { as: "GRUPO_BIEN_SIG_CATALOGO_BIEN_SERV_PRECIO", foreignKey: "GRUPO_BIEN"});
  SIG_CATALOGO_BIEN_SERV_PRECIO.hasMany(SIG_CAT_BIEN_SERV_PRECIO_FASE, { as: "GRUPO_BIEN_SIG_CAT_BIEN_SERV_PRECIO_FASEs", foreignKey: "GRUPO_BIEN"});
  SIG_CAT_BIEN_SERV_PRECIO_FASE.belongsTo(SIG_CATALOGO_BIEN_SERV_PRECIO, { as: "ITEM_BIEN_SIG_CATALOGO_BIEN_SERV_PRECIO", foreignKey: "ITEM_BIEN"});
  SIG_CATALOGO_BIEN_SERV_PRECIO.hasMany(SIG_CAT_BIEN_SERV_PRECIO_FASE, { as: "ITEM_BIEN_SIG_CAT_BIEN_SERV_PRECIO_FASEs", foreignKey: "ITEM_BIEN"});
  SIG_CAT_BIEN_SERV_PRECIO_FASE.belongsTo(SIG_CATALOGO_BIEN_SERV_PRECIO, { as: "SEC_EJEC_SIG_CATALOGO_BIEN_SERV_PRECIO", foreignKey: "SEC_EJEC"});
  SIG_CATALOGO_BIEN_SERV_PRECIO.hasMany(SIG_CAT_BIEN_SERV_PRECIO_FASE, { as: "SEC_EJEC_SIG_CAT_BIEN_SERV_PRECIO_FASEs", foreignKey: "SEC_EJEC"});
  SIG_CAT_BIEN_SERV_PRECIO_FASE.belongsTo(SIG_CATALOGO_BIEN_SERV_PRECIO, { as: "TIPO_BIEN_SIG_CATALOGO_BIEN_SERV_PRECIO", foreignKey: "TIPO_BIEN"});
  SIG_CATALOGO_BIEN_SERV_PRECIO.hasMany(SIG_CAT_BIEN_SERV_PRECIO_FASE, { as: "TIPO_BIEN_SIG_CAT_BIEN_SERV_PRECIO_FASEs", foreignKey: "TIPO_BIEN"});
  SIG_DETALLE_BSERV_CUADRO.belongsTo(SIG_CATALOGO_PRESENTACION, { as: "CODIGO_SIG_CATALOGO_PRESENTACION", foreignKey: "CODIGO"});
  SIG_CATALOGO_PRESENTACION.hasMany(SIG_DETALLE_BSERV_CUADRO, { as: "SIG_DETALLE_BSERV_CUADROs", foreignKey: "CODIGO"});
  SIG_CATALOGO_RUBRO_X_ITEM.belongsTo(SIG_CATALOGO_RUBRO, { as: "RUBRO_SIG_CATALOGO_RUBRO", foreignKey: "RUBRO"});
  SIG_CATALOGO_RUBRO.hasMany(SIG_CATALOGO_RUBRO_X_ITEM, { as: "SIG_CATALOGO_RUBRO_X_ITEMs", foreignKey: "RUBRO"});
  SIG_CATALOGO_RUBRO_X_ITEM.belongsTo(SIG_CATALOGO_RUBRO, { as: "TIPO_SIG_CATALOGO_RUBRO", foreignKey: "TIPO"});
  SIG_CATALOGO_RUBRO.hasMany(SIG_CATALOGO_RUBRO_X_ITEM, { as: "TIPO_SIG_CATALOGO_RUBRO_X_ITEMs", foreignKey: "TIPO"});
  SIG_MA_CENTRO_RUBRO.belongsTo(SIG_CATALOGO_RUBRO, { as: "RUBRO_SIG_CATALOGO_RUBRO", foreignKey: "RUBRO"});
  SIG_CATALOGO_RUBRO.hasMany(SIG_MA_CENTRO_RUBRO, { as: "SIG_MA_CENTRO_RUBROs", foreignKey: "RUBRO"});
  SIG_MA_CENTRO_RUBRO.belongsTo(SIG_CATALOGO_RUBRO, { as: "TIPO_SIG_CATALOGO_RUBRO", foreignKey: "TIPO"});
  SIG_CATALOGO_RUBRO.hasMany(SIG_MA_CENTRO_RUBRO, { as: "TIPO_SIG_MA_CENTRO_RUBROs", foreignKey: "TIPO"});
  SIG_MP_CENTRO_RUBRO.belongsTo(SIG_CATALOGO_RUBRO, { as: "RUBRO_SIG_CATALOGO_RUBRO", foreignKey: "RUBRO"});
  SIG_CATALOGO_RUBRO.hasMany(SIG_MP_CENTRO_RUBRO, { as: "SIG_MP_CENTRO_RUBROs", foreignKey: "RUBRO"});
  SIG_MP_CENTRO_RUBRO.belongsTo(SIG_CATALOGO_RUBRO, { as: "TIPO_SIG_CATALOGO_RUBRO", foreignKey: "TIPO"});
  SIG_CATALOGO_RUBRO.hasMany(SIG_MP_CENTRO_RUBRO, { as: "TIPO_SIG_MP_CENTRO_RUBROs", foreignKey: "TIPO"});
  SIG_DET_CAUSAL_ALTA.belongsTo(SIG_CAUSAL_ALTA, { as: "CODIGO_ALTA_SIG_CAUSAL_ALTum", foreignKey: "CODIGO_ALTA"});
  SIG_CAUSAL_ALTA.hasMany(SIG_DET_CAUSAL_ALTA, { as: "SIG_DET_CAUSAL_ALTa", foreignKey: "CODIGO_ALTA"});
  SIG_MOVIMIENTO_ACTIVO.belongsTo(SIG_CAUSAL_BAJA, { as: "CLASE_CAUSAL_SIG_CAUSAL_BAJA", foreignKey: "CLASE_CAUSAL"});
  SIG_CAUSAL_BAJA.hasMany(SIG_MOVIMIENTO_ACTIVO, { as: "SIG_MOVIMIENTO_ACTIVOs", foreignKey: "CLASE_CAUSAL"});
  SIG_MOVIMIENTO_ACTIVO.belongsTo(SIG_CAUSAL_BAJA, { as: "TIPO_CAUSAL_SIG_CAUSAL_BAJA", foreignKey: "TIPO_CAUSAL"});
  SIG_CAUSAL_BAJA.hasMany(SIG_MOVIMIENTO_ACTIVO, { as: "TIPO_CAUSAL_SIG_MOVIMIENTO_ACTIVOs", foreignKey: "TIPO_CAUSAL"});
  SIG_PATRIMONIO.belongsTo(SIG_CAUSAL_BAJA, { as: "CLASE_CAUSAL_SIG_CAUSAL_BAJA", foreignKey: "CLASE_CAUSAL"});
  SIG_CAUSAL_BAJA.hasMany(SIG_PATRIMONIO, { as: "SIG_PATRIMONIOs", foreignKey: "CLASE_CAUSAL"});
  SIG_PATRIMONIO.belongsTo(SIG_CAUSAL_BAJA, { as: "TIPO_CAUSAL_SIG_CAUSAL_BAJA", foreignKey: "TIPO_CAUSAL"});
  SIG_CAUSAL_BAJA.hasMany(SIG_PATRIMONIO, { as: "TIPO_CAUSAL_SIG_PATRIMONIOs", foreignKey: "TIPO_CAUSAL"});
  SIG_ASIGNACIONES.belongsTo(SIG_CENTRO_COSTO, { as: "ANO_EJE_SIG_CENTRO_COSTO", foreignKey: "ANO_EJE"});
  SIG_CENTRO_COSTO.hasMany(SIG_ASIGNACIONES, { as: "SIG_ASIGNACIONEs", foreignKey: "ANO_EJE"});
  SIG_ASIGNACIONES.belongsTo(SIG_CENTRO_COSTO, { as: "CENTRO_COSTO_SIG_CENTRO_COSTO", foreignKey: "CENTRO_COSTO"});
  SIG_CENTRO_COSTO.hasMany(SIG_ASIGNACIONES, { as: "CENTRO_COSTO_SIG_ASIGNACIONEs", foreignKey: "CENTRO_COSTO"});
  SIG_ASIGNACIONES_BD.belongsTo(SIG_CENTRO_COSTO, { as: "ANO_EJE_SIG_CENTRO_COSTO", foreignKey: "ANO_EJE"});
  SIG_CENTRO_COSTO.hasMany(SIG_ASIGNACIONES_BD, { as: "SIG_ASIGNACIONES_BDs", foreignKey: "ANO_EJE"});
  SIG_ASIGNACIONES_BD.belongsTo(SIG_CENTRO_COSTO, { as: "CENTRO_COSTO_SIG_CENTRO_COSTO", foreignKey: "CENTRO_COSTO"});
  SIG_CENTRO_COSTO.hasMany(SIG_ASIGNACIONES_BD, { as: "CENTRO_COSTO_SIG_ASIGNACIONES_BDs", foreignKey: "CENTRO_COSTO"});
  SIG_BIENES_DURADEROS.belongsTo(SIG_CENTRO_COSTO, { as: "ANO_EJE_SIG_CENTRO_COSTO", foreignKey: "ANO_EJE"});
  SIG_CENTRO_COSTO.hasMany(SIG_BIENES_DURADEROS, { as: "SIG_BIENES_DURADEROs", foreignKey: "ANO_EJE"});
  SIG_BIENES_DURADEROS.belongsTo(SIG_CENTRO_COSTO, { as: "CENTRO_COSTO_SIG_CENTRO_COSTO", foreignKey: "CENTRO_COSTO"});
  SIG_CENTRO_COSTO.hasMany(SIG_BIENES_DURADEROS, { as: "CENTRO_COSTO_SIG_BIENES_DURADEROs", foreignKey: "CENTRO_COSTO"});
  SIG_CENTRO_COSTO_PERSONAL.belongsTo(SIG_CENTRO_COSTO, { as: "ANO_EJE_SIG_CENTRO_COSTO", foreignKey: "ANO_EJE"});
  SIG_CENTRO_COSTO.hasMany(SIG_CENTRO_COSTO_PERSONAL, { as: "SIG_CENTRO_COSTO_PERSONALs", foreignKey: "ANO_EJE"});
  SIG_CENTRO_COSTO_PERSONAL.belongsTo(SIG_CENTRO_COSTO, { as: "CENTRO_COSTO_SIG_CENTRO_COSTO", foreignKey: "CENTRO_COSTO"});
  SIG_CENTRO_COSTO.hasMany(SIG_CENTRO_COSTO_PERSONAL, { as: "CENTRO_COSTO_SIG_CENTRO_COSTO_PERSONALs", foreignKey: "CENTRO_COSTO"});
  SIG_CUADRO_ADQUISICION.belongsTo(SIG_CENTRO_COSTO, { as: "ANO_EJE_SIG_CENTRO_COSTO", foreignKey: "ANO_EJE"});
  SIG_CENTRO_COSTO.hasMany(SIG_CUADRO_ADQUISICION, { as: "SIG_CUADRO_ADQUISICIONs", foreignKey: "ANO_EJE"});
  SIG_CUADRO_ADQUISICION.belongsTo(SIG_CENTRO_COSTO, { as: "CENTRO_COSTO_SIG_CENTRO_COSTO", foreignKey: "CENTRO_COSTO"});
  SIG_CENTRO_COSTO.hasMany(SIG_CUADRO_ADQUISICION, { as: "CENTRO_COSTO_SIG_CUADRO_ADQUISICIONs", foreignKey: "CENTRO_COSTO"});
  SIG_CUADRO_MODIFICADO.belongsTo(SIG_CENTRO_COSTO, { as: "ANNO_EJEC_SIG_CENTRO_COSTO", foreignKey: "ANNO_EJEC"});
  SIG_CENTRO_COSTO.hasMany(SIG_CUADRO_MODIFICADO, { as: "SIG_CUADRO_MODIFICADOs", foreignKey: "ANNO_EJEC"});
  SIG_CUADRO_MODIFICADO.belongsTo(SIG_CENTRO_COSTO, { as: "CENTRO_COSTO_SIG_CENTRO_COSTO", foreignKey: "CENTRO_COSTO"});
  SIG_CENTRO_COSTO.hasMany(SIG_CUADRO_MODIFICADO, { as: "CENTRO_COSTO_SIG_CUADRO_MODIFICADOs", foreignKey: "CENTRO_COSTO"});
  SIG_CUADRO_MODIFICADO.belongsTo(SIG_CENTRO_COSTO, { as: "SEC_EJEC_SIG_CENTRO_COSTO", foreignKey: "SEC_EJEC"});
  SIG_CENTRO_COSTO.hasMany(SIG_CUADRO_MODIFICADO, { as: "SEC_EJEC_SIG_CUADRO_MODIFICADOs", foreignKey: "SEC_EJEC"});
  SIG_CUADRO_NECESIDAD.belongsTo(SIG_CENTRO_COSTO, { as: "SEC_EJEC_SIG_CENTRO_COSTO", foreignKey: "SEC_EJEC"});
  SIG_CENTRO_COSTO.hasMany(SIG_CUADRO_NECESIDAD, { as: "SIG_CUADRO_NECESIDADs", foreignKey: "SEC_EJEC"});
  SIG_CUADRO_NECESIDAD.belongsTo(SIG_CENTRO_COSTO, { as: "CENTRO_COSTO_SIG_CENTRO_COSTO", foreignKey: "CENTRO_COSTO"});
  SIG_CENTRO_COSTO.hasMany(SIG_CUADRO_NECESIDAD, { as: "CENTRO_COSTO_SIG_CUADRO_NECESIDADs", foreignKey: "CENTRO_COSTO"});
  SIG_CUADRO_TRANSFERENCIA_DET.belongsTo(SIG_CENTRO_COSTO, { as: "ANNO_EJEC_SIG_CENTRO_COSTO", foreignKey: "ANNO_EJEC"});
  SIG_CENTRO_COSTO.hasMany(SIG_CUADRO_TRANSFERENCIA_DET, { as: "SIG_CUADRO_TRANSFERENCIA_DETs", foreignKey: "ANNO_EJEC"});
  SIG_CUADRO_TRANSFERENCIA_DET.belongsTo(SIG_CENTRO_COSTO, { as: "CENTRO_COSTO_SIG_CENTRO_COSTO", foreignKey: "CENTRO_COSTO"});
  SIG_CENTRO_COSTO.hasMany(SIG_CUADRO_TRANSFERENCIA_DET, { as: "CENTRO_COSTO_SIG_CUADRO_TRANSFERENCIA_DETs", foreignKey: "CENTRO_COSTO"});
  SIG_CUADRO_TRANSFERENCIA_DET.belongsTo(SIG_CENTRO_COSTO, { as: "SEC_EJEC_SIG_CENTRO_COSTO", foreignKey: "SEC_EJEC"});
  SIG_CENTRO_COSTO.hasMany(SIG_CUADRO_TRANSFERENCIA_DET, { as: "SEC_EJEC_SIG_CUADRO_TRANSFERENCIA_DETs", foreignKey: "SEC_EJEC"});
  SIG_DEPEN_META_CUADRO.belongsTo(SIG_CENTRO_COSTO, { as: "CENTRO_COSTO_SIG_CENTRO_COSTO", foreignKey: "CENTRO_COSTO"});
  SIG_CENTRO_COSTO.hasMany(SIG_DEPEN_META_CUADRO, { as: "SIG_DEPEN_META_CUADROs", foreignKey: "CENTRO_COSTO"});
  SIG_DETALLE_MOVIM_ALMACEN.belongsTo(SIG_CENTRO_COSTO, { as: "CENTRO_COSTO_SIG_CENTRO_COSTO", foreignKey: "CENTRO_COSTO"});
  SIG_CENTRO_COSTO.hasMany(SIG_DETALLE_MOVIM_ALMACEN, { as: "SIG_DETALLE_MOVIM_ALMACENs", foreignKey: "CENTRO_COSTO"});
  SIG_DETALLE_MOVIM_CONFOR_SERV.belongsTo(SIG_CENTRO_COSTO, { as: "CENTRO_COSTO_SIG_CENTRO_COSTO", foreignKey: "CENTRO_COSTO"});
  SIG_CENTRO_COSTO.hasMany(SIG_DETALLE_MOVIM_CONFOR_SERV, { as: "SIG_DETALLE_MOVIM_CONFOR_SERVs", foreignKey: "CENTRO_COSTO"});
  SIG_METAS_PROP_X_CENTRO.belongsTo(SIG_CENTRO_COSTO, { as: "CENTRO_COSTO_SIG_CENTRO_COSTO", foreignKey: "CENTRO_COSTO"});
  SIG_CENTRO_COSTO.hasMany(SIG_METAS_PROP_X_CENTRO, { as: "SIG_METAS_PROP_X_CENTROs", foreignKey: "CENTRO_COSTO"});
  SIG_METAS_PROP_X_CENTRO.belongsTo(SIG_CENTRO_COSTO, { as: "SEC_EJEC_SIG_CENTRO_COSTO", foreignKey: "SEC_EJEC"});
  SIG_CENTRO_COSTO.hasMany(SIG_METAS_PROP_X_CENTRO, { as: "SEC_EJEC_SIG_METAS_PROP_X_CENTROs", foreignKey: "SEC_EJEC"});
  SIG_MOVIMIENTO_ACTIVO.belongsTo(SIG_CENTRO_COSTO, { as: "ANO_EJE_SIG_CENTRO_COSTO", foreignKey: "ANO_EJE"});
  SIG_CENTRO_COSTO.hasMany(SIG_MOVIMIENTO_ACTIVO, { as: "SIG_MOVIMIENTO_ACTIVOs", foreignKey: "ANO_EJE"});
  SIG_MOVIMIENTO_ACTIVO.belongsTo(SIG_CENTRO_COSTO, { as: "CENTRO_COSTO_SIG_CENTRO_COSTO", foreignKey: "CENTRO_COSTO"});
  SIG_CENTRO_COSTO.hasMany(SIG_MOVIMIENTO_ACTIVO, { as: "CENTRO_COSTO_SIG_MOVIMIENTO_ACTIVOs", foreignKey: "CENTRO_COSTO"});
  SIG_MOVIMIENTO_BIENES.belongsTo(SIG_CENTRO_COSTO, { as: "ANO_EJE_SIG_CENTRO_COSTO", foreignKey: "ANO_EJE"});
  SIG_CENTRO_COSTO.hasMany(SIG_MOVIMIENTO_BIENES, { as: "SIG_MOVIMIENTO_BIENEs", foreignKey: "ANO_EJE"});
  SIG_MOVIMIENTO_BIENES.belongsTo(SIG_CENTRO_COSTO, { as: "CENTRO_COSTO_SIG_CENTRO_COSTO", foreignKey: "CENTRO_COSTO"});
  SIG_CENTRO_COSTO.hasMany(SIG_MOVIMIENTO_BIENES, { as: "CENTRO_COSTO_SIG_MOVIMIENTO_BIENEs", foreignKey: "CENTRO_COSTO"});
  SIG_MOVIM_ALMACEN.belongsTo(SIG_CENTRO_COSTO, { as: "ANO_EJE_SIG_CENTRO_COSTO", foreignKey: "ANO_EJE"});
  SIG_CENTRO_COSTO.hasMany(SIG_MOVIM_ALMACEN, { as: "SIG_MOVIM_ALMACENs", foreignKey: "ANO_EJE"});
  SIG_MOVIM_ALMACEN.belongsTo(SIG_CENTRO_COSTO, { as: "CENTRO_COSTO_SIG_CENTRO_COSTO", foreignKey: "CENTRO_COSTO"});
  SIG_CENTRO_COSTO.hasMany(SIG_MOVIM_ALMACEN, { as: "CENTRO_COSTO_SIG_MOVIM_ALMACENs", foreignKey: "CENTRO_COSTO"});
  SIG_PATRIMONIO.belongsTo(SIG_CENTRO_COSTO, { as: "ANO_EJE_SIG_CENTRO_COSTO", foreignKey: "ANO_EJE"});
  SIG_CENTRO_COSTO.hasMany(SIG_PATRIMONIO, { as: "SIG_PATRIMONIOs", foreignKey: "ANO_EJE"});
  SIG_PATRIMONIO.belongsTo(SIG_CENTRO_COSTO, { as: "CENTRO_COSTO_SIG_CENTRO_COSTO", foreignKey: "CENTRO_COSTO"});
  SIG_CENTRO_COSTO.hasMany(SIG_PATRIMONIO, { as: "CENTRO_COSTO_SIG_PATRIMONIOs", foreignKey: "CENTRO_COSTO"});
  SIG_PPAAC_CENTRO_COSTO.belongsTo(SIG_CENTRO_COSTO, { as: "CENTRO_COSTO_SIG_CENTRO_COSTO", foreignKey: "CENTRO_COSTO"});
  SIG_CENTRO_COSTO.hasMany(SIG_PPAAC_CENTRO_COSTO, { as: "SIG_PPAAC_CENTRO_COSTOs", foreignKey: "CENTRO_COSTO"});
  SIG_PROCESO_COMITE.belongsTo(SIG_CENTRO_COSTO, { as: "CENTRO_COSTO_SIG_CENTRO_COSTO", foreignKey: "CENTRO_COSTO"});
  SIG_CENTRO_COSTO.hasMany(SIG_PROCESO_COMITE, { as: "SIG_PROCESO_COMITEs", foreignKey: "CENTRO_COSTO"});
  SIG_SOLICITUD_MODIFICACION.belongsTo(SIG_CENTRO_COSTO, { as: "ANNO_EJEC_SIG_CENTRO_COSTO", foreignKey: "ANNO_EJEC"});
  SIG_CENTRO_COSTO.hasMany(SIG_SOLICITUD_MODIFICACION, { as: "SIG_SOLICITUD_MODIFICACIONs", foreignKey: "ANNO_EJEC"});
  SIG_SOLICITUD_MODIFICACION.belongsTo(SIG_CENTRO_COSTO, { as: "CENTRO_COSTO_SIG_CENTRO_COSTO", foreignKey: "CENTRO_COSTO"});
  SIG_CENTRO_COSTO.hasMany(SIG_SOLICITUD_MODIFICACION, { as: "CENTRO_COSTO_SIG_SOLICITUD_MODIFICACIONs", foreignKey: "CENTRO_COSTO"});
  SIG_SOLICITUD_MODIFICACION.belongsTo(SIG_CENTRO_COSTO, { as: "SEC_EJEC_SIG_CENTRO_COSTO", foreignKey: "SEC_EJEC"});
  SIG_CENTRO_COSTO.hasMany(SIG_SOLICITUD_MODIFICACION, { as: "SEC_EJEC_SIG_SOLICITUD_MODIFICACIONs", foreignKey: "SEC_EJEC"});
  SIG_TECHO_PRESUPUESTO.belongsTo(SIG_CENTRO_COSTO, { as: "CENTRO_COSTO_SIG_CENTRO_COSTO", foreignKey: "CENTRO_COSTO"});
  SIG_CENTRO_COSTO.hasMany(SIG_TECHO_PRESUPUESTO, { as: "SIG_TECHO_PRESUPUESTOs", foreignKey: "CENTRO_COSTO"});
  SIG_TECHO_PRESUPUESTO.belongsTo(SIG_CENTRO_COSTO, { as: "CENTRO_COSTO_PRESUP_SIG_CENTRO_COSTO", foreignKey: "CENTRO_COSTO_PRESUP"});
  SIG_CENTRO_COSTO.hasMany(SIG_TECHO_PRESUPUESTO, { as: "CENTRO_COSTO_PRESUP_SIG_TECHO_PRESUPUESTOs", foreignKey: "CENTRO_COSTO_PRESUP"});
  SIG_USUARIO_CCOSTO.belongsTo(SIG_CENTRO_COSTO, { as: "ANO_EJE_SIG_CENTRO_COSTO", foreignKey: "ANO_EJE"});
  SIG_CENTRO_COSTO.hasMany(SIG_USUARIO_CCOSTO, { as: "SIG_USUARIO_CCOSTOs", foreignKey: "ANO_EJE"});
  SIG_USUARIO_CCOSTO.belongsTo(SIG_CENTRO_COSTO, { as: "CENTRO_COSTO_SIG_CENTRO_COSTO", foreignKey: "CENTRO_COSTO"});
  SIG_CENTRO_COSTO.hasMany(SIG_USUARIO_CCOSTO, { as: "CENTRO_COSTO_SIG_USUARIO_CCOSTOs", foreignKey: "CENTRO_COSTO"});
  SIG_USUARIO_CCOSTO.belongsTo(SIG_CENTRO_COSTO, { as: "SEC_EJEC_SIG_CENTRO_COSTO", foreignKey: "SEC_EJEC"});
  SIG_CENTRO_COSTO.hasMany(SIG_USUARIO_CCOSTO, { as: "SEC_EJEC_SIG_USUARIO_CCOSTOs", foreignKey: "SEC_EJEC"});
  sig_centro_costo_equivalencia.belongsTo(SIG_CENTRO_COSTO, { as: "ano_eje_SIG_CENTRO_COSTO", foreignKey: "ano_eje"});
  SIG_CENTRO_COSTO.hasMany(sig_centro_costo_equivalencia, { as: "sig_centro_costo_equivalencia", foreignKey: "ano_eje"});
  sig_centro_costo_equivalencia.belongsTo(SIG_CENTRO_COSTO, { as: "centro_costo_SIG_CENTRO_COSTO", foreignKey: "centro_costo"});
  SIG_CENTRO_COSTO.hasMany(sig_centro_costo_equivalencia, { as: "centro_costo_sig_centro_costo_equivalencia", foreignKey: "centro_costo"});
  sig_centro_costo_equivalencia.belongsTo(SIG_CENTRO_COSTO, { as: "sec_ejec_SIG_CENTRO_COSTO", foreignKey: "sec_ejec"});
  SIG_CENTRO_COSTO.hasMany(sig_centro_costo_equivalencia, { as: "sec_ejec_sig_centro_costo_equivalencia", foreignKey: "sec_ejec"});
  sig_centro_costo_tarea.belongsTo(SIG_CENTRO_COSTO, { as: "centro_costo_SIG_CENTRO_COSTO", foreignKey: "centro_costo"});
  SIG_CENTRO_COSTO.hasMany(sig_centro_costo_tarea, { as: "sig_centro_costo_tareas", foreignKey: "centro_costo"});
  sig_cuadro_anual.belongsTo(SIG_CENTRO_COSTO, { as: "centro_costo_SIG_CENTRO_COSTO", foreignKey: "centro_costo"});
  SIG_CENTRO_COSTO.hasMany(sig_cuadro_anual, { as: "sig_cuadro_anuals", foreignKey: "centro_costo"});
  sig_cuadro_x_centro.belongsTo(SIG_CENTRO_COSTO, { as: "ano_eje_SIG_CENTRO_COSTO", foreignKey: "ano_eje"});
  SIG_CENTRO_COSTO.hasMany(sig_cuadro_x_centro, { as: "sig_cuadro_x_centros", foreignKey: "ano_eje"});
  sig_cuadro_x_centro.belongsTo(SIG_CENTRO_COSTO, { as: "centro_costo_SIG_CENTRO_COSTO", foreignKey: "centro_costo"});
  SIG_CENTRO_COSTO.hasMany(sig_cuadro_x_centro, { as: "centro_costo_sig_cuadro_x_centros", foreignKey: "centro_costo"});
  sig_cuadro_x_centro.belongsTo(SIG_CENTRO_COSTO, { as: "sec_ejec_SIG_CENTRO_COSTO", foreignKey: "sec_ejec"});
  SIG_CENTRO_COSTO.hasMany(sig_cuadro_x_centro, { as: "sec_ejec_sig_cuadro_x_centros", foreignKey: "sec_ejec"});
  sig_metas_x_centro.belongsTo(SIG_CENTRO_COSTO, { as: "centro_costo_SIG_CENTRO_COSTO", foreignKey: "centro_costo"});
  SIG_CENTRO_COSTO.hasMany(sig_metas_x_centro, { as: "sig_metas_x_centros", foreignKey: "centro_costo"});
  sig_techo_presupuestal.belongsTo(SIG_CENTRO_COSTO, { as: "centro_costo_SIG_CENTRO_COSTO", foreignKey: "centro_costo"});
  SIG_CENTRO_COSTO.hasMany(sig_techo_presupuestal, { as: "sig_techo_presupuestals", foreignKey: "centro_costo"});
  SIG_CERTIFICACION_FASE.belongsTo(SIG_CERTIFICACION, { as: "ANO_EJE_SIG_CERTIFICACION", foreignKey: "ANO_EJE"});
  SIG_CERTIFICACION.hasMany(SIG_CERTIFICACION_FASE, { as: "SIG_CERTIFICACION_FASEs", foreignKey: "ANO_EJE"});
  SIG_CERTIFICACION_FASE.belongsTo(SIG_CERTIFICACION, { as: "NRO_CERTIFICA_SIG_CERTIFICACION", foreignKey: "NRO_CERTIFICA"});
  SIG_CERTIFICACION.hasMany(SIG_CERTIFICACION_FASE, { as: "NRO_CERTIFICA_SIG_CERTIFICACION_FASEs", foreignKey: "NRO_CERTIFICA"});
  SIG_CERTIFICACION_FASE.belongsTo(SIG_CERTIFICACION, { as: "SEC_EJEC_SIG_CERTIFICACION", foreignKey: "SEC_EJEC"});
  SIG_CERTIFICACION.hasMany(SIG_CERTIFICACION_FASE, { as: "SEC_EJEC_SIG_CERTIFICACION_FASEs", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_ADQUISICION.belongsTo(SIG_CERTIFICACION, { as: "SEC_EJEC_SIG_CERTIFICACION", foreignKey: "SEC_EJEC"});
  SIG_CERTIFICACION.hasMany(SIG_ORDEN_ADQUISICION, { as: "SIG_ORDEN_ADQUISICIONs", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_ADQUISICION.belongsTo(SIG_CERTIFICACION, { as: "ANO_EJE_SIG_CERTIFICACION", foreignKey: "ANO_EJE"});
  SIG_CERTIFICACION.hasMany(SIG_ORDEN_ADQUISICION, { as: "ANO_EJE_SIG_ORDEN_ADQUISICIONs", foreignKey: "ANO_EJE"});
  SIG_ORDEN_ADQUISICION.belongsTo(SIG_CERTIFICACION, { as: "NRO_CERTIFICA_SIG_CERTIFICACION", foreignKey: "NRO_CERTIFICA"});
  SIG_CERTIFICACION.hasMany(SIG_ORDEN_ADQUISICION, { as: "NRO_CERTIFICA_SIG_ORDEN_ADQUISICIONs", foreignKey: "NRO_CERTIFICA"});
  SIG_CERTIFICACION_OPERACION.belongsTo(SIG_CERTIFICACION_FASE, { as: "ANO_EJE_SIG_CERTIFICACION_FASE", foreignKey: "ANO_EJE"});
  SIG_CERTIFICACION_FASE.hasMany(SIG_CERTIFICACION_OPERACION, { as: "SIG_CERTIFICACION_OPERACIONs", foreignKey: "ANO_EJE"});
  SIG_CERTIFICACION_OPERACION.belongsTo(SIG_CERTIFICACION_FASE, { as: "NRO_CERTIFICA_SIG_CERTIFICACION_FASE", foreignKey: "NRO_CERTIFICA"});
  SIG_CERTIFICACION_FASE.hasMany(SIG_CERTIFICACION_OPERACION, { as: "NRO_CERTIFICA_SIG_CERTIFICACION_OPERACIONs", foreignKey: "NRO_CERTIFICA"});
  SIG_CERTIFICACION_OPERACION.belongsTo(SIG_CERTIFICACION_FASE, { as: "SEC_EJEC_SIG_CERTIFICACION_FASE", foreignKey: "SEC_EJEC"});
  SIG_CERTIFICACION_FASE.hasMany(SIG_CERTIFICACION_OPERACION, { as: "SEC_EJEC_SIG_CERTIFICACION_OPERACIONs", foreignKey: "SEC_EJEC"});
  SIG_CERTIFICACION_OPERACION.belongsTo(SIG_CERTIFICACION_FASE, { as: "SECUENCIA_FASE_SIG_CERTIFICACION_FASE", foreignKey: "SECUENCIA_FASE"});
  SIG_CERTIFICACION_FASE.hasMany(SIG_CERTIFICACION_OPERACION, { as: "SECUENCIA_FASE_SIG_CERTIFICACION_OPERACIONs", foreignKey: "SECUENCIA_FASE"});
  SIG_CERTIFICACION_OPER_FUENTE.belongsTo(SIG_CERTIFICACION_OPERACION, { as: "ANO_EJE_SIG_CERTIFICACION_OPERACION", foreignKey: "ANO_EJE"});
  SIG_CERTIFICACION_OPERACION.hasMany(SIG_CERTIFICACION_OPER_FUENTE, { as: "SIG_CERTIFICACION_OPER_FUENTEs", foreignKey: "ANO_EJE"});
  SIG_CERTIFICACION_OPER_FUENTE.belongsTo(SIG_CERTIFICACION_OPERACION, { as: "NRO_CERTIFICA_SIG_CERTIFICACION_OPERACION", foreignKey: "NRO_CERTIFICA"});
  SIG_CERTIFICACION_OPERACION.hasMany(SIG_CERTIFICACION_OPER_FUENTE, { as: "NRO_CERTIFICA_SIG_CERTIFICACION_OPER_FUENTEs", foreignKey: "NRO_CERTIFICA"});
  SIG_CERTIFICACION_OPER_FUENTE.belongsTo(SIG_CERTIFICACION_OPERACION, { as: "SEC_EJEC_SIG_CERTIFICACION_OPERACION", foreignKey: "SEC_EJEC"});
  SIG_CERTIFICACION_OPERACION.hasMany(SIG_CERTIFICACION_OPER_FUENTE, { as: "SEC_EJEC_SIG_CERTIFICACION_OPER_FUENTEs", foreignKey: "SEC_EJEC"});
  SIG_CERTIFICACION_OPER_FUENTE.belongsTo(SIG_CERTIFICACION_OPERACION, { as: "SECUENCIA_FASE_SIG_CERTIFICACION_OPERACION", foreignKey: "SECUENCIA_FASE"});
  SIG_CERTIFICACION_OPERACION.hasMany(SIG_CERTIFICACION_OPER_FUENTE, { as: "SECUENCIA_FASE_SIG_CERTIFICACION_OPER_FUENTEs", foreignKey: "SECUENCIA_FASE"});
  SIG_CERTIFICACION_OPER_FUENTE.belongsTo(SIG_CERTIFICACION_OPERACION, { as: "SECUENCIA_OPERA_SIG_CERTIFICACION_OPERACION", foreignKey: "SECUENCIA_OPERA"});
  SIG_CERTIFICACION_OPERACION.hasMany(SIG_CERTIFICACION_OPER_FUENTE, { as: "SECUENCIA_OPERA_SIG_CERTIFICACION_OPER_FUENTEs", foreignKey: "SECUENCIA_OPERA"});
  SIG_CERTIFICACION_PPTO.belongsTo(SIG_CERTIFICACION_OPER_FUENTE, { as: "ANO_EJE_SIG_CERTIFICACION_OPER_FUENTE", foreignKey: "ANO_EJE"});
  SIG_CERTIFICACION_OPER_FUENTE.hasMany(SIG_CERTIFICACION_PPTO, { as: "SIG_CERTIFICACION_PPTOs", foreignKey: "ANO_EJE"});
  SIG_CERTIFICACION_PPTO.belongsTo(SIG_CERTIFICACION_OPER_FUENTE, { as: "NRO_CERTIFICA_SIG_CERTIFICACION_OPER_FUENTE", foreignKey: "NRO_CERTIFICA"});
  SIG_CERTIFICACION_OPER_FUENTE.hasMany(SIG_CERTIFICACION_PPTO, { as: "NRO_CERTIFICA_SIG_CERTIFICACION_PPTOs", foreignKey: "NRO_CERTIFICA"});
  SIG_CERTIFICACION_PPTO.belongsTo(SIG_CERTIFICACION_OPER_FUENTE, { as: "SEC_EJEC_SIG_CERTIFICACION_OPER_FUENTE", foreignKey: "SEC_EJEC"});
  SIG_CERTIFICACION_OPER_FUENTE.hasMany(SIG_CERTIFICACION_PPTO, { as: "SEC_EJEC_SIG_CERTIFICACION_PPTOs", foreignKey: "SEC_EJEC"});
  SIG_CERTIFICACION_PPTO.belongsTo(SIG_CERTIFICACION_OPER_FUENTE, { as: "SECUENCIA_DET_SIG_CERTIFICACION_OPER_FUENTE", foreignKey: "SECUENCIA_DET"});
  SIG_CERTIFICACION_OPER_FUENTE.hasMany(SIG_CERTIFICACION_PPTO, { as: "SECUENCIA_DET_SIG_CERTIFICACION_PPTOs", foreignKey: "SECUENCIA_DET"});
  SIG_CERTIFICACION_PPTO.belongsTo(SIG_CERTIFICACION_OPER_FUENTE, { as: "SECUENCIA_FASE_SIG_CERTIFICACION_OPER_FUENTE", foreignKey: "SECUENCIA_FASE"});
  SIG_CERTIFICACION_OPER_FUENTE.hasMany(SIG_CERTIFICACION_PPTO, { as: "SECUENCIA_FASE_SIG_CERTIFICACION_PPTOs", foreignKey: "SECUENCIA_FASE"});
  SIG_CERTIFICACION_PPTO.belongsTo(SIG_CERTIFICACION_OPER_FUENTE, { as: "SECUENCIA_OPERA_SIG_CERTIFICACION_OPER_FUENTE", foreignKey: "SECUENCIA_OPERA"});
  SIG_CERTIFICACION_OPER_FUENTE.hasMany(SIG_CERTIFICACION_PPTO, { as: "SECUENCIA_OPERA_SIG_CERTIFICACION_PPTOs", foreignKey: "SECUENCIA_OPERA"});
  CATALOGO_BIEN_SERV.belongsTo(SIG_CLASE_ATRIBUTO, { as: "CLASE_BIEN_DET_SIG_CLASE_ATRIBUTO", foreignKey: "CLASE_BIEN_DET"});
  SIG_CLASE_ATRIBUTO.hasMany(CATALOGO_BIEN_SERV, { as: "CATALOGO_BIEN_SERVs", foreignKey: "CLASE_BIEN_DET"});
  SIG_CONCEPTO_FAMILIA.belongsTo(SIG_CLASIFICADOR_GASTO, { as: "CLASIFICADOR_SIG_CLASIFICADOR_GASTO", foreignKey: "CLASIFICADOR"});
  SIG_CLASIFICADOR_GASTO.hasMany(SIG_CONCEPTO_FAMILIA, { as: "SIG_CONCEPTO_FAMILIa", foreignKey: "CLASIFICADOR"});
  SIG_CONCEPTO_GASTO.belongsTo(SIG_CLASIFICADOR_GASTO, { as: "CLASIFICADOR_SIG_CLASIFICADOR_GASTO", foreignKey: "CLASIFICADOR"});
  SIG_CLASIFICADOR_GASTO.hasMany(SIG_CONCEPTO_GASTO, { as: "SIG_CONCEPTO_GASTOs", foreignKey: "CLASIFICADOR"});
  SIG_CONTRATO_MOVIM_PAGO.belongsTo(SIG_CLASIFICADOR_GASTO, { as: "CLASIFICADOR_SIG_CLASIFICADOR_GASTO", foreignKey: "CLASIFICADOR"});
  SIG_CLASIFICADOR_GASTO.hasMany(SIG_CONTRATO_MOVIM_PAGO, { as: "SIG_CONTRATO_MOVIM_PAGOs", foreignKey: "CLASIFICADOR"});
  SIG_CONVOCATORIA_ITEM_PPTAL.belongsTo(SIG_CLASIFICADOR_GASTO, { as: "CLASIFICADOR_SIG_CLASIFICADOR_GASTO", foreignKey: "CLASIFICADOR"});
  SIG_CLASIFICADOR_GASTO.hasMany(SIG_CONVOCATORIA_ITEM_PPTAL, { as: "SIG_CONVOCATORIA_ITEM_PPTALs", foreignKey: "CLASIFICADOR"});
  SIG_CUADRO_MODIFICADO_DET.belongsTo(SIG_CLASIFICADOR_GASTO, { as: "CLASIFICADOR_SIG_CLASIFICADOR_GASTO", foreignKey: "CLASIFICADOR"});
  SIG_CLASIFICADOR_GASTO.hasMany(SIG_CUADRO_MODIFICADO_DET, { as: "SIG_CUADRO_MODIFICADO_DETs", foreignKey: "CLASIFICADOR"});
  SIG_CUADRO_TRANSFERENCIA.belongsTo(SIG_CLASIFICADOR_GASTO, { as: "ORIG_CLASIFICADOR_SIG_CLASIFICADOR_GASTO", foreignKey: "ORIG_CLASIFICADOR"});
  SIG_CLASIFICADOR_GASTO.hasMany(SIG_CUADRO_TRANSFERENCIA, { as: "SIG_CUADRO_TRANSFERENCIa", foreignKey: "ORIG_CLASIFICADOR"});
  SIG_ENCARGO_REQ_DET.belongsTo(SIG_CLASIFICADOR_GASTO, { as: "CLASIFICADOR_SIG_CLASIFICADOR_GASTO", foreignKey: "CLASIFICADOR"});
  SIG_CLASIFICADOR_GASTO.hasMany(SIG_ENCARGO_REQ_DET, { as: "SIG_ENCARGO_REQ_DETs", foreignKey: "CLASIFICADOR"});
  SIG_OPERACION_FAMILIA_PROCESO.belongsTo(SIG_CLASIFICADOR_GASTO, { as: "ANO_EJE_SIG_CLASIFICADOR_GASTO", foreignKey: "ANO_EJE"});
  SIG_CLASIFICADOR_GASTO.hasMany(SIG_OPERACION_FAMILIA_PROCESO, { as: "SIG_OPERACION_FAMILIA_PROCESOs", foreignKey: "ANO_EJE"});
  SIG_OPERACION_FAMILIA_PROCESO.belongsTo(SIG_CLASIFICADOR_GASTO, { as: "CLASIFICADOR_SIG_CLASIFICADOR_GASTO", foreignKey: "CLASIFICADOR"});
  SIG_CLASIFICADOR_GASTO.hasMany(SIG_OPERACION_FAMILIA_PROCESO, { as: "CLASIFICADOR_SIG_OPERACION_FAMILIA_PROCESOs", foreignKey: "CLASIFICADOR"});
  SIG_PAAC_METAS.belongsTo(SIG_CLASIFICADOR_GASTO, { as: "CLASIFICADOR_SIG_CLASIFICADOR_GASTO", foreignKey: "CLASIFICADOR"});
  SIG_CLASIFICADOR_GASTO.hasMany(SIG_PAAC_METAS, { as: "SIG_PAAC_METa", foreignKey: "CLASIFICADOR"});
  SIG_PPAAC_METAS.belongsTo(SIG_CLASIFICADOR_GASTO, { as: "CLASIFICADOR_SIG_CLASIFICADOR_GASTO", foreignKey: "CLASIFICADOR"});
  SIG_CLASIFICADOR_GASTO.hasMany(SIG_PPAAC_METAS, { as: "SIG_PPAAC_METa", foreignKey: "CLASIFICADOR"});
  operacion_familia.belongsTo(SIG_CLASIFICADOR_GASTO, { as: "ano_eje_SIG_CLASIFICADOR_GASTO", foreignKey: "ano_eje"});
  SIG_CLASIFICADOR_GASTO.hasMany(operacion_familia, { as: "operacion_familia", foreignKey: "ano_eje"});
  operacion_familia.belongsTo(SIG_CLASIFICADOR_GASTO, { as: "clasificador_SIG_CLASIFICADOR_GASTO", foreignKey: "clasificador"});
  SIG_CLASIFICADOR_GASTO.hasMany(operacion_familia, { as: "clasificador_operacion_familia", foreignKey: "clasificador"});
  sig_detalle_cuadro_anual.belongsTo(SIG_CLASIFICADOR_GASTO, { as: "clasificador_SIG_CLASIFICADOR_GASTO", foreignKey: "clasificador"});
  SIG_CLASIFICADOR_GASTO.hasMany(sig_detalle_cuadro_anual, { as: "sig_detalle_cuadro_anuals", foreignKey: "clasificador"});
  SIG_CONCEPTO_FAMILIA.belongsTo(SIG_CONCEPTO_GASTO, { as: "ANO_EJE_SIG_CONCEPTO_GASTO", foreignKey: "ANO_EJE"});
  SIG_CONCEPTO_GASTO.hasMany(SIG_CONCEPTO_FAMILIA, { as: "SIG_CONCEPTO_FAMILIa", foreignKey: "ANO_EJE"});
  SIG_CONCEPTO_FAMILIA.belongsTo(SIG_CONCEPTO_GASTO, { as: "CICLO_SIG_CONCEPTO_GASTO", foreignKey: "CICLO"});
  SIG_CONCEPTO_GASTO.hasMany(SIG_CONCEPTO_FAMILIA, { as: "CICLO_SIG_CONCEPTO_FAMILIa", foreignKey: "CICLO"});
  SIG_CONCEPTO_FAMILIA.belongsTo(SIG_CONCEPTO_GASTO, { as: "CONCEPTO_GASTO_SIG_CONCEPTO_GASTO", foreignKey: "CONCEPTO_GASTO"});
  SIG_CONCEPTO_GASTO.hasMany(SIG_CONCEPTO_FAMILIA, { as: "CONCEPTO_GASTO_SIG_CONCEPTO_FAMILIa", foreignKey: "CONCEPTO_GASTO"});
  SIG_CONCEPTO_FAMILIA.belongsTo(SIG_CONCEPTO_GASTO, { as: "NRO_PLANTILLA_SIG_CONCEPTO_GASTO", foreignKey: "NRO_PLANTILLA"});
  SIG_CONCEPTO_GASTO.hasMany(SIG_CONCEPTO_FAMILIA, { as: "NRO_PLANTILLA_SIG_CONCEPTO_FAMILIa", foreignKey: "NRO_PLANTILLA"});
  SIG_CONCEPTO_FAMILIA.belongsTo(SIG_CONCEPTO_GASTO, { as: "TIPO_ACT_PROY_SIG_CONCEPTO_GASTO", foreignKey: "TIPO_ACT_PROY"});
  SIG_CONCEPTO_GASTO.hasMany(SIG_CONCEPTO_FAMILIA, { as: "TIPO_ACT_PROY_SIG_CONCEPTO_FAMILIa", foreignKey: "TIPO_ACT_PROY"});
  SIG_CONCEPTO_FAMILIA.belongsTo(SIG_CONCEPTO_GASTO, { as: "TIPO_OPERACION_SIG_CONCEPTO_GASTO", foreignKey: "TIPO_OPERACION"});
  SIG_CONCEPTO_GASTO.hasMany(SIG_CONCEPTO_FAMILIA, { as: "TIPO_OPERACION_SIG_CONCEPTO_FAMILIa", foreignKey: "TIPO_OPERACION"});
  SIG_CONCEPTO_FAMILIA.belongsTo(SIG_CONCEPTO_GASTO, { as: "TIPO_USO_SIG_CONCEPTO_GASTO", foreignKey: "TIPO_USO"});
  SIG_CONCEPTO_GASTO.hasMany(SIG_CONCEPTO_FAMILIA, { as: "TIPO_USO_SIG_CONCEPTO_FAMILIa", foreignKey: "TIPO_USO"});
  SIG_CONCEPTO_GASTO_CTA.belongsTo(SIG_CONCEPTO_GASTO, { as: "ANO_EJE_SIG_CONCEPTO_GASTO", foreignKey: "ANO_EJE"});
  SIG_CONCEPTO_GASTO.hasMany(SIG_CONCEPTO_GASTO_CTA, { as: "SIG_CONCEPTO_GASTO_CTa", foreignKey: "ANO_EJE"});
  SIG_CONCEPTO_GASTO_CTA.belongsTo(SIG_CONCEPTO_GASTO, { as: "CICLO_SIG_CONCEPTO_GASTO", foreignKey: "CICLO"});
  SIG_CONCEPTO_GASTO.hasMany(SIG_CONCEPTO_GASTO_CTA, { as: "CICLO_SIG_CONCEPTO_GASTO_CTa", foreignKey: "CICLO"});
  SIG_CONCEPTO_GASTO_CTA.belongsTo(SIG_CONCEPTO_GASTO, { as: "CONCEPTO_GASTO_SIG_CONCEPTO_GASTO", foreignKey: "CONCEPTO_GASTO"});
  SIG_CONCEPTO_GASTO.hasMany(SIG_CONCEPTO_GASTO_CTA, { as: "CONCEPTO_GASTO_SIG_CONCEPTO_GASTO_CTa", foreignKey: "CONCEPTO_GASTO"});
  SIG_CONCEPTO_GASTO_CTA.belongsTo(SIG_CONCEPTO_GASTO, { as: "NRO_PLANTILLA_SIG_CONCEPTO_GASTO", foreignKey: "NRO_PLANTILLA"});
  SIG_CONCEPTO_GASTO.hasMany(SIG_CONCEPTO_GASTO_CTA, { as: "NRO_PLANTILLA_SIG_CONCEPTO_GASTO_CTa", foreignKey: "NRO_PLANTILLA"});
  SIG_CONCEPTO_GASTO_CTA.belongsTo(SIG_CONCEPTO_GASTO, { as: "TIPO_ACT_PROY_SIG_CONCEPTO_GASTO", foreignKey: "TIPO_ACT_PROY"});
  SIG_CONCEPTO_GASTO.hasMany(SIG_CONCEPTO_GASTO_CTA, { as: "TIPO_ACT_PROY_SIG_CONCEPTO_GASTO_CTa", foreignKey: "TIPO_ACT_PROY"});
  SIG_CONCEPTO_GASTO_CTA.belongsTo(SIG_CONCEPTO_GASTO, { as: "TIPO_OPERACION_SIG_CONCEPTO_GASTO", foreignKey: "TIPO_OPERACION"});
  SIG_CONCEPTO_GASTO.hasMany(SIG_CONCEPTO_GASTO_CTA, { as: "TIPO_OPERACION_SIG_CONCEPTO_GASTO_CTa", foreignKey: "TIPO_OPERACION"});
  SIG_CONCEPTO_GASTO_CTA.belongsTo(SIG_CONCEPTO_GASTO, { as: "TIPO_USO_SIG_CONCEPTO_GASTO", foreignKey: "TIPO_USO"});
  SIG_CONCEPTO_GASTO.hasMany(SIG_CONCEPTO_GASTO_CTA, { as: "TIPO_USO_SIG_CONCEPTO_GASTO_CTa", foreignKey: "TIPO_USO"});
  SIG_CONCEPTO_GASTO.belongsTo(SIG_CONCEPTO_MAESTRO, { as: "CONCEPTO_GASTO_SIG_CONCEPTO_MAESTRO", foreignKey: "CONCEPTO_GASTO"});
  SIG_CONCEPTO_MAESTRO.hasMany(SIG_CONCEPTO_GASTO, { as: "SIG_CONCEPTO_GASTOs", foreignKey: "CONCEPTO_GASTO"});
  SIG_CUADRO_NECESIDAD.belongsTo(SIG_CONCEPTO_MAESTRO, { as: "ANO_EJE_SIG_CONCEPTO_MAESTRO", foreignKey: "ANO_EJE"});
  SIG_CONCEPTO_MAESTRO.hasMany(SIG_CUADRO_NECESIDAD, { as: "SIG_CUADRO_NECESIDADs", foreignKey: "ANO_EJE"});
  SIG_CUADRO_NECESIDAD.belongsTo(SIG_CONCEPTO_MAESTRO, { as: "CONCEPTO_GASTO_SIG_CONCEPTO_MAESTRO", foreignKey: "CONCEPTO_GASTO"});
  SIG_CONCEPTO_MAESTRO.hasMany(SIG_CUADRO_NECESIDAD, { as: "CONCEPTO_GASTO_SIG_CUADRO_NECESIDADs", foreignKey: "CONCEPTO_GASTO"});
  SIG_DETALLE_CONCESIONES.belongsTo(SIG_CONCESIONES, { as: "ANO_EJE_SIG_CONCESIONE", foreignKey: "ANO_EJE"});
  SIG_CONCESIONES.hasMany(SIG_DETALLE_CONCESIONES, { as: "SIG_DETALLE_CONCESIONEs", foreignKey: "ANO_EJE"});
  SIG_DETALLE_CONCESIONES.belongsTo(SIG_CONCESIONES, { as: "MES_PROCESO_SIG_CONCESIONE", foreignKey: "MES_PROCESO"});
  SIG_CONCESIONES.hasMany(SIG_DETALLE_CONCESIONES, { as: "MES_PROCESO_SIG_DETALLE_CONCESIONEs", foreignKey: "MES_PROCESO"});
  SIG_DETALLE_CONCESIONES.belongsTo(SIG_CONCESIONES, { as: "SEC_CONCESION_SIG_CONCESIONE", foreignKey: "SEC_CONCESION"});
  SIG_CONCESIONES.hasMany(SIG_DETALLE_CONCESIONES, { as: "SEC_CONCESION_SIG_DETALLE_CONCESIONEs", foreignKey: "SEC_CONCESION"});
  SIG_DETALLE_CONCESIONES.belongsTo(SIG_CONCESIONES, { as: "SEC_EJEC_SIG_CONCESIONE", foreignKey: "SEC_EJEC"});
  SIG_CONCESIONES.hasMany(SIG_DETALLE_CONCESIONES, { as: "SEC_EJEC_SIG_DETALLE_CONCESIONEs", foreignKey: "SEC_EJEC"});
  SIG_CONSORCIOS_DET.belongsTo(SIG_CONSORCIOS, { as: "COD_CONSORCIO_SIG_CONSORCIO", foreignKey: "COD_CONSORCIO"});
  SIG_CONSORCIOS.hasMany(SIG_CONSORCIOS_DET, { as: "SIG_CONSORCIOS_DETs", foreignKey: "COD_CONSORCIO"});
  SIG_CONSTRUCCIONES_DET.belongsTo(SIG_CONSTRUCCIONES, { as: "COD_CONSTRUC_SIG_CONSTRUCCIONE", foreignKey: "COD_CONSTRUC"});
  SIG_CONSTRUCCIONES.hasMany(SIG_CONSTRUCCIONES_DET, { as: "SIG_CONSTRUCCIONES_DETs", foreignKey: "COD_CONSTRUC"});
  SIG_CONSTRUCCIONES_DET.belongsTo(SIG_CONSTRUCCIONES, { as: "SEC_EJEC_SIG_CONSTRUCCIONE", foreignKey: "SEC_EJEC"});
  SIG_CONSTRUCCIONES.hasMany(SIG_CONSTRUCCIONES_DET, { as: "SEC_EJEC_SIG_CONSTRUCCIONES_DETs", foreignKey: "SEC_EJEC"});
  SIG_CONSTRUCCIONES_MOVIMTO.belongsTo(SIG_CONSTRUCCIONES_DET, { as: "COD_CONSTRUC_SIG_CONSTRUCCIONES_DET", foreignKey: "COD_CONSTRUC"});
  SIG_CONSTRUCCIONES_DET.hasMany(SIG_CONSTRUCCIONES_MOVIMTO, { as: "SIG_CONSTRUCCIONES_MOVIMTOs", foreignKey: "COD_CONSTRUC"});
  SIG_CONSTRUCCIONES_MOVIMTO.belongsTo(SIG_CONSTRUCCIONES_DET, { as: "NRO_CODIGO_SIG_CONSTRUCCIONES_DET", foreignKey: "NRO_CODIGO"});
  SIG_CONSTRUCCIONES_DET.hasMany(SIG_CONSTRUCCIONES_MOVIMTO, { as: "NRO_CODIGO_SIG_CONSTRUCCIONES_MOVIMTOs", foreignKey: "NRO_CODIGO"});
  SIG_CONSTRUCCIONES_MOVIMTO.belongsTo(SIG_CONSTRUCCIONES_DET, { as: "SEC_EJEC_SIG_CONSTRUCCIONES_DET", foreignKey: "SEC_EJEC"});
  SIG_CONSTRUCCIONES_DET.hasMany(SIG_CONSTRUCCIONES_MOVIMTO, { as: "SEC_EJEC_SIG_CONSTRUCCIONES_MOVIMTOs", foreignKey: "SEC_EJEC"});
  SIG_CONSORCIOS_DET.belongsTo(SIG_CONTRATISTAS, { as: "PROVEEDOR_SIG_CONTRATISTA", foreignKey: "PROVEEDOR"});
  SIG_CONTRATISTAS.hasMany(SIG_CONSORCIOS_DET, { as: "SIG_CONSORCIOS_DETs", foreignKey: "PROVEEDOR"});
  SIG_CONTRATISTAS_BIEN_SERV.belongsTo(SIG_CONTRATISTAS, { as: "PROVEEDOR_SIG_CONTRATISTA", foreignKey: "PROVEEDOR"});
  SIG_CONTRATISTAS.hasMany(SIG_CONTRATISTAS_BIEN_SERV, { as: "SIG_CONTRATISTAS_BIEN_SERVs", foreignKey: "PROVEEDOR"});
  SIG_CONTRATISTA_RNP.belongsTo(SIG_CONTRATISTAS, { as: "PROVEEDOR_SIG_CONTRATISTA", foreignKey: "PROVEEDOR"});
  SIG_CONTRATISTAS.hasMany(SIG_CONTRATISTA_RNP, { as: "SIG_CONTRATISTA_RNPs", foreignKey: "PROVEEDOR"});
  SIG_CONTRATOS.belongsTo(SIG_CONTRATISTAS, { as: "PROVEEDOR_SIG_CONTRATISTA", foreignKey: "PROVEEDOR"});
  SIG_CONTRATISTAS.hasMany(SIG_CONTRATOS, { as: "SIG_CONTRATOs", foreignKey: "PROVEEDOR"});
  SIG_CONVOCATORIA_INVITACION.belongsTo(SIG_CONTRATISTAS, { as: "PROVEEDOR_SIG_CONTRATISTA", foreignKey: "PROVEEDOR"});
  SIG_CONTRATISTAS.hasMany(SIG_CONVOCATORIA_INVITACION, { as: "SIG_CONVOCATORIA_INVITACIONs", foreignKey: "PROVEEDOR"});
  SIG_CUADRO_ADQUISICION.belongsTo(SIG_CONTRATISTAS, { as: "PROVEEDOR_SIG_CONTRATISTA", foreignKey: "PROVEEDOR"});
  SIG_CONTRATISTAS.hasMany(SIG_CUADRO_ADQUISICION, { as: "SIG_CUADRO_ADQUISICIONs", foreignKey: "PROVEEDOR"});
  SIG_MOVIM_ALMACEN.belongsTo(SIG_CONTRATISTAS, { as: "PROVEEDOR_SIG_CONTRATISTA", foreignKey: "PROVEEDOR"});
  SIG_CONTRATISTAS.hasMany(SIG_MOVIM_ALMACEN, { as: "SIG_MOVIM_ALMACENs", foreignKey: "PROVEEDOR"});
  SIG_ORDEN_ADQUISICION.belongsTo(SIG_CONTRATISTAS, { as: "PROVEEDOR_SIG_CONTRATISTA", foreignKey: "PROVEEDOR"});
  SIG_CONTRATISTAS.hasMany(SIG_ORDEN_ADQUISICION, { as: "SIG_ORDEN_ADQUISICIONs", foreignKey: "PROVEEDOR"});
  SIG_PATRIMONIO.belongsTo(SIG_CONTRATISTAS, { as: "PROVEEDOR_SIG_CONTRATISTA", foreignKey: "PROVEEDOR"});
  SIG_CONTRATISTAS.hasMany(SIG_PATRIMONIO, { as: "SIG_PATRIMONIOs", foreignKey: "PROVEEDOR"});
  SIG_PROPUESTA_PROVEEDOR.belongsTo(SIG_CONTRATISTAS, { as: "PROVEEDOR_SIG_CONTRATISTA", foreignKey: "PROVEEDOR"});
  SIG_CONTRATISTAS.hasMany(SIG_PROPUESTA_PROVEEDOR, { as: "SIG_PROPUESTA_PROVEEDORs", foreignKey: "PROVEEDOR"});
  SIG_SOLICITUD_COTIZACION.belongsTo(SIG_CONTRATISTAS, { as: "PROVEEDOR_SIG_CONTRATISTA", foreignKey: "PROVEEDOR"});
  SIG_CONTRATISTAS.hasMany(SIG_SOLICITUD_COTIZACION, { as: "SIG_SOLICITUD_COTIZACIONs", foreignKey: "PROVEEDOR"});
  SIG_CONTRATO_DET.belongsTo(SIG_CONTRATOS, { as: "ANO_EJE_SIG_CONTRATO", foreignKey: "ANO_EJE"});
  SIG_CONTRATOS.hasMany(SIG_CONTRATO_DET, { as: "SIG_CONTRATO_DETs", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_DET.belongsTo(SIG_CONTRATOS, { as: "NRO_CONTRATO_SIG_CONTRATO", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATOS.hasMany(SIG_CONTRATO_DET, { as: "NRO_CONTRATO_SIG_CONTRATO_DETs", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_DET.belongsTo(SIG_CONTRATOS, { as: "SEC_EJEC_SIG_CONTRATO", foreignKey: "SEC_EJEC"});
  SIG_CONTRATOS.hasMany(SIG_CONTRATO_DET, { as: "SEC_EJEC_SIG_CONTRATO_DETs", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_DET.belongsTo(SIG_CONTRATOS, { as: "TIPO_CONTRATO_SIG_CONTRATO", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATOS.hasMany(SIG_CONTRATO_DET, { as: "TIPO_CONTRATO_SIG_CONTRATO_DETs", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_DOCUMENTO.belongsTo(SIG_CONTRATOS, { as: "ANO_EJE_SIG_CONTRATO", foreignKey: "ANO_EJE"});
  SIG_CONTRATOS.hasMany(SIG_CONTRATO_DOCUMENTO, { as: "SIG_CONTRATO_DOCUMENTOs", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_DOCUMENTO.belongsTo(SIG_CONTRATOS, { as: "NRO_CONTRATO_SIG_CONTRATO", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATOS.hasMany(SIG_CONTRATO_DOCUMENTO, { as: "NRO_CONTRATO_SIG_CONTRATO_DOCUMENTOs", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_DOCUMENTO.belongsTo(SIG_CONTRATOS, { as: "SEC_EJEC_SIG_CONTRATO", foreignKey: "SEC_EJEC"});
  SIG_CONTRATOS.hasMany(SIG_CONTRATO_DOCUMENTO, { as: "SEC_EJEC_SIG_CONTRATO_DOCUMENTOs", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_DOCUMENTO.belongsTo(SIG_CONTRATOS, { as: "TIPO_CONTRATO_SIG_CONTRATO", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATOS.hasMany(SIG_CONTRATO_DOCUMENTO, { as: "TIPO_CONTRATO_SIG_CONTRATO_DOCUMENTOs", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_ITEM.belongsTo(SIG_CONTRATOS, { as: "SEC_EJEC_SIG_CONTRATO", foreignKey: "SEC_EJEC"});
  SIG_CONTRATOS.hasMany(SIG_CONTRATO_ITEM, { as: "SIG_CONTRATO_ITEMs", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_ITEM.belongsTo(SIG_CONTRATOS, { as: "ANO_EJE_SIG_CONTRATO", foreignKey: "ANO_EJE"});
  SIG_CONTRATOS.hasMany(SIG_CONTRATO_ITEM, { as: "ANO_EJE_SIG_CONTRATO_ITEMs", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_ITEM.belongsTo(SIG_CONTRATOS, { as: "NRO_CONTRATO_SIG_CONTRATO", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATOS.hasMany(SIG_CONTRATO_ITEM, { as: "NRO_CONTRATO_SIG_CONTRATO_ITEMs", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_ITEM.belongsTo(SIG_CONTRATOS, { as: "TIPO_CONTRATO_SIG_CONTRATO", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATOS.hasMany(SIG_CONTRATO_ITEM, { as: "TIPO_CONTRATO_SIG_CONTRATO_ITEMs", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_LOTE.belongsTo(SIG_CONTRATOS, { as: "NRO_CONTRATO_SIG_CONTRATO", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATOS.hasMany(SIG_CONTRATO_LOTE, { as: "SIG_CONTRATO_LOTEs", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_LOTE.belongsTo(SIG_CONTRATOS, { as: "TIPO_CONTRATO_SIG_CONTRATO", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATOS.hasMany(SIG_CONTRATO_LOTE, { as: "TIPO_CONTRATO_SIG_CONTRATO_LOTEs", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_MOVIMIENTO.belongsTo(SIG_CONTRATOS, { as: "ANO_EJE_SIG_CONTRATO", foreignKey: "ANO_EJE"});
  SIG_CONTRATOS.hasMany(SIG_CONTRATO_MOVIMIENTO, { as: "SIG_CONTRATO_MOVIMIENTOs", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_MOVIMIENTO.belongsTo(SIG_CONTRATOS, { as: "NRO_CONTRATO_SIG_CONTRATO", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATOS.hasMany(SIG_CONTRATO_MOVIMIENTO, { as: "NRO_CONTRATO_SIG_CONTRATO_MOVIMIENTOs", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_MOVIMIENTO.belongsTo(SIG_CONTRATOS, { as: "SEC_EJEC_SIG_CONTRATO", foreignKey: "SEC_EJEC"});
  SIG_CONTRATOS.hasMany(SIG_CONTRATO_MOVIMIENTO, { as: "SEC_EJEC_SIG_CONTRATO_MOVIMIENTOs", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_MOVIMIENTO.belongsTo(SIG_CONTRATOS, { as: "TIPO_CONTRATO_SIG_CONTRATO", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATOS.hasMany(SIG_CONTRATO_MOVIMIENTO, { as: "TIPO_CONTRATO_SIG_CONTRATO_MOVIMIENTOs", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_PENALIDAD_OTROS.belongsTo(SIG_CONTRATOS, { as: "ANO_EJE_SIG_CONTRATO", foreignKey: "ANO_EJE"});
  SIG_CONTRATOS.hasMany(SIG_CONTRATO_PENALIDAD_OTROS, { as: "SIG_CONTRATO_PENALIDAD_OTROs", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_PENALIDAD_OTROS.belongsTo(SIG_CONTRATOS, { as: "NRO_CONTRATO_SIG_CONTRATO", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATOS.hasMany(SIG_CONTRATO_PENALIDAD_OTROS, { as: "NRO_CONTRATO_SIG_CONTRATO_PENALIDAD_OTROs", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_PENALIDAD_OTROS.belongsTo(SIG_CONTRATOS, { as: "SEC_EJEC_SIG_CONTRATO", foreignKey: "SEC_EJEC"});
  SIG_CONTRATOS.hasMany(SIG_CONTRATO_PENALIDAD_OTROS, { as: "SEC_EJEC_SIG_CONTRATO_PENALIDAD_OTROs", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_PENALIDAD_OTROS.belongsTo(SIG_CONTRATOS, { as: "TIPO_CONTRATO_SIG_CONTRATO", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATOS.hasMany(SIG_CONTRATO_PENALIDAD_OTROS, { as: "TIPO_CONTRATO_SIG_CONTRATO_PENALIDAD_OTROs", foreignKey: "TIPO_CONTRATO"});
  SIG_MSG_DOCUMENTO.belongsTo(SIG_CONTRATOS, { as: "ANO_EJE_CONT_SIG_CONTRATO", foreignKey: "ANO_EJE_CONT"});
  SIG_CONTRATOS.hasMany(SIG_MSG_DOCUMENTO, { as: "SIG_MSG_DOCUMENTOs", foreignKey: "ANO_EJE_CONT"});
  SIG_MSG_DOCUMENTO.belongsTo(SIG_CONTRATOS, { as: "NRO_CONTRATO_SIG_CONTRATO", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATOS.hasMany(SIG_MSG_DOCUMENTO, { as: "NRO_CONTRATO_SIG_MSG_DOCUMENTOs", foreignKey: "NRO_CONTRATO"});
  SIG_MSG_DOCUMENTO.belongsTo(SIG_CONTRATOS, { as: "SEC_EJEC_CONT_SIG_CONTRATO", foreignKey: "SEC_EJEC_CONT"});
  SIG_CONTRATOS.hasMany(SIG_MSG_DOCUMENTO, { as: "SEC_EJEC_CONT_SIG_MSG_DOCUMENTOs", foreignKey: "SEC_EJEC_CONT"});
  SIG_MSG_DOCUMENTO.belongsTo(SIG_CONTRATOS, { as: "TIPO_CONTRATO_SIG_CONTRATO", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATOS.hasMany(SIG_MSG_DOCUMENTO, { as: "TIPO_CONTRATO_SIG_MSG_DOCUMENTOs", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_INTERFASE.belongsTo(SIG_CONTRATO_DET, { as: "ANO_EJE_SIG_CONTRATO_DET", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_DET.hasMany(SIG_CONTRATO_INTERFASE, { as: "SIG_CONTRATO_INTERFASEs", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_INTERFASE.belongsTo(SIG_CONTRATO_DET, { as: "ANO_PROCESO_SIG_CONTRATO_DET", foreignKey: "ANO_PROCESO"});
  SIG_CONTRATO_DET.hasMany(SIG_CONTRATO_INTERFASE, { as: "ANO_PROCESO_SIG_CONTRATO_INTERFASEs", foreignKey: "ANO_PROCESO"});
  SIG_CONTRATO_INTERFASE.belongsTo(SIG_CONTRATO_DET, { as: "NRO_CONTRATO_SIG_CONTRATO_DET", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_DET.hasMany(SIG_CONTRATO_INTERFASE, { as: "NRO_CONTRATO_SIG_CONTRATO_INTERFASEs", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_INTERFASE.belongsTo(SIG_CONTRATO_DET, { as: "SEC_EJEC_SIG_CONTRATO_DET", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_DET.hasMany(SIG_CONTRATO_INTERFASE, { as: "SEC_EJEC_SIG_CONTRATO_INTERFASEs", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_INTERFASE.belongsTo(SIG_CONTRATO_DET, { as: "TIPO_CONTRATO_SIG_CONTRATO_DET", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_DET.hasMany(SIG_CONTRATO_INTERFASE, { as: "TIPO_CONTRATO_SIG_CONTRATO_INTERFASEs", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_SECUENCIA.belongsTo(SIG_CONTRATO_DET, { as: "ANO_PROCESO_SIG_CONTRATO_DET", foreignKey: "ANO_PROCESO"});
  SIG_CONTRATO_DET.hasMany(SIG_CONTRATO_SECUENCIA, { as: "SIG_CONTRATO_SECUENCIa", foreignKey: "ANO_PROCESO"});
  SIG_CONTRATO_DET_DEPE.belongsTo(SIG_CONTRATO_DET_PPTAL, { as: "ANO_EJE_SIG_CONTRATO_DET_PPTAL", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_DET_PPTAL.hasMany(SIG_CONTRATO_DET_DEPE, { as: "SIG_CONTRATO_DET_DEPEs", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_DET_DEPE.belongsTo(SIG_CONTRATO_DET_PPTAL, { as: "ANO_PROCESO_SIG_CONTRATO_DET_PPTAL", foreignKey: "ANO_PROCESO"});
  SIG_CONTRATO_DET_PPTAL.hasMany(SIG_CONTRATO_DET_DEPE, { as: "ANO_PROCESO_SIG_CONTRATO_DET_DEPEs", foreignKey: "ANO_PROCESO"});
  SIG_CONTRATO_DET_DEPE.belongsTo(SIG_CONTRATO_DET_PPTAL, { as: "NRO_CONTRATO_SIG_CONTRATO_DET_PPTAL", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_DET_PPTAL.hasMany(SIG_CONTRATO_DET_DEPE, { as: "NRO_CONTRATO_SIG_CONTRATO_DET_DEPEs", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_DET_DEPE.belongsTo(SIG_CONTRATO_DET_PPTAL, { as: "SEC_DET_PPTAL_SIG_CONTRATO_DET_PPTAL", foreignKey: "SEC_DET_PPTAL"});
  SIG_CONTRATO_DET_PPTAL.hasMany(SIG_CONTRATO_DET_DEPE, { as: "SEC_DET_PPTAL_SIG_CONTRATO_DET_DEPEs", foreignKey: "SEC_DET_PPTAL"});
  SIG_CONTRATO_DET_DEPE.belongsTo(SIG_CONTRATO_DET_PPTAL, { as: "SEC_EJEC_SIG_CONTRATO_DET_PPTAL", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_DET_PPTAL.hasMany(SIG_CONTRATO_DET_DEPE, { as: "SEC_EJEC_SIG_CONTRATO_DET_DEPEs", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_DET_DEPE.belongsTo(SIG_CONTRATO_DET_PPTAL, { as: "SEC_FASE_SIG_CONTRATO_DET_PPTAL", foreignKey: "SEC_FASE"});
  SIG_CONTRATO_DET_PPTAL.hasMany(SIG_CONTRATO_DET_DEPE, { as: "SEC_FASE_SIG_CONTRATO_DET_DEPEs", foreignKey: "SEC_FASE"});
  SIG_CONTRATO_DET_DEPE.belongsTo(SIG_CONTRATO_DET_PPTAL, { as: "TIPO_CONTRATO_SIG_CONTRATO_DET_PPTAL", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_DET_PPTAL.hasMany(SIG_CONTRATO_DET_DEPE, { as: "TIPO_CONTRATO_SIG_CONTRATO_DET_DEPEs", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_GARANTIA_MOV.belongsTo(SIG_CONTRATO_DOCUMENTO, { as: "ANO_EJE_SIG_CONTRATO_DOCUMENTO", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_DOCUMENTO.hasMany(SIG_CONTRATO_GARANTIA_MOV, { as: "SIG_CONTRATO_GARANTIA_MOVs", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_GARANTIA_MOV.belongsTo(SIG_CONTRATO_DOCUMENTO, { as: "NRO_CONTRATO_SIG_CONTRATO_DOCUMENTO", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_DOCUMENTO.hasMany(SIG_CONTRATO_GARANTIA_MOV, { as: "NRO_CONTRATO_SIG_CONTRATO_GARANTIA_MOVs", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_GARANTIA_MOV.belongsTo(SIG_CONTRATO_DOCUMENTO, { as: "SEC_DOCUMENTO_SIG_CONTRATO_DOCUMENTO", foreignKey: "SEC_DOCUMENTO"});
  SIG_CONTRATO_DOCUMENTO.hasMany(SIG_CONTRATO_GARANTIA_MOV, { as: "SEC_DOCUMENTO_SIG_CONTRATO_GARANTIA_MOVs", foreignKey: "SEC_DOCUMENTO"});
  SIG_CONTRATO_GARANTIA_MOV.belongsTo(SIG_CONTRATO_DOCUMENTO, { as: "SEC_EJEC_SIG_CONTRATO_DOCUMENTO", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_DOCUMENTO.hasMany(SIG_CONTRATO_GARANTIA_MOV, { as: "SEC_EJEC_SIG_CONTRATO_GARANTIA_MOVs", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_GARANTIA_MOV.belongsTo(SIG_CONTRATO_DOCUMENTO, { as: "TIPO_CONTRATO_SIG_CONTRATO_DOCUMENTO", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_DOCUMENTO.hasMany(SIG_CONTRATO_GARANTIA_MOV, { as: "TIPO_CONTRATO_SIG_CONTRATO_GARANTIA_MOVs", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_ITEM_DETALLE.belongsTo(SIG_CONTRATO_ITEM, { as: "ANO_EJE_SIG_CONTRATO_ITEM", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_DETALLE, { as: "SIG_CONTRATO_ITEM_DETALLEs", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_ITEM_DETALLE.belongsTo(SIG_CONTRATO_ITEM, { as: "NRO_CONTRATO_SIG_CONTRATO_ITEM", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_DETALLE, { as: "NRO_CONTRATO_SIG_CONTRATO_ITEM_DETALLEs", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_ITEM_DETALLE.belongsTo(SIG_CONTRATO_ITEM, { as: "NRO_ITEM_SIG_CONTRATO_ITEM", foreignKey: "NRO_ITEM"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_DETALLE, { as: "NRO_ITEM_SIG_CONTRATO_ITEM_DETALLEs", foreignKey: "NRO_ITEM"});
  SIG_CONTRATO_ITEM_DETALLE.belongsTo(SIG_CONTRATO_ITEM, { as: "SEC_EJEC_SIG_CONTRATO_ITEM", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_DETALLE, { as: "SEC_EJEC_SIG_CONTRATO_ITEM_DETALLEs", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_ITEM_DETALLE.belongsTo(SIG_CONTRATO_ITEM, { as: "TIPO_CONTRATO_SIG_CONTRATO_ITEM", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_DETALLE, { as: "TIPO_CONTRATO_SIG_CONTRATO_ITEM_DETALLEs", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_ITEM_DIST.belongsTo(SIG_CONTRATO_ITEM, { as: "ANO_EJE_SIG_CONTRATO_ITEM", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_DIST, { as: "SIG_CONTRATO_ITEM_DISTs", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_ITEM_DIST.belongsTo(SIG_CONTRATO_ITEM, { as: "NRO_CONTRATO_SIG_CONTRATO_ITEM", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_DIST, { as: "NRO_CONTRATO_SIG_CONTRATO_ITEM_DISTs", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_ITEM_DIST.belongsTo(SIG_CONTRATO_ITEM, { as: "NRO_ITEM_SIG_CONTRATO_ITEM", foreignKey: "NRO_ITEM"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_DIST, { as: "NRO_ITEM_SIG_CONTRATO_ITEM_DISTs", foreignKey: "NRO_ITEM"});
  SIG_CONTRATO_ITEM_DIST.belongsTo(SIG_CONTRATO_ITEM, { as: "SEC_EJEC_SIG_CONTRATO_ITEM", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_DIST, { as: "SEC_EJEC_SIG_CONTRATO_ITEM_DISTs", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_ITEM_DIST.belongsTo(SIG_CONTRATO_ITEM, { as: "TIPO_CONTRATO_SIG_CONTRATO_ITEM", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_DIST, { as: "TIPO_CONTRATO_SIG_CONTRATO_ITEM_DISTs", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_ITEM_MENSUAL.belongsTo(SIG_CONTRATO_ITEM, { as: "ANO_EJE_SIG_CONTRATO_ITEM", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_MENSUAL, { as: "SIG_CONTRATO_ITEM_MENSUALs", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_ITEM_MENSUAL.belongsTo(SIG_CONTRATO_ITEM, { as: "NRO_CONTRATO_SIG_CONTRATO_ITEM", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_MENSUAL, { as: "NRO_CONTRATO_SIG_CONTRATO_ITEM_MENSUALs", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_ITEM_MENSUAL.belongsTo(SIG_CONTRATO_ITEM, { as: "NRO_ITEM_SIG_CONTRATO_ITEM", foreignKey: "NRO_ITEM"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_MENSUAL, { as: "NRO_ITEM_SIG_CONTRATO_ITEM_MENSUALs", foreignKey: "NRO_ITEM"});
  SIG_CONTRATO_ITEM_MENSUAL.belongsTo(SIG_CONTRATO_ITEM, { as: "SEC_EJEC_SIG_CONTRATO_ITEM", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_MENSUAL, { as: "SEC_EJEC_SIG_CONTRATO_ITEM_MENSUALs", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_ITEM_MENSUAL.belongsTo(SIG_CONTRATO_ITEM, { as: "TIPO_CONTRATO_SIG_CONTRATO_ITEM", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_MENSUAL, { as: "TIPO_CONTRATO_SIG_CONTRATO_ITEM_MENSUALs", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_ITEM_PPTAL.belongsTo(SIG_CONTRATO_ITEM, { as: "ANO_EJE_SIG_CONTRATO_ITEM", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_PPTAL, { as: "SIG_CONTRATO_ITEM_PPTALs", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_ITEM_PPTAL.belongsTo(SIG_CONTRATO_ITEM, { as: "NRO_CONTRATO_SIG_CONTRATO_ITEM", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_PPTAL, { as: "NRO_CONTRATO_SIG_CONTRATO_ITEM_PPTALs", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_ITEM_PPTAL.belongsTo(SIG_CONTRATO_ITEM, { as: "NRO_ITEM_SIG_CONTRATO_ITEM", foreignKey: "NRO_ITEM"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_PPTAL, { as: "NRO_ITEM_SIG_CONTRATO_ITEM_PPTALs", foreignKey: "NRO_ITEM"});
  SIG_CONTRATO_ITEM_PPTAL.belongsTo(SIG_CONTRATO_ITEM, { as: "SEC_EJEC_SIG_CONTRATO_ITEM", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_PPTAL, { as: "SEC_EJEC_SIG_CONTRATO_ITEM_PPTALs", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_ITEM_PPTAL.belongsTo(SIG_CONTRATO_ITEM, { as: "TIPO_CONTRATO_SIG_CONTRATO_ITEM", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_PPTAL, { as: "TIPO_CONTRATO_SIG_CONTRATO_ITEM_PPTALs", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_ITEM_SECUENCIA.belongsTo(SIG_CONTRATO_ITEM, { as: "SEC_EJEC_SIG_CONTRATO_ITEM", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_SECUENCIA, { as: "SIG_CONTRATO_ITEM_SECUENCIa", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_ITEM_SECUENCIA.belongsTo(SIG_CONTRATO_ITEM, { as: "ANO_EJE_SIG_CONTRATO_ITEM", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_SECUENCIA, { as: "ANO_EJE_SIG_CONTRATO_ITEM_SECUENCIa", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_ITEM_SECUENCIA.belongsTo(SIG_CONTRATO_ITEM, { as: "NRO_CONTRATO_SIG_CONTRATO_ITEM", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_SECUENCIA, { as: "NRO_CONTRATO_SIG_CONTRATO_ITEM_SECUENCIa", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_ITEM_SECUENCIA.belongsTo(SIG_CONTRATO_ITEM, { as: "NRO_ITEM_SIG_CONTRATO_ITEM", foreignKey: "NRO_ITEM"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_SECUENCIA, { as: "NRO_ITEM_SIG_CONTRATO_ITEM_SECUENCIa", foreignKey: "NRO_ITEM"});
  SIG_CONTRATO_ITEM_SECUENCIA.belongsTo(SIG_CONTRATO_ITEM, { as: "TIPO_CONTRATO_SIG_CONTRATO_ITEM", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_ITEM.hasMany(SIG_CONTRATO_ITEM_SECUENCIA, { as: "TIPO_CONTRATO_SIG_CONTRATO_ITEM_SECUENCIa", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_ITEM_DIST_CC.belongsTo(SIG_CONTRATO_ITEM_DIST, { as: "ANO_EJE_SIG_CONTRATO_ITEM_DIST", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_ITEM_DIST.hasMany(SIG_CONTRATO_ITEM_DIST_CC, { as: "SIG_CONTRATO_ITEM_DIST_CCs", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_ITEM_DIST_CC.belongsTo(SIG_CONTRATO_ITEM_DIST, { as: "ANO_PROGRAMACION_SIG_CONTRATO_ITEM_DIST", foreignKey: "ANO_PROGRAMACION"});
  SIG_CONTRATO_ITEM_DIST.hasMany(SIG_CONTRATO_ITEM_DIST_CC, { as: "ANO_PROGRAMACION_SIG_CONTRATO_ITEM_DIST_CCs", foreignKey: "ANO_PROGRAMACION"});
  SIG_CONTRATO_ITEM_DIST_CC.belongsTo(SIG_CONTRATO_ITEM_DIST, { as: "FASE_CUADRO_SIG_CONTRATO_ITEM_DIST", foreignKey: "FASE_CUADRO"});
  SIG_CONTRATO_ITEM_DIST.hasMany(SIG_CONTRATO_ITEM_DIST_CC, { as: "FASE_CUADRO_SIG_CONTRATO_ITEM_DIST_CCs", foreignKey: "FASE_CUADRO"});
  SIG_CONTRATO_ITEM_DIST_CC.belongsTo(SIG_CONTRATO_ITEM_DIST, { as: "NRO_CONTRATO_SIG_CONTRATO_ITEM_DIST", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_ITEM_DIST.hasMany(SIG_CONTRATO_ITEM_DIST_CC, { as: "NRO_CONTRATO_SIG_CONTRATO_ITEM_DIST_CCs", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_ITEM_DIST_CC.belongsTo(SIG_CONTRATO_ITEM_DIST, { as: "NRO_ITEM_SIG_CONTRATO_ITEM_DIST", foreignKey: "NRO_ITEM"});
  SIG_CONTRATO_ITEM_DIST.hasMany(SIG_CONTRATO_ITEM_DIST_CC, { as: "NRO_ITEM_SIG_CONTRATO_ITEM_DIST_CCs", foreignKey: "NRO_ITEM"});
  SIG_CONTRATO_ITEM_DIST_CC.belongsTo(SIG_CONTRATO_ITEM_DIST, { as: "SEC_EJEC_SIG_CONTRATO_ITEM_DIST", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_ITEM_DIST.hasMany(SIG_CONTRATO_ITEM_DIST_CC, { as: "SEC_EJEC_SIG_CONTRATO_ITEM_DIST_CCs", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_ITEM_DIST_CC.belongsTo(SIG_CONTRATO_ITEM_DIST, { as: "SEC_ITEM_DIST_SIG_CONTRATO_ITEM_DIST", foreignKey: "SEC_ITEM_DIST"});
  SIG_CONTRATO_ITEM_DIST.hasMany(SIG_CONTRATO_ITEM_DIST_CC, { as: "SEC_ITEM_DIST_SIG_CONTRATO_ITEM_DIST_CCs", foreignKey: "SEC_ITEM_DIST"});
  SIG_CONTRATO_ITEM_DIST_CC.belongsTo(SIG_CONTRATO_ITEM_DIST, { as: "TIPO_CONTRATO_SIG_CONTRATO_ITEM_DIST", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_ITEM_DIST.hasMany(SIG_CONTRATO_ITEM_DIST_CC, { as: "TIPO_CONTRATO_SIG_CONTRATO_ITEM_DIST_CCs", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_ITEM_MENS_PPTAL.belongsTo(SIG_CONTRATO_ITEM_MENSUAL, { as: "ANO_EJE_SIG_CONTRATO_ITEM_MENSUAL", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_ITEM_MENSUAL.hasMany(SIG_CONTRATO_ITEM_MENS_PPTAL, { as: "SIG_CONTRATO_ITEM_MENS_PPTALs", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_ITEM_MENS_PPTAL.belongsTo(SIG_CONTRATO_ITEM_MENSUAL, { as: "NRO_CONTRATO_SIG_CONTRATO_ITEM_MENSUAL", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_ITEM_MENSUAL.hasMany(SIG_CONTRATO_ITEM_MENS_PPTAL, { as: "NRO_CONTRATO_SIG_CONTRATO_ITEM_MENS_PPTALs", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_ITEM_MENS_PPTAL.belongsTo(SIG_CONTRATO_ITEM_MENSUAL, { as: "NRO_ITEM_SIG_CONTRATO_ITEM_MENSUAL", foreignKey: "NRO_ITEM"});
  SIG_CONTRATO_ITEM_MENSUAL.hasMany(SIG_CONTRATO_ITEM_MENS_PPTAL, { as: "NRO_ITEM_SIG_CONTRATO_ITEM_MENS_PPTALs", foreignKey: "NRO_ITEM"});
  SIG_CONTRATO_ITEM_MENS_PPTAL.belongsTo(SIG_CONTRATO_ITEM_MENSUAL, { as: "SEC_EJEC_SIG_CONTRATO_ITEM_MENSUAL", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_ITEM_MENSUAL.hasMany(SIG_CONTRATO_ITEM_MENS_PPTAL, { as: "SEC_EJEC_SIG_CONTRATO_ITEM_MENS_PPTALs", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_ITEM_MENS_PPTAL.belongsTo(SIG_CONTRATO_ITEM_MENSUAL, { as: "SEC_PERIODO_SIG_CONTRATO_ITEM_MENSUAL", foreignKey: "SEC_PERIODO"});
  SIG_CONTRATO_ITEM_MENSUAL.hasMany(SIG_CONTRATO_ITEM_MENS_PPTAL, { as: "SEC_PERIODO_SIG_CONTRATO_ITEM_MENS_PPTALs", foreignKey: "SEC_PERIODO"});
  SIG_CONTRATO_ITEM_MENS_PPTAL.belongsTo(SIG_CONTRATO_ITEM_MENSUAL, { as: "TIPO_CONTRATO_SIG_CONTRATO_ITEM_MENSUAL", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_ITEM_MENSUAL.hasMany(SIG_CONTRATO_ITEM_MENS_PPTAL, { as: "TIPO_CONTRATO_SIG_CONTRATO_ITEM_MENS_PPTALs", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_ITEM_MENS_DEPE.belongsTo(SIG_CONTRATO_ITEM_MENS_PPTAL, { as: "ANO_EJE_SIG_CONTRATO_ITEM_MENS_PPTAL", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_ITEM_MENS_PPTAL.hasMany(SIG_CONTRATO_ITEM_MENS_DEPE, { as: "SIG_CONTRATO_ITEM_MENS_DEPEs", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_ITEM_MENS_DEPE.belongsTo(SIG_CONTRATO_ITEM_MENS_PPTAL, { as: "NRO_CONTRATO_SIG_CONTRATO_ITEM_MENS_PPTAL", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_ITEM_MENS_PPTAL.hasMany(SIG_CONTRATO_ITEM_MENS_DEPE, { as: "NRO_CONTRATO_SIG_CONTRATO_ITEM_MENS_DEPEs", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_ITEM_MENS_DEPE.belongsTo(SIG_CONTRATO_ITEM_MENS_PPTAL, { as: "NRO_ITEM_SIG_CONTRATO_ITEM_MENS_PPTAL", foreignKey: "NRO_ITEM"});
  SIG_CONTRATO_ITEM_MENS_PPTAL.hasMany(SIG_CONTRATO_ITEM_MENS_DEPE, { as: "NRO_ITEM_SIG_CONTRATO_ITEM_MENS_DEPEs", foreignKey: "NRO_ITEM"});
  SIG_CONTRATO_ITEM_MENS_DEPE.belongsTo(SIG_CONTRATO_ITEM_MENS_PPTAL, { as: "SEC_EJEC_SIG_CONTRATO_ITEM_MENS_PPTAL", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_ITEM_MENS_PPTAL.hasMany(SIG_CONTRATO_ITEM_MENS_DEPE, { as: "SEC_EJEC_SIG_CONTRATO_ITEM_MENS_DEPEs", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_ITEM_MENS_DEPE.belongsTo(SIG_CONTRATO_ITEM_MENS_PPTAL, { as: "SEC_PERIODO_SIG_CONTRATO_ITEM_MENS_PPTAL", foreignKey: "SEC_PERIODO"});
  SIG_CONTRATO_ITEM_MENS_PPTAL.hasMany(SIG_CONTRATO_ITEM_MENS_DEPE, { as: "SEC_PERIODO_SIG_CONTRATO_ITEM_MENS_DEPEs", foreignKey: "SEC_PERIODO"});
  SIG_CONTRATO_ITEM_MENS_DEPE.belongsTo(SIG_CONTRATO_ITEM_MENS_PPTAL, { as: "SEC_PPTO_SIG_CONTRATO_ITEM_MENS_PPTAL", foreignKey: "SEC_PPTO"});
  SIG_CONTRATO_ITEM_MENS_PPTAL.hasMany(SIG_CONTRATO_ITEM_MENS_DEPE, { as: "SEC_PPTO_SIG_CONTRATO_ITEM_MENS_DEPEs", foreignKey: "SEC_PPTO"});
  SIG_CONTRATO_ITEM_MENS_DEPE.belongsTo(SIG_CONTRATO_ITEM_MENS_PPTAL, { as: "TIPO_CONTRATO_SIG_CONTRATO_ITEM_MENS_PPTAL", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_ITEM_MENS_PPTAL.hasMany(SIG_CONTRATO_ITEM_MENS_DEPE, { as: "TIPO_CONTRATO_SIG_CONTRATO_ITEM_MENS_DEPEs", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_MOVIM_ITEM.belongsTo(SIG_CONTRATO_MOVIMIENTO, { as: "ANO_EJE_SIG_CONTRATO_MOVIMIENTO", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_MOVIMIENTO.hasMany(SIG_CONTRATO_MOVIM_ITEM, { as: "SIG_CONTRATO_MOVIM_ITEMs", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_MOVIM_ITEM.belongsTo(SIG_CONTRATO_MOVIMIENTO, { as: "NRO_CONTRATO_SIG_CONTRATO_MOVIMIENTO", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_MOVIMIENTO.hasMany(SIG_CONTRATO_MOVIM_ITEM, { as: "NRO_CONTRATO_SIG_CONTRATO_MOVIM_ITEMs", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_MOVIM_ITEM.belongsTo(SIG_CONTRATO_MOVIMIENTO, { as: "SEC_EJEC_SIG_CONTRATO_MOVIMIENTO", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_MOVIMIENTO.hasMany(SIG_CONTRATO_MOVIM_ITEM, { as: "SEC_EJEC_SIG_CONTRATO_MOVIM_ITEMs", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_MOVIM_ITEM.belongsTo(SIG_CONTRATO_MOVIMIENTO, { as: "SEC_MOVIMIENTO_SIG_CONTRATO_MOVIMIENTO", foreignKey: "SEC_MOVIMIENTO"});
  SIG_CONTRATO_MOVIMIENTO.hasMany(SIG_CONTRATO_MOVIM_ITEM, { as: "SEC_MOVIMIENTO_SIG_CONTRATO_MOVIM_ITEMs", foreignKey: "SEC_MOVIMIENTO"});
  SIG_CONTRATO_MOVIM_ITEM.belongsTo(SIG_CONTRATO_MOVIMIENTO, { as: "TIPO_CONTRATO_SIG_CONTRATO_MOVIMIENTO", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_MOVIMIENTO.hasMany(SIG_CONTRATO_MOVIM_ITEM, { as: "TIPO_CONTRATO_SIG_CONTRATO_MOVIM_ITEMs", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_MOVIM_PAGO.belongsTo(SIG_CONTRATO_MOVIMIENTO, { as: "ANO_EJE_SIG_CONTRATO_MOVIMIENTO", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_MOVIMIENTO.hasMany(SIG_CONTRATO_MOVIM_PAGO, { as: "SIG_CONTRATO_MOVIM_PAGOs", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_MOVIM_PAGO.belongsTo(SIG_CONTRATO_MOVIMIENTO, { as: "SEC_EJEC_SIG_CONTRATO_MOVIMIENTO", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_MOVIMIENTO.hasMany(SIG_CONTRATO_MOVIM_PAGO, { as: "SEC_EJEC_SIG_CONTRATO_MOVIM_PAGOs", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_MOVIM_PAGO.belongsTo(SIG_CONTRATO_MOVIMIENTO, { as: "NRO_CONTRATO_SIG_CONTRATO_MOVIMIENTO", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_MOVIMIENTO.hasMany(SIG_CONTRATO_MOVIM_PAGO, { as: "NRO_CONTRATO_SIG_CONTRATO_MOVIM_PAGOs", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_MOVIM_PAGO.belongsTo(SIG_CONTRATO_MOVIMIENTO, { as: "SEC_MOVIMIENTO_SIG_CONTRATO_MOVIMIENTO", foreignKey: "SEC_MOVIMIENTO"});
  SIG_CONTRATO_MOVIMIENTO.hasMany(SIG_CONTRATO_MOVIM_PAGO, { as: "SEC_MOVIMIENTO_SIG_CONTRATO_MOVIM_PAGOs", foreignKey: "SEC_MOVIMIENTO"});
  SIG_CONTRATO_MOVIM_PAGO.belongsTo(SIG_CONTRATO_MOVIMIENTO, { as: "TIPO_CONTRATO_SIG_CONTRATO_MOVIMIENTO", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_MOVIMIENTO.hasMany(SIG_CONTRATO_MOVIM_PAGO, { as: "TIPO_CONTRATO_SIG_CONTRATO_MOVIM_PAGOs", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_MOVITEM_PPTAL.belongsTo(SIG_CONTRATO_MOVIM_ITEM, { as: "ANO_EJE_SIG_CONTRATO_MOVIM_ITEM", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_MOVIM_ITEM.hasMany(SIG_CONTRATO_MOVITEM_PPTAL, { as: "SIG_CONTRATO_MOVITEM_PPTALs", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_MOVITEM_PPTAL.belongsTo(SIG_CONTRATO_MOVIM_ITEM, { as: "ANO_PROCESO_SIG_CONTRATO_MOVIM_ITEM", foreignKey: "ANO_PROCESO"});
  SIG_CONTRATO_MOVIM_ITEM.hasMany(SIG_CONTRATO_MOVITEM_PPTAL, { as: "ANO_PROCESO_SIG_CONTRATO_MOVITEM_PPTALs", foreignKey: "ANO_PROCESO"});
  SIG_CONTRATO_MOVITEM_PPTAL.belongsTo(SIG_CONTRATO_MOVIM_ITEM, { as: "NRO_CONTRATO_SIG_CONTRATO_MOVIM_ITEM", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_MOVIM_ITEM.hasMany(SIG_CONTRATO_MOVITEM_PPTAL, { as: "NRO_CONTRATO_SIG_CONTRATO_MOVITEM_PPTALs", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_MOVITEM_PPTAL.belongsTo(SIG_CONTRATO_MOVIM_ITEM, { as: "NRO_ITEM_SIG_CONTRATO_MOVIM_ITEM", foreignKey: "NRO_ITEM"});
  SIG_CONTRATO_MOVIM_ITEM.hasMany(SIG_CONTRATO_MOVITEM_PPTAL, { as: "NRO_ITEM_SIG_CONTRATO_MOVITEM_PPTALs", foreignKey: "NRO_ITEM"});
  SIG_CONTRATO_MOVITEM_PPTAL.belongsTo(SIG_CONTRATO_MOVIM_ITEM, { as: "SEC_MOVIMIENTO_SIG_CONTRATO_MOVIM_ITEM", foreignKey: "SEC_MOVIMIENTO"});
  SIG_CONTRATO_MOVIM_ITEM.hasMany(SIG_CONTRATO_MOVITEM_PPTAL, { as: "SEC_MOVIMIENTO_SIG_CONTRATO_MOVITEM_PPTALs", foreignKey: "SEC_MOVIMIENTO"});
  SIG_CONTRATO_MOVITEM_PPTAL.belongsTo(SIG_CONTRATO_MOVIM_ITEM, { as: "TIPO_CONTRATO_SIG_CONTRATO_MOVIM_ITEM", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_MOVIM_ITEM.hasMany(SIG_CONTRATO_MOVITEM_PPTAL, { as: "TIPO_CONTRATO_SIG_CONTRATO_MOVITEM_PPTALs", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_DET_PPTAL.belongsTo(SIG_CONTRATO_SECUENCIA, { as: "ANO_EJE_SIG_CONTRATO_SECUENCIum", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_SECUENCIA.hasMany(SIG_CONTRATO_DET_PPTAL, { as: "SIG_CONTRATO_DET_PPTALs", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_DET_PPTAL.belongsTo(SIG_CONTRATO_SECUENCIA, { as: "ANO_PROCESO_SIG_CONTRATO_SECUENCIum", foreignKey: "ANO_PROCESO"});
  SIG_CONTRATO_SECUENCIA.hasMany(SIG_CONTRATO_DET_PPTAL, { as: "ANO_PROCESO_SIG_CONTRATO_DET_PPTALs", foreignKey: "ANO_PROCESO"});
  SIG_CONTRATO_DET_PPTAL.belongsTo(SIG_CONTRATO_SECUENCIA, { as: "NRO_CONTRATO_SIG_CONTRATO_SECUENCIum", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_SECUENCIA.hasMany(SIG_CONTRATO_DET_PPTAL, { as: "NRO_CONTRATO_SIG_CONTRATO_DET_PPTALs", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_DET_PPTAL.belongsTo(SIG_CONTRATO_SECUENCIA, { as: "SEC_EJEC_SIG_CONTRATO_SECUENCIum", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_SECUENCIA.hasMany(SIG_CONTRATO_DET_PPTAL, { as: "SEC_EJEC_SIG_CONTRATO_DET_PPTALs", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_DET_PPTAL.belongsTo(SIG_CONTRATO_SECUENCIA, { as: "SEC_FASE_SIG_CONTRATO_SECUENCIum", foreignKey: "SEC_FASE"});
  SIG_CONTRATO_SECUENCIA.hasMany(SIG_CONTRATO_DET_PPTAL, { as: "SEC_FASE_SIG_CONTRATO_DET_PPTALs", foreignKey: "SEC_FASE"});
  SIG_CONTRATO_DET_PPTAL.belongsTo(SIG_CONTRATO_SECUENCIA, { as: "TIPO_CONTRATO_SIG_CONTRATO_SECUENCIum", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_SECUENCIA.hasMany(SIG_CONTRATO_DET_PPTAL, { as: "TIPO_CONTRATO_SIG_CONTRATO_DET_PPTALs", foreignKey: "TIPO_CONTRATO"});
  SIG_ENCARGO_REQ.belongsTo(SIG_CONVENIO, { as: "ANO_EJE_SIG_CONVENIO", foreignKey: "ANO_EJE"});
  SIG_CONVENIO.hasMany(SIG_ENCARGO_REQ, { as: "SIG_ENCARGO_REQs", foreignKey: "ANO_EJE"});
  SIG_ENCARGO_REQ.belongsTo(SIG_CONVENIO, { as: "NRO_CONVENIO_SIG_CONVENIO", foreignKey: "NRO_CONVENIO"});
  SIG_CONVENIO.hasMany(SIG_ENCARGO_REQ, { as: "NRO_CONVENIO_SIG_ENCARGO_REQs", foreignKey: "NRO_CONVENIO"});
  SIG_ENCARGO_REQ.belongsTo(SIG_CONVENIO, { as: "ROL_ENCARGO_SIG_CONVENIO", foreignKey: "ROL_ENCARGO"});
  SIG_CONVENIO.hasMany(SIG_ENCARGO_REQ, { as: "ROL_ENCARGO_SIG_ENCARGO_REQs", foreignKey: "ROL_ENCARGO"});
  SIG_ENCARGO_REQ.belongsTo(SIG_CONVENIO, { as: "SEC_EJEC_SIG_CONVENIO", foreignKey: "SEC_EJEC"});
  SIG_CONVENIO.hasMany(SIG_ENCARGO_REQ, { as: "SEC_EJEC_SIG_ENCARGO_REQs", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_CALENDA_CAB.belongsTo(SIG_CONVOCATORIA, { as: "ANO_EJE_SIG_CONVOCATORIum", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_CALENDA_CAB, { as: "SIG_CONVOCATORIA_CALENDA_CABs", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA_CALENDA_CAB.belongsTo(SIG_CONVOCATORIA, { as: "CONVOCATORIA_SIG_CONVOCATORIum", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_CALENDA_CAB, { as: "CONVOCATORIA_SIG_CONVOCATORIA_CALENDA_CABs", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_CALENDA_CAB.belongsTo(SIG_CONVOCATORIA, { as: "PROCESO_SIG_CONVOCATORIum", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_CALENDA_CAB, { as: "PROCESO_SIG_CONVOCATORIA_CALENDA_CABs", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_CALENDA_CAB.belongsTo(SIG_CONVOCATORIA, { as: "SEC_EJEC_SIG_CONVOCATORIum", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_CALENDA_CAB, { as: "SEC_EJEC_SIG_CONVOCATORIA_CALENDA_CABs", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_CALENDA_CAB.belongsTo(SIG_CONVOCATORIA, { as: "SEC_PROCESO_SIG_CONVOCATORIum", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_CALENDA_CAB, { as: "SEC_PROCESO_SIG_CONVOCATORIA_CALENDA_CABs", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_CALENDA_CAB.belongsTo(SIG_CONVOCATORIA, { as: "TIPO_GENERACION_SIG_CONVOCATORIum", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_CALENDA_CAB, { as: "TIPO_GENERACION_SIG_CONVOCATORIA_CALENDA_CABs", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA_FACTOR.belongsTo(SIG_CONVOCATORIA, { as: "ANO_EJE_SIG_CONVOCATORIum", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_FACTOR, { as: "SIG_CONVOCATORIA_FACTORs", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA_FACTOR.belongsTo(SIG_CONVOCATORIA, { as: "CONVOCATORIA_SIG_CONVOCATORIum", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_FACTOR, { as: "CONVOCATORIA_SIG_CONVOCATORIA_FACTORs", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_FACTOR.belongsTo(SIG_CONVOCATORIA, { as: "PROCESO_SIG_CONVOCATORIum", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_FACTOR, { as: "PROCESO_SIG_CONVOCATORIA_FACTORs", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_FACTOR.belongsTo(SIG_CONVOCATORIA, { as: "SEC_EJEC_SIG_CONVOCATORIum", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_FACTOR, { as: "SEC_EJEC_SIG_CONVOCATORIA_FACTORs", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_FACTOR.belongsTo(SIG_CONVOCATORIA, { as: "SEC_PROCESO_SIG_CONVOCATORIum", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_FACTOR, { as: "SEC_PROCESO_SIG_CONVOCATORIA_FACTORs", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_FACTOR.belongsTo(SIG_CONVOCATORIA, { as: "TIPO_GENERACION_SIG_CONVOCATORIum", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_FACTOR, { as: "TIPO_GENERACION_SIG_CONVOCATORIA_FACTORs", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA_INVITACION.belongsTo(SIG_CONVOCATORIA, { as: "ANO_EJE_SIG_CONVOCATORIum", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_INVITACION, { as: "SIG_CONVOCATORIA_INVITACIONs", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA_INVITACION.belongsTo(SIG_CONVOCATORIA, { as: "CONVOCATORIA_SIG_CONVOCATORIum", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_INVITACION, { as: "CONVOCATORIA_SIG_CONVOCATORIA_INVITACIONs", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_INVITACION.belongsTo(SIG_CONVOCATORIA, { as: "PROCESO_SIG_CONVOCATORIum", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_INVITACION, { as: "PROCESO_SIG_CONVOCATORIA_INVITACIONs", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_INVITACION.belongsTo(SIG_CONVOCATORIA, { as: "SEC_EJEC_SIG_CONVOCATORIum", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_INVITACION, { as: "SEC_EJEC_SIG_CONVOCATORIA_INVITACIONs", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_INVITACION.belongsTo(SIG_CONVOCATORIA, { as: "SEC_PROCESO_SIG_CONVOCATORIum", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_INVITACION, { as: "SEC_PROCESO_SIG_CONVOCATORIA_INVITACIONs", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_INVITACION.belongsTo(SIG_CONVOCATORIA, { as: "TIPO_GENERACION_SIG_CONVOCATORIum", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_INVITACION, { as: "TIPO_GENERACION_SIG_CONVOCATORIA_INVITACIONs", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA_INV_CONDICION.belongsTo(SIG_CONVOCATORIA, { as: "ANO_EJE_SIG_CONVOCATORIum", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_INV_CONDICION, { as: "SIG_CONVOCATORIA_INV_CONDICIONs", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA_INV_CONDICION.belongsTo(SIG_CONVOCATORIA, { as: "CONVOCATORIA_SIG_CONVOCATORIum", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_INV_CONDICION, { as: "CONVOCATORIA_SIG_CONVOCATORIA_INV_CONDICIONs", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_INV_CONDICION.belongsTo(SIG_CONVOCATORIA, { as: "PROCESO_SIG_CONVOCATORIum", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_INV_CONDICION, { as: "PROCESO_SIG_CONVOCATORIA_INV_CONDICIONs", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_INV_CONDICION.belongsTo(SIG_CONVOCATORIA, { as: "SEC_EJEC_SIG_CONVOCATORIum", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_INV_CONDICION, { as: "SEC_EJEC_SIG_CONVOCATORIA_INV_CONDICIONs", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_INV_CONDICION.belongsTo(SIG_CONVOCATORIA, { as: "SEC_PROCESO_SIG_CONVOCATORIum", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_INV_CONDICION, { as: "SEC_PROCESO_SIG_CONVOCATORIA_INV_CONDICIONs", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_INV_CONDICION.belongsTo(SIG_CONVOCATORIA, { as: "TIPO_GENERACION_SIG_CONVOCATORIum", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_INV_CONDICION, { as: "TIPO_GENERACION_SIG_CONVOCATORIA_INV_CONDICIONs", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA_ITEM.belongsTo(SIG_CONVOCATORIA, { as: "SEC_EJEC_SIG_CONVOCATORIum", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_ITEM, { as: "SIG_CONVOCATORIA_ITEMs", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_ITEM.belongsTo(SIG_CONVOCATORIA, { as: "ANO_EJE_SIG_CONVOCATORIum", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_ITEM, { as: "ANO_EJE_SIG_CONVOCATORIA_ITEMs", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA_ITEM.belongsTo(SIG_CONVOCATORIA, { as: "CONVOCATORIA_SIG_CONVOCATORIum", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_ITEM, { as: "CONVOCATORIA_SIG_CONVOCATORIA_ITEMs", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_ITEM.belongsTo(SIG_CONVOCATORIA, { as: "PROCESO_SIG_CONVOCATORIum", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_ITEM, { as: "PROCESO_SIG_CONVOCATORIA_ITEMs", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_ITEM.belongsTo(SIG_CONVOCATORIA, { as: "SEC_PROCESO_SIG_CONVOCATORIum", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_ITEM, { as: "SEC_PROCESO_SIG_CONVOCATORIA_ITEMs", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_ITEM.belongsTo(SIG_CONVOCATORIA, { as: "TIPO_GENERACION_SIG_CONVOCATORIum", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_ITEM, { as: "TIPO_GENERACION_SIG_CONVOCATORIA_ITEMs", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA_LOTE.belongsTo(SIG_CONVOCATORIA, { as: "ANO_EJE_SIG_CONVOCATORIum", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_LOTE, { as: "SIG_CONVOCATORIA_LOTEs", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA_LOTE.belongsTo(SIG_CONVOCATORIA, { as: "CONVOCATORIA_SIG_CONVOCATORIum", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_LOTE, { as: "CONVOCATORIA_SIG_CONVOCATORIA_LOTEs", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_LOTE.belongsTo(SIG_CONVOCATORIA, { as: "PROCESO_SIG_CONVOCATORIum", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_LOTE, { as: "PROCESO_SIG_CONVOCATORIA_LOTEs", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_LOTE.belongsTo(SIG_CONVOCATORIA, { as: "SEC_EJEC_SIG_CONVOCATORIum", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_LOTE, { as: "SEC_EJEC_SIG_CONVOCATORIA_LOTEs", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_LOTE.belongsTo(SIG_CONVOCATORIA, { as: "SEC_PROCESO_SIG_CONVOCATORIum", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_LOTE, { as: "SEC_PROCESO_SIG_CONVOCATORIA_LOTEs", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_LOTE.belongsTo(SIG_CONVOCATORIA, { as: "TIPO_GENERACION_SIG_CONVOCATORIum", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_LOTE, { as: "TIPO_GENERACION_SIG_CONVOCATORIA_LOTEs", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA_REQUISITOS.belongsTo(SIG_CONVOCATORIA, { as: "ANO_EJE_SIG_CONVOCATORIum", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_REQUISITOS, { as: "SIG_CONVOCATORIA_REQUISITOs", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA_REQUISITOS.belongsTo(SIG_CONVOCATORIA, { as: "CONVOCATORIA_SIG_CONVOCATORIum", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_REQUISITOS, { as: "CONVOCATORIA_SIG_CONVOCATORIA_REQUISITOs", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_REQUISITOS.belongsTo(SIG_CONVOCATORIA, { as: "PROCESO_SIG_CONVOCATORIum", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_REQUISITOS, { as: "PROCESO_SIG_CONVOCATORIA_REQUISITOs", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_REQUISITOS.belongsTo(SIG_CONVOCATORIA, { as: "SEC_EJEC_SIG_CONVOCATORIum", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_REQUISITOS, { as: "SEC_EJEC_SIG_CONVOCATORIA_REQUISITOs", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_REQUISITOS.belongsTo(SIG_CONVOCATORIA, { as: "SEC_PROCESO_SIG_CONVOCATORIum", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_REQUISITOS, { as: "SEC_PROCESO_SIG_CONVOCATORIA_REQUISITOs", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_REQUISITOS.belongsTo(SIG_CONVOCATORIA, { as: "TIPO_GENERACION_SIG_CONVOCATORIum", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_REQUISITOS, { as: "TIPO_GENERACION_SIG_CONVOCATORIA_REQUISITOs", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA_SECUENCIA.belongsTo(SIG_CONVOCATORIA, { as: "ANO_EJE_SIG_CONVOCATORIum", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_SECUENCIA, { as: "SIG_CONVOCATORIA_SECUENCIa", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA_SECUENCIA.belongsTo(SIG_CONVOCATORIA, { as: "CONVOCATORIA_SIG_CONVOCATORIum", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_SECUENCIA, { as: "CONVOCATORIA_SIG_CONVOCATORIA_SECUENCIa", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_SECUENCIA.belongsTo(SIG_CONVOCATORIA, { as: "PROCESO_SIG_CONVOCATORIum", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_SECUENCIA, { as: "PROCESO_SIG_CONVOCATORIA_SECUENCIa", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_SECUENCIA.belongsTo(SIG_CONVOCATORIA, { as: "SEC_EJEC_SIG_CONVOCATORIum", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_SECUENCIA, { as: "SEC_EJEC_SIG_CONVOCATORIA_SECUENCIa", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_SECUENCIA.belongsTo(SIG_CONVOCATORIA, { as: "SEC_PROCESO_SIG_CONVOCATORIum", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_SECUENCIA, { as: "SEC_PROCESO_SIG_CONVOCATORIA_SECUENCIa", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_SECUENCIA.belongsTo(SIG_CONVOCATORIA, { as: "TIPO_GENERACION_SIG_CONVOCATORIum", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA.hasMany(SIG_CONVOCATORIA_SECUENCIA, { as: "TIPO_GENERACION_SIG_CONVOCATORIA_SECUENCIa", foreignKey: "TIPO_GENERACION"});
  SIG_PROPUESTA_PROVEEDOR.belongsTo(SIG_CONVOCATORIA, { as: "ANO_EJE_SIG_CONVOCATORIum", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA.hasMany(SIG_PROPUESTA_PROVEEDOR, { as: "SIG_PROPUESTA_PROVEEDORs", foreignKey: "ANO_EJE"});
  SIG_PROPUESTA_PROVEEDOR.belongsTo(SIG_CONVOCATORIA, { as: "CONVOCATORIA_SIG_CONVOCATORIum", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA.hasMany(SIG_PROPUESTA_PROVEEDOR, { as: "CONVOCATORIA_SIG_PROPUESTA_PROVEEDORs", foreignKey: "CONVOCATORIA"});
  SIG_PROPUESTA_PROVEEDOR.belongsTo(SIG_CONVOCATORIA, { as: "PROCESO_SIG_CONVOCATORIum", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA.hasMany(SIG_PROPUESTA_PROVEEDOR, { as: "PROCESO_SIG_PROPUESTA_PROVEEDORs", foreignKey: "PROCESO"});
  SIG_PROPUESTA_PROVEEDOR.belongsTo(SIG_CONVOCATORIA, { as: "SEC_EJEC_SIG_CONVOCATORIum", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA.hasMany(SIG_PROPUESTA_PROVEEDOR, { as: "SEC_EJEC_SIG_PROPUESTA_PROVEEDORs", foreignKey: "SEC_EJEC"});
  SIG_PROPUESTA_PROVEEDOR.belongsTo(SIG_CONVOCATORIA, { as: "SEC_PROCESO_SIG_CONVOCATORIum", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA.hasMany(SIG_PROPUESTA_PROVEEDOR, { as: "SEC_PROCESO_SIG_PROPUESTA_PROVEEDORs", foreignKey: "SEC_PROCESO"});
  SIG_PROPUESTA_PROVEEDOR.belongsTo(SIG_CONVOCATORIA, { as: "TIPO_GENERACION_SIG_CONVOCATORIum", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA.hasMany(SIG_PROPUESTA_PROVEEDOR, { as: "TIPO_GENERACION_SIG_PROPUESTA_PROVEEDORs", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA_CALENDARIO.belongsTo(SIG_CONVOCATORIA_CALENDA_CAB, { as: "ANO_EJE_SIG_CONVOCATORIA_CALENDA_CAB", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA_CALENDA_CAB.hasMany(SIG_CONVOCATORIA_CALENDARIO, { as: "SIG_CONVOCATORIA_CALENDARIOs", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA_CALENDARIO.belongsTo(SIG_CONVOCATORIA_CALENDA_CAB, { as: "CONVOCATORIA_SIG_CONVOCATORIA_CALENDA_CAB", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_CALENDA_CAB.hasMany(SIG_CONVOCATORIA_CALENDARIO, { as: "CONVOCATORIA_SIG_CONVOCATORIA_CALENDARIOs", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_CALENDARIO.belongsTo(SIG_CONVOCATORIA_CALENDA_CAB, { as: "PROCESO_SIG_CONVOCATORIA_CALENDA_CAB", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_CALENDA_CAB.hasMany(SIG_CONVOCATORIA_CALENDARIO, { as: "PROCESO_SIG_CONVOCATORIA_CALENDARIOs", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_CALENDARIO.belongsTo(SIG_CONVOCATORIA_CALENDA_CAB, { as: "SEC_CALENDARIO_SIG_CONVOCATORIA_CALENDA_CAB", foreignKey: "SEC_CALENDARIO"});
  SIG_CONVOCATORIA_CALENDA_CAB.hasMany(SIG_CONVOCATORIA_CALENDARIO, { as: "SEC_CALENDARIO_SIG_CONVOCATORIA_CALENDARIOs", foreignKey: "SEC_CALENDARIO"});
  SIG_CONVOCATORIA_CALENDARIO.belongsTo(SIG_CONVOCATORIA_CALENDA_CAB, { as: "SEC_EJEC_SIG_CONVOCATORIA_CALENDA_CAB", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_CALENDA_CAB.hasMany(SIG_CONVOCATORIA_CALENDARIO, { as: "SEC_EJEC_SIG_CONVOCATORIA_CALENDARIOs", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_CALENDARIO.belongsTo(SIG_CONVOCATORIA_CALENDA_CAB, { as: "SEC_PROCESO_SIG_CONVOCATORIA_CALENDA_CAB", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_CALENDA_CAB.hasMany(SIG_CONVOCATORIA_CALENDARIO, { as: "SEC_PROCESO_SIG_CONVOCATORIA_CALENDARIOs", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_CALENDARIO.belongsTo(SIG_CONVOCATORIA_CALENDA_CAB, { as: "TIPO_GENERACION_SIG_CONVOCATORIA_CALENDA_CAB", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA_CALENDA_CAB.hasMany(SIG_CONVOCATORIA_CALENDARIO, { as: "TIPO_GENERACION_SIG_CONVOCATORIA_CALENDARIOs", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA_ITEM_DETALLE.belongsTo(SIG_CONVOCATORIA_ITEM, { as: "ANO_EJE_SIG_CONVOCATORIA_ITEM", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA_ITEM.hasMany(SIG_CONVOCATORIA_ITEM_DETALLE, { as: "SIG_CONVOCATORIA_ITEM_DETALLEs", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA_ITEM_DETALLE.belongsTo(SIG_CONVOCATORIA_ITEM, { as: "CONVOCATORIA_SIG_CONVOCATORIA_ITEM", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_ITEM.hasMany(SIG_CONVOCATORIA_ITEM_DETALLE, { as: "CONVOCATORIA_SIG_CONVOCATORIA_ITEM_DETALLEs", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_ITEM_DETALLE.belongsTo(SIG_CONVOCATORIA_ITEM, { as: "NRO_ITEM_SIG_CONVOCATORIA_ITEM", foreignKey: "NRO_ITEM"});
  SIG_CONVOCATORIA_ITEM.hasMany(SIG_CONVOCATORIA_ITEM_DETALLE, { as: "NRO_ITEM_SIG_CONVOCATORIA_ITEM_DETALLEs", foreignKey: "NRO_ITEM"});
  SIG_CONVOCATORIA_ITEM_DETALLE.belongsTo(SIG_CONVOCATORIA_ITEM, { as: "PROCESO_SIG_CONVOCATORIA_ITEM", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_ITEM.hasMany(SIG_CONVOCATORIA_ITEM_DETALLE, { as: "PROCESO_SIG_CONVOCATORIA_ITEM_DETALLEs", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_ITEM_DETALLE.belongsTo(SIG_CONVOCATORIA_ITEM, { as: "SEC_EJEC_SIG_CONVOCATORIA_ITEM", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_ITEM.hasMany(SIG_CONVOCATORIA_ITEM_DETALLE, { as: "SEC_EJEC_SIG_CONVOCATORIA_ITEM_DETALLEs", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_ITEM_DETALLE.belongsTo(SIG_CONVOCATORIA_ITEM, { as: "SEC_PROCESO_SIG_CONVOCATORIA_ITEM", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_ITEM.hasMany(SIG_CONVOCATORIA_ITEM_DETALLE, { as: "SEC_PROCESO_SIG_CONVOCATORIA_ITEM_DETALLEs", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_ITEM_DETALLE.belongsTo(SIG_CONVOCATORIA_ITEM, { as: "TIPO_GENERACION_SIG_CONVOCATORIA_ITEM", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA_ITEM.hasMany(SIG_CONVOCATORIA_ITEM_DETALLE, { as: "TIPO_GENERACION_SIG_CONVOCATORIA_ITEM_DETALLEs", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA_ITEM_MENSUAL.belongsTo(SIG_CONVOCATORIA_ITEM, { as: "ANO_EJE_SIG_CONVOCATORIA_ITEM", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA_ITEM.hasMany(SIG_CONVOCATORIA_ITEM_MENSUAL, { as: "SIG_CONVOCATORIA_ITEM_MENSUALs", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA_ITEM_MENSUAL.belongsTo(SIG_CONVOCATORIA_ITEM, { as: "CONVOCATORIA_SIG_CONVOCATORIA_ITEM", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_ITEM.hasMany(SIG_CONVOCATORIA_ITEM_MENSUAL, { as: "CONVOCATORIA_SIG_CONVOCATORIA_ITEM_MENSUALs", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_ITEM_MENSUAL.belongsTo(SIG_CONVOCATORIA_ITEM, { as: "NRO_ITEM_SIG_CONVOCATORIA_ITEM", foreignKey: "NRO_ITEM"});
  SIG_CONVOCATORIA_ITEM.hasMany(SIG_CONVOCATORIA_ITEM_MENSUAL, { as: "NRO_ITEM_SIG_CONVOCATORIA_ITEM_MENSUALs", foreignKey: "NRO_ITEM"});
  SIG_CONVOCATORIA_ITEM_MENSUAL.belongsTo(SIG_CONVOCATORIA_ITEM, { as: "PROCESO_SIG_CONVOCATORIA_ITEM", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_ITEM.hasMany(SIG_CONVOCATORIA_ITEM_MENSUAL, { as: "PROCESO_SIG_CONVOCATORIA_ITEM_MENSUALs", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_ITEM_MENSUAL.belongsTo(SIG_CONVOCATORIA_ITEM, { as: "SEC_EJEC_SIG_CONVOCATORIA_ITEM", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_ITEM.hasMany(SIG_CONVOCATORIA_ITEM_MENSUAL, { as: "SEC_EJEC_SIG_CONVOCATORIA_ITEM_MENSUALs", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_ITEM_MENSUAL.belongsTo(SIG_CONVOCATORIA_ITEM, { as: "SEC_PROCESO_SIG_CONVOCATORIA_ITEM", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_ITEM.hasMany(SIG_CONVOCATORIA_ITEM_MENSUAL, { as: "SEC_PROCESO_SIG_CONVOCATORIA_ITEM_MENSUALs", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_ITEM_MENSUAL.belongsTo(SIG_CONVOCATORIA_ITEM, { as: "TIPO_GENERACION_SIG_CONVOCATORIA_ITEM", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA_ITEM.hasMany(SIG_CONVOCATORIA_ITEM_MENSUAL, { as: "TIPO_GENERACION_SIG_CONVOCATORIA_ITEM_MENSUALs", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA_ITEM_PPTAL.belongsTo(SIG_CONVOCATORIA_ITEM, { as: "ANO_EJE_SIG_CONVOCATORIA_ITEM", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA_ITEM.hasMany(SIG_CONVOCATORIA_ITEM_PPTAL, { as: "SIG_CONVOCATORIA_ITEM_PPTALs", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA_ITEM_PPTAL.belongsTo(SIG_CONVOCATORIA_ITEM, { as: "SEC_EJEC_SIG_CONVOCATORIA_ITEM", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_ITEM.hasMany(SIG_CONVOCATORIA_ITEM_PPTAL, { as: "SEC_EJEC_SIG_CONVOCATORIA_ITEM_PPTALs", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_ITEM_PPTAL.belongsTo(SIG_CONVOCATORIA_ITEM, { as: "CONVOCATORIA_SIG_CONVOCATORIA_ITEM", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_ITEM.hasMany(SIG_CONVOCATORIA_ITEM_PPTAL, { as: "CONVOCATORIA_SIG_CONVOCATORIA_ITEM_PPTALs", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_ITEM_PPTAL.belongsTo(SIG_CONVOCATORIA_ITEM, { as: "NRO_ITEM_SIG_CONVOCATORIA_ITEM", foreignKey: "NRO_ITEM"});
  SIG_CONVOCATORIA_ITEM.hasMany(SIG_CONVOCATORIA_ITEM_PPTAL, { as: "NRO_ITEM_SIG_CONVOCATORIA_ITEM_PPTALs", foreignKey: "NRO_ITEM"});
  SIG_CONVOCATORIA_ITEM_PPTAL.belongsTo(SIG_CONVOCATORIA_ITEM, { as: "PROCESO_SIG_CONVOCATORIA_ITEM", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_ITEM.hasMany(SIG_CONVOCATORIA_ITEM_PPTAL, { as: "PROCESO_SIG_CONVOCATORIA_ITEM_PPTALs", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_ITEM_PPTAL.belongsTo(SIG_CONVOCATORIA_ITEM, { as: "SEC_PROCESO_SIG_CONVOCATORIA_ITEM", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_ITEM.hasMany(SIG_CONVOCATORIA_ITEM_PPTAL, { as: "SEC_PROCESO_SIG_CONVOCATORIA_ITEM_PPTALs", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_ITEM_PPTAL.belongsTo(SIG_CONVOCATORIA_ITEM, { as: "TIPO_GENERACION_SIG_CONVOCATORIA_ITEM", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA_ITEM.hasMany(SIG_CONVOCATORIA_ITEM_PPTAL, { as: "TIPO_GENERACION_SIG_CONVOCATORIA_ITEM_PPTALs", foreignKey: "TIPO_GENERACION"});
  SIG_PROPUESTA_ITEM.belongsTo(SIG_CONVOCATORIA_ITEM, { as: "NRO_ITEM_SIG_CONVOCATORIA_ITEM", foreignKey: "NRO_ITEM"});
  SIG_CONVOCATORIA_ITEM.hasMany(SIG_PROPUESTA_ITEM, { as: "SIG_PROPUESTA_ITEMs", foreignKey: "NRO_ITEM"});
  SIG_CONTRATO_LOTE.belongsTo(SIG_CONVOCATORIA_LOTE, { as: "ANO_EJE_SIG_CONVOCATORIA_LOTE", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA_LOTE.hasMany(SIG_CONTRATO_LOTE, { as: "SIG_CONTRATO_LOTEs", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_LOTE.belongsTo(SIG_CONVOCATORIA_LOTE, { as: "SEC_EJEC_SIG_CONVOCATORIA_LOTE", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_LOTE.hasMany(SIG_CONTRATO_LOTE, { as: "SEC_EJEC_SIG_CONTRATO_LOTEs", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_LOTE.belongsTo(SIG_CONVOCATORIA_LOTE, { as: "CONVOCATORIA_SIG_CONVOCATORIA_LOTE", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_LOTE.hasMany(SIG_CONTRATO_LOTE, { as: "CONVOCATORIA_SIG_CONTRATO_LOTEs", foreignKey: "CONVOCATORIA"});
  SIG_CONTRATO_LOTE.belongsTo(SIG_CONVOCATORIA_LOTE, { as: "NRO_LOTE_SIG_CONVOCATORIA_LOTE", foreignKey: "NRO_LOTE"});
  SIG_CONVOCATORIA_LOTE.hasMany(SIG_CONTRATO_LOTE, { as: "NRO_LOTE_SIG_CONTRATO_LOTEs", foreignKey: "NRO_LOTE"});
  SIG_CONTRATO_LOTE.belongsTo(SIG_CONVOCATORIA_LOTE, { as: "PROCESO_SIG_CONVOCATORIA_LOTE", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_LOTE.hasMany(SIG_CONTRATO_LOTE, { as: "PROCESO_SIG_CONTRATO_LOTEs", foreignKey: "PROCESO"});
  SIG_CONTRATO_LOTE.belongsTo(SIG_CONVOCATORIA_LOTE, { as: "SEC_PROCESO_SIG_CONVOCATORIA_LOTE", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_LOTE.hasMany(SIG_CONTRATO_LOTE, { as: "SEC_PROCESO_SIG_CONTRATO_LOTEs", foreignKey: "SEC_PROCESO"});
  SIG_CONTRATO_LOTE.belongsTo(SIG_CONVOCATORIA_LOTE, { as: "TIPO_GENERACION_SIG_CONVOCATORIA_LOTE", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA_LOTE.hasMany(SIG_CONTRATO_LOTE, { as: "TIPO_GENERACION_SIG_CONTRATO_LOTEs", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA_LOTE_FACTOR.belongsTo(SIG_CONVOCATORIA_LOTE, { as: "ANO_EJE_SIG_CONVOCATORIA_LOTE", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA_LOTE.hasMany(SIG_CONVOCATORIA_LOTE_FACTOR, { as: "SIG_CONVOCATORIA_LOTE_FACTORs", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA_LOTE_FACTOR.belongsTo(SIG_CONVOCATORIA_LOTE, { as: "CONVOCATORIA_SIG_CONVOCATORIA_LOTE", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_LOTE.hasMany(SIG_CONVOCATORIA_LOTE_FACTOR, { as: "CONVOCATORIA_SIG_CONVOCATORIA_LOTE_FACTORs", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_LOTE_FACTOR.belongsTo(SIG_CONVOCATORIA_LOTE, { as: "NRO_LOTE_SIG_CONVOCATORIA_LOTE", foreignKey: "NRO_LOTE"});
  SIG_CONVOCATORIA_LOTE.hasMany(SIG_CONVOCATORIA_LOTE_FACTOR, { as: "NRO_LOTE_SIG_CONVOCATORIA_LOTE_FACTORs", foreignKey: "NRO_LOTE"});
  SIG_CONVOCATORIA_LOTE_FACTOR.belongsTo(SIG_CONVOCATORIA_LOTE, { as: "PROCESO_SIG_CONVOCATORIA_LOTE", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_LOTE.hasMany(SIG_CONVOCATORIA_LOTE_FACTOR, { as: "PROCESO_SIG_CONVOCATORIA_LOTE_FACTORs", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_LOTE_FACTOR.belongsTo(SIG_CONVOCATORIA_LOTE, { as: "SEC_EJEC_SIG_CONVOCATORIA_LOTE", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_LOTE.hasMany(SIG_CONVOCATORIA_LOTE_FACTOR, { as: "SEC_EJEC_SIG_CONVOCATORIA_LOTE_FACTORs", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_LOTE_FACTOR.belongsTo(SIG_CONVOCATORIA_LOTE, { as: "SEC_PROCESO_SIG_CONVOCATORIA_LOTE", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_LOTE.hasMany(SIG_CONVOCATORIA_LOTE_FACTOR, { as: "SEC_PROCESO_SIG_CONVOCATORIA_LOTE_FACTORs", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_LOTE_FACTOR.belongsTo(SIG_CONVOCATORIA_LOTE, { as: "TIPO_GENERACION_SIG_CONVOCATORIA_LOTE", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA_LOTE.hasMany(SIG_CONVOCATORIA_LOTE_FACTOR, { as: "TIPO_GENERACION_SIG_CONVOCATORIA_LOTE_FACTORs", foreignKey: "TIPO_GENERACION"});
  SIG_PROPUESTA_LOTE.belongsTo(SIG_CONVOCATORIA_LOTE, { as: "NRO_LOTE_SIG_CONVOCATORIA_LOTE", foreignKey: "NRO_LOTE"});
  SIG_CONVOCATORIA_LOTE.hasMany(SIG_PROPUESTA_LOTE, { as: "SIG_PROPUESTA_LOTEs", foreignKey: "NRO_LOTE"});
  SIG_PROPUESTA_REQUISITOS.belongsTo(SIG_CONVOCATORIA_REQUISITOS, { as: "SEC_FACTOR_SIG_CONVOCATORIA_REQUISITO", foreignKey: "SEC_FACTOR"});
  SIG_CONVOCATORIA_REQUISITOS.hasMany(SIG_PROPUESTA_REQUISITOS, { as: "SIG_PROPUESTA_REQUISITOs", foreignKey: "SEC_FACTOR"});
  SIG_CONTRATOS.belongsTo(SIG_CONVOCATORIA_SECUENCIA, { as: "CONVOCATORIA_SIG_CONVOCATORIA_SECUENCIum", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_SECUENCIA.hasMany(SIG_CONTRATOS, { as: "SIG_CONTRATOs", foreignKey: "CONVOCATORIA"});
  SIG_CONTRATOS.belongsTo(SIG_CONVOCATORIA_SECUENCIA, { as: "PROCESO_SIG_CONVOCATORIA_SECUENCIum", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_SECUENCIA.hasMany(SIG_CONTRATOS, { as: "PROCESO_SIG_CONTRATOs", foreignKey: "PROCESO"});
  SIG_CONTRATOS.belongsTo(SIG_CONVOCATORIA_SECUENCIA, { as: "SEC_CONVOCATORIA_SIG_CONVOCATORIA_SECUENCIum", foreignKey: "SEC_CONVOCATORIA"});
  SIG_CONVOCATORIA_SECUENCIA.hasMany(SIG_CONTRATOS, { as: "SEC_CONVOCATORIA_SIG_CONTRATOs", foreignKey: "SEC_CONVOCATORIA"});
  SIG_CONTRATOS.belongsTo(SIG_CONVOCATORIA_SECUENCIA, { as: "SEC_PROCESO_SIG_CONVOCATORIA_SECUENCIum", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_SECUENCIA.hasMany(SIG_CONTRATOS, { as: "SEC_PROCESO_SIG_CONTRATOs", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_ETAPAS.belongsTo(SIG_CONVOCATORIA_SECUENCIA, { as: "ANO_EJE_SIG_CONVOCATORIA_SECUENCIum", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA_SECUENCIA.hasMany(SIG_CONVOCATORIA_ETAPAS, { as: "SIG_CONVOCATORIA_ETAPAs", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA_ETAPAS.belongsTo(SIG_CONVOCATORIA_SECUENCIA, { as: "CONVOCATORIA_SIG_CONVOCATORIA_SECUENCIum", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_SECUENCIA.hasMany(SIG_CONVOCATORIA_ETAPAS, { as: "CONVOCATORIA_SIG_CONVOCATORIA_ETAPAs", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_ETAPAS.belongsTo(SIG_CONVOCATORIA_SECUENCIA, { as: "PROCESO_SIG_CONVOCATORIA_SECUENCIum", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_SECUENCIA.hasMany(SIG_CONVOCATORIA_ETAPAS, { as: "PROCESO_SIG_CONVOCATORIA_ETAPAs", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_ETAPAS.belongsTo(SIG_CONVOCATORIA_SECUENCIA, { as: "SEC_CONVOCATORIA_SIG_CONVOCATORIA_SECUENCIum", foreignKey: "SEC_CONVOCATORIA"});
  SIG_CONVOCATORIA_SECUENCIA.hasMany(SIG_CONVOCATORIA_ETAPAS, { as: "SEC_CONVOCATORIA_SIG_CONVOCATORIA_ETAPAs", foreignKey: "SEC_CONVOCATORIA"});
  SIG_CONVOCATORIA_ETAPAS.belongsTo(SIG_CONVOCATORIA_SECUENCIA, { as: "SEC_EJEC_SIG_CONVOCATORIA_SECUENCIum", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_SECUENCIA.hasMany(SIG_CONVOCATORIA_ETAPAS, { as: "SEC_EJEC_SIG_CONVOCATORIA_ETAPAs", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_ETAPAS.belongsTo(SIG_CONVOCATORIA_SECUENCIA, { as: "SEC_PROCESO_SIG_CONVOCATORIA_SECUENCIum", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_SECUENCIA.hasMany(SIG_CONVOCATORIA_ETAPAS, { as: "SEC_PROCESO_SIG_CONVOCATORIA_ETAPAs", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_ETAPAS.belongsTo(SIG_CONVOCATORIA_SECUENCIA, { as: "TIPO_GENERACION_SIG_CONVOCATORIA_SECUENCIum", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA_SECUENCIA.hasMany(SIG_CONVOCATORIA_ETAPAS, { as: "TIPO_GENERACION_SIG_CONVOCATORIA_ETAPAs", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA_FUENTE.belongsTo(SIG_CONVOCATORIA_SECUENCIA, { as: "ANO_EJE_SIG_CONVOCATORIA_SECUENCIum", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA_SECUENCIA.hasMany(SIG_CONVOCATORIA_FUENTE, { as: "SIG_CONVOCATORIA_FUENTEs", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA_FUENTE.belongsTo(SIG_CONVOCATORIA_SECUENCIA, { as: "CONVOCATORIA_SIG_CONVOCATORIA_SECUENCIum", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_SECUENCIA.hasMany(SIG_CONVOCATORIA_FUENTE, { as: "CONVOCATORIA_SIG_CONVOCATORIA_FUENTEs", foreignKey: "CONVOCATORIA"});
  SIG_CONVOCATORIA_FUENTE.belongsTo(SIG_CONVOCATORIA_SECUENCIA, { as: "PROCESO_SIG_CONVOCATORIA_SECUENCIum", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_SECUENCIA.hasMany(SIG_CONVOCATORIA_FUENTE, { as: "PROCESO_SIG_CONVOCATORIA_FUENTEs", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA_FUENTE.belongsTo(SIG_CONVOCATORIA_SECUENCIA, { as: "SEC_CONVOCATORIA_SIG_CONVOCATORIA_SECUENCIum", foreignKey: "SEC_CONVOCATORIA"});
  SIG_CONVOCATORIA_SECUENCIA.hasMany(SIG_CONVOCATORIA_FUENTE, { as: "SEC_CONVOCATORIA_SIG_CONVOCATORIA_FUENTEs", foreignKey: "SEC_CONVOCATORIA"});
  SIG_CONVOCATORIA_FUENTE.belongsTo(SIG_CONVOCATORIA_SECUENCIA, { as: "SEC_EJEC_SIG_CONVOCATORIA_SECUENCIum", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_SECUENCIA.hasMany(SIG_CONVOCATORIA_FUENTE, { as: "SEC_EJEC_SIG_CONVOCATORIA_FUENTEs", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA_FUENTE.belongsTo(SIG_CONVOCATORIA_SECUENCIA, { as: "SEC_PROCESO_SIG_CONVOCATORIA_SECUENCIum", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_SECUENCIA.hasMany(SIG_CONVOCATORIA_FUENTE, { as: "SEC_PROCESO_SIG_CONVOCATORIA_FUENTEs", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA_FUENTE.belongsTo(SIG_CONVOCATORIA_SECUENCIA, { as: "TIPO_GENERACION_SIG_CONVOCATORIA_SECUENCIum", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA_SECUENCIA.hasMany(SIG_CONVOCATORIA_FUENTE, { as: "TIPO_GENERACION_SIG_CONVOCATORIA_FUENTEs", foreignKey: "TIPO_GENERACION"});
  SIG_DETALLE_BSERV_CUADRO.belongsTo(SIG_CUADRO_ADQUISICION, { as: "SEC_EJEC_SIG_CUADRO_ADQUISICION", foreignKey: "SEC_EJEC"});
  SIG_CUADRO_ADQUISICION.hasMany(SIG_DETALLE_BSERV_CUADRO, { as: "SIG_DETALLE_BSERV_CUADROs", foreignKey: "SEC_EJEC"});
  SIG_DETALLE_BSERV_CUADRO.belongsTo(SIG_CUADRO_ADQUISICION, { as: "TIPO_BIEN_SIG_CUADRO_ADQUISICION", foreignKey: "TIPO_BIEN"});
  SIG_CUADRO_ADQUISICION.hasMany(SIG_DETALLE_BSERV_CUADRO, { as: "TIPO_BIEN_SIG_DETALLE_BSERV_CUADROs", foreignKey: "TIPO_BIEN"});
  SIG_DETALLE_BSERV_CUADRO.belongsTo(SIG_CUADRO_ADQUISICION, { as: "ANO_EJE_SIG_CUADRO_ADQUISICION", foreignKey: "ANO_EJE"});
  SIG_CUADRO_ADQUISICION.hasMany(SIG_DETALLE_BSERV_CUADRO, { as: "ANO_EJE_SIG_DETALLE_BSERV_CUADROs", foreignKey: "ANO_EJE"});
  SIG_DETALLE_BSERV_CUADRO.belongsTo(SIG_CUADRO_ADQUISICION, { as: "SEC_CUADRO_SIG_CUADRO_ADQUISICION", foreignKey: "SEC_CUADRO"});
  SIG_CUADRO_ADQUISICION.hasMany(SIG_DETALLE_BSERV_CUADRO, { as: "SEC_CUADRO_SIG_DETALLE_BSERV_CUADROs", foreignKey: "SEC_CUADRO"});
  SIG_CUADRO_MODIFICADO_DET.belongsTo(SIG_CUADRO_MODIFICADO, { as: "SEC_CUADRO_SIG_CUADRO_MODIFICADO", foreignKey: "SEC_CUADRO"});
  SIG_CUADRO_MODIFICADO.hasMany(SIG_CUADRO_MODIFICADO_DET, { as: "SIG_CUADRO_MODIFICADO_DETs", foreignKey: "SEC_CUADRO"});
  SIG_CUADRO_TRANSFERENCIA.belongsTo(SIG_CUADRO_MODIFICADO, { as: "ANNO_EJEC_SIG_CUADRO_MODIFICADO", foreignKey: "ANNO_EJEC"});
  SIG_CUADRO_MODIFICADO.hasMany(SIG_CUADRO_TRANSFERENCIA, { as: "SIG_CUADRO_TRANSFERENCIa", foreignKey: "ANNO_EJEC"});
  SIG_CUADRO_TRANSFERENCIA.belongsTo(SIG_CUADRO_MODIFICADO, { as: "SEC_EJEC_SIG_CUADRO_MODIFICADO", foreignKey: "SEC_EJEC"});
  SIG_CUADRO_MODIFICADO.hasMany(SIG_CUADRO_TRANSFERENCIA, { as: "SEC_EJEC_SIG_CUADRO_TRANSFERENCIa", foreignKey: "SEC_EJEC"});
  SIG_CUADRO_TRANSFERENCIA.belongsTo(SIG_CUADRO_MODIFICADO, { as: "CENTRO_COSTO_SIG_CUADRO_MODIFICADO", foreignKey: "CENTRO_COSTO"});
  SIG_CUADRO_MODIFICADO.hasMany(SIG_CUADRO_TRANSFERENCIA, { as: "CENTRO_COSTO_SIG_CUADRO_TRANSFERENCIa", foreignKey: "CENTRO_COSTO"});
  SIG_CUADRO_TRANSFERENCIA.belongsTo(SIG_CUADRO_MODIFICADO, { as: "SEC_CUADRO_SIG_CUADRO_MODIFICADO", foreignKey: "SEC_CUADRO"});
  SIG_CUADRO_MODIFICADO.hasMany(SIG_CUADRO_TRANSFERENCIA, { as: "SEC_CUADRO_SIG_CUADRO_TRANSFERENCIa", foreignKey: "SEC_CUADRO"});
  SIG_CONTRATO_MOVITEM_PPTAL.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "ANNO_EJEC_CM_SIG_CUADRO_MODIFICADO_DET", foreignKey: "ANNO_EJEC_CM"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_CONTRATO_MOVITEM_PPTAL, { as: "SIG_CONTRATO_MOVITEM_PPTALs", foreignKey: "ANNO_EJEC_CM"});
  SIG_CONTRATO_MOVITEM_PPTAL.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "ANNO_PROG_CM_SIG_CUADRO_MODIFICADO_DET", foreignKey: "ANNO_PROG_CM"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_CONTRATO_MOVITEM_PPTAL, { as: "ANNO_PROG_CM_SIG_CONTRATO_MOVITEM_PPTALs", foreignKey: "ANNO_PROG_CM"});
  SIG_CONTRATO_MOVITEM_PPTAL.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "SEC_CUADRO_CM_SIG_CUADRO_MODIFICADO_DET", foreignKey: "SEC_CUADRO_CM"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_CONTRATO_MOVITEM_PPTAL, { as: "SEC_CUADRO_CM_SIG_CONTRATO_MOVITEM_PPTALs", foreignKey: "SEC_CUADRO_CM"});
  SIG_CONTRATO_MOVITEM_PPTAL.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "SEC_ITEM_CM_SIG_CUADRO_MODIFICADO_DET", foreignKey: "SEC_ITEM_CM"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_CONTRATO_MOVITEM_PPTAL, { as: "SEC_ITEM_CM_SIG_CONTRATO_MOVITEM_PPTALs", foreignKey: "SEC_ITEM_CM"});
  SIG_CUADRO_MODIFICADO_DET_ORI.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "ANNO_EJEC_SIG_CUADRO_MODIFICADO_DET", foreignKey: "ANNO_EJEC"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_CUADRO_MODIFICADO_DET_ORI, { as: "SIG_CUADRO_MODIFICADO_DET_ORIs", foreignKey: "ANNO_EJEC"});
  SIG_CUADRO_MODIFICADO_DET_ORI.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "ANNO_PROG_SIG_CUADRO_MODIFICADO_DET", foreignKey: "ANNO_PROG"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_CUADRO_MODIFICADO_DET_ORI, { as: "ANNO_PROG_SIG_CUADRO_MODIFICADO_DET_ORIs", foreignKey: "ANNO_PROG"});
  SIG_CUADRO_MODIFICADO_DET_ORI.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "CENTRO_COSTO_SIG_CUADRO_MODIFICADO_DET", foreignKey: "CENTRO_COSTO"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_CUADRO_MODIFICADO_DET_ORI, { as: "CENTRO_COSTO_SIG_CUADRO_MODIFICADO_DET_ORIs", foreignKey: "CENTRO_COSTO"});
  SIG_CUADRO_MODIFICADO_DET_ORI.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "SEC_CUADRO_SIG_CUADRO_MODIFICADO_DET", foreignKey: "SEC_CUADRO"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_CUADRO_MODIFICADO_DET_ORI, { as: "SEC_CUADRO_SIG_CUADRO_MODIFICADO_DET_ORIs", foreignKey: "SEC_CUADRO"});
  SIG_CUADRO_MODIFICADO_DET_ORI.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "SEC_EJEC_SIG_CUADRO_MODIFICADO_DET", foreignKey: "SEC_EJEC"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_CUADRO_MODIFICADO_DET_ORI, { as: "SEC_EJEC_SIG_CUADRO_MODIFICADO_DET_ORIs", foreignKey: "SEC_EJEC"});
  SIG_CUADRO_MODIFICADO_DET_ORI.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "SEC_ITEM_SIG_CUADRO_MODIFICADO_DET", foreignKey: "SEC_ITEM"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_CUADRO_MODIFICADO_DET_ORI, { as: "SEC_ITEM_SIG_CUADRO_MODIFICADO_DET_ORIs", foreignKey: "SEC_ITEM"});
  SIG_CUADRO_MODIFICADO_DET_REF.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "ANNO_EJEC_SIG_CUADRO_MODIFICADO_DET", foreignKey: "ANNO_EJEC"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_CUADRO_MODIFICADO_DET_REF, { as: "SIG_CUADRO_MODIFICADO_DET_REFs", foreignKey: "ANNO_EJEC"});
  SIG_CUADRO_MODIFICADO_DET_REF.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "ANNO_PROG_SIG_CUADRO_MODIFICADO_DET", foreignKey: "ANNO_PROG"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_CUADRO_MODIFICADO_DET_REF, { as: "ANNO_PROG_SIG_CUADRO_MODIFICADO_DET_REFs", foreignKey: "ANNO_PROG"});
  SIG_CUADRO_MODIFICADO_DET_REF.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "CENTRO_COSTO_SIG_CUADRO_MODIFICADO_DET", foreignKey: "CENTRO_COSTO"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_CUADRO_MODIFICADO_DET_REF, { as: "CENTRO_COSTO_SIG_CUADRO_MODIFICADO_DET_REFs", foreignKey: "CENTRO_COSTO"});
  SIG_CUADRO_MODIFICADO_DET_REF.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "SEC_CUADRO_SIG_CUADRO_MODIFICADO_DET", foreignKey: "SEC_CUADRO"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_CUADRO_MODIFICADO_DET_REF, { as: "SEC_CUADRO_SIG_CUADRO_MODIFICADO_DET_REFs", foreignKey: "SEC_CUADRO"});
  SIG_CUADRO_MODIFICADO_DET_REF.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "SEC_EJEC_SIG_CUADRO_MODIFICADO_DET", foreignKey: "SEC_EJEC"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_CUADRO_MODIFICADO_DET_REF, { as: "SEC_EJEC_SIG_CUADRO_MODIFICADO_DET_REFs", foreignKey: "SEC_EJEC"});
  SIG_CUADRO_MODIFICADO_DET_REF.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "SEC_ITEM_SIG_CUADRO_MODIFICADO_DET", foreignKey: "SEC_ITEM"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_CUADRO_MODIFICADO_DET_REF, { as: "SEC_ITEM_SIG_CUADRO_MODIFICADO_DET_REFs", foreignKey: "SEC_ITEM"});
  SIG_CUADRO_TRANSFERENCIA_DET.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "ORIG_ANNO_PROG_SIG_CUADRO_MODIFICADO_DET", foreignKey: "ORIG_ANNO_PROG"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_CUADRO_TRANSFERENCIA_DET, { as: "SIG_CUADRO_TRANSFERENCIA_DETs", foreignKey: "ORIG_ANNO_PROG"});
  SIG_CUADRO_TRANSFERENCIA_DET.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "ORIG_SEC_ITEM_SIG_CUADRO_MODIFICADO_DET", foreignKey: "ORIG_SEC_ITEM"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_CUADRO_TRANSFERENCIA_DET, { as: "ORIG_SEC_ITEM_SIG_CUADRO_TRANSFERENCIA_DETs", foreignKey: "ORIG_SEC_ITEM"});
  SIG_CUADRO_TRANSFERENCIA_DET.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "SEC_CUADRO_SIG_CUADRO_MODIFICADO_DET", foreignKey: "SEC_CUADRO"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_CUADRO_TRANSFERENCIA_DET, { as: "SEC_CUADRO_SIG_CUADRO_TRANSFERENCIA_DETs", foreignKey: "SEC_CUADRO"});
  SIG_DETALLE_PEDIDOS.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "ANNO_PROG_SIG_CUADRO_MODIFICADO_DET", foreignKey: "ANNO_PROG"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_DETALLE_PEDIDOS, { as: "SIG_DETALLE_PEDIDOs", foreignKey: "ANNO_PROG"});
  SIG_DETALLE_PEDIDOS.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "CENTRO_COSTO_SIG_CUADRO_MODIFICADO_DET", foreignKey: "CENTRO_COSTO"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_DETALLE_PEDIDOS, { as: "CENTRO_COSTO_SIG_DETALLE_PEDIDOs", foreignKey: "CENTRO_COSTO"});
  SIG_DETALLE_PEDIDOS.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "SEC_CUADRO_SIG_CUADRO_MODIFICADO_DET", foreignKey: "SEC_CUADRO"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_DETALLE_PEDIDOS, { as: "SEC_CUADRO_SIG_DETALLE_PEDIDOs", foreignKey: "SEC_CUADRO"});
  SIG_DETALLE_PEDIDOS.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "SEC_ITEM_SIG_CUADRO_MODIFICADO_DET", foreignKey: "SEC_ITEM"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_DETALLE_PEDIDOS, { as: "SEC_ITEM_SIG_DETALLE_PEDIDOs", foreignKey: "SEC_ITEM"});
  SIG_SOLICITUD_MODIFICACION_DET.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "ANNO_EJEC_SIG_CUADRO_MODIFICADO_DET", foreignKey: "ANNO_EJEC"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_SOLICITUD_MODIFICACION_DET, { as: "SIG_SOLICITUD_MODIFICACION_DETs", foreignKey: "ANNO_EJEC"});
  SIG_SOLICITUD_MODIFICACION_DET.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "CENTRO_COSTO_SIG_CUADRO_MODIFICADO_DET", foreignKey: "CENTRO_COSTO"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_SOLICITUD_MODIFICACION_DET, { as: "CENTRO_COSTO_SIG_SOLICITUD_MODIFICACION_DETs", foreignKey: "CENTRO_COSTO"});
  SIG_SOLICITUD_MODIFICACION_DET.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "SEC_EJEC_SIG_CUADRO_MODIFICADO_DET", foreignKey: "SEC_EJEC"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_SOLICITUD_MODIFICACION_DET, { as: "SEC_EJEC_SIG_SOLICITUD_MODIFICACION_DETs", foreignKey: "SEC_EJEC"});
  SIG_SOLICITUD_MODIFICACION_DET.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "ANNO_PROG_SIG_CUADRO_MODIFICADO_DET", foreignKey: "ANNO_PROG"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_SOLICITUD_MODIFICACION_DET, { as: "ANNO_PROG_SIG_SOLICITUD_MODIFICACION_DETs", foreignKey: "ANNO_PROG"});
  SIG_SOLICITUD_MODIFICACION_DET.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "SEC_CUADRO_SIG_CUADRO_MODIFICADO_DET", foreignKey: "SEC_CUADRO"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_SOLICITUD_MODIFICACION_DET, { as: "SEC_CUADRO_SIG_SOLICITUD_MODIFICACION_DETs", foreignKey: "SEC_CUADRO"});
  SIG_SOLICITUD_MODIFICACION_DET.belongsTo(SIG_CUADRO_MODIFICADO_DET, { as: "SEC_ITEM_SIG_CUADRO_MODIFICADO_DET", foreignKey: "SEC_ITEM"});
  SIG_CUADRO_MODIFICADO_DET.hasMany(SIG_SOLICITUD_MODIFICACION_DET, { as: "SEC_ITEM_SIG_SOLICITUD_MODIFICACION_DETs", foreignKey: "SEC_ITEM"});
  SIG_CUADRO_MODIFICADO_DET.belongsTo(SIG_CUADRO_MODIFICADO_SALDO, { as: "ANNO_EJEC_SIG_CUADRO_MODIFICADO_SALDO", foreignKey: "ANNO_EJEC"});
  SIG_CUADRO_MODIFICADO_SALDO.hasMany(SIG_CUADRO_MODIFICADO_DET, { as: "SIG_CUADRO_MODIFICADO_DETs", foreignKey: "ANNO_EJEC"});
  SIG_CUADRO_MODIFICADO_DET.belongsTo(SIG_CUADRO_MODIFICADO_SALDO, { as: "SEC_EJEC_SIG_CUADRO_MODIFICADO_SALDO", foreignKey: "SEC_EJEC"});
  SIG_CUADRO_MODIFICADO_SALDO.hasMany(SIG_CUADRO_MODIFICADO_DET, { as: "SEC_EJEC_SIG_CUADRO_MODIFICADO_DETs", foreignKey: "SEC_EJEC"});
  SIG_CUADRO_MODIFICADO_DET.belongsTo(SIG_CUADRO_MODIFICADO_SALDO, { as: "SEC_CUA_MOD_SAL_SIG_CUADRO_MODIFICADO_SALDO", foreignKey: "SEC_CUA_MOD_SAL"});
  SIG_CUADRO_MODIFICADO_SALDO.hasMany(SIG_CUADRO_MODIFICADO_DET, { as: "SEC_CUA_MOD_SAL_SIG_CUADRO_MODIFICADO_DETs", foreignKey: "SEC_CUA_MOD_SAL"});
  SIG_DETALLE_PEDIDOS.belongsTo(SIG_CUADRO_MODIFICADO_SALDO, { as: "sec_ejec_SIG_CUADRO_MODIFICADO_SALDO", foreignKey: "sec_ejec"});
  SIG_CUADRO_MODIFICADO_SALDO.hasMany(SIG_DETALLE_PEDIDOS, { as: "SIG_DETALLE_PEDIDOs", foreignKey: "sec_ejec"});
  SIG_DETALLE_PEDIDOS.belongsTo(SIG_CUADRO_MODIFICADO_SALDO, { as: "ANO_EJE_SIG_CUADRO_MODIFICADO_SALDO", foreignKey: "ANO_EJE"});
  SIG_CUADRO_MODIFICADO_SALDO.hasMany(SIG_DETALLE_PEDIDOS, { as: "ANO_EJE_SIG_DETALLE_PEDIDOs", foreignKey: "ANO_EJE"});
  SIG_DETALLE_PEDIDOS.belongsTo(SIG_CUADRO_MODIFICADO_SALDO, { as: "SEC_CUA_MOD_SAL_SIG_CUADRO_MODIFICADO_SALDO", foreignKey: "SEC_CUA_MOD_SAL"});
  SIG_CUADRO_MODIFICADO_SALDO.hasMany(SIG_DETALLE_PEDIDOS, { as: "SEC_CUA_MOD_SAL_SIG_DETALLE_PEDIDOs", foreignKey: "SEC_CUA_MOD_SAL"});
  SIG_CUADRO_NECESIDAD_DET.belongsTo(SIG_CUADRO_NECESIDAD, { as: "SEC_EJEC_SIG_CUADRO_NECESIDAD", foreignKey: "SEC_EJEC"});
  SIG_CUADRO_NECESIDAD.hasMany(SIG_CUADRO_NECESIDAD_DET, { as: "SIG_CUADRO_NECESIDAD_DETs", foreignKey: "SEC_EJEC"});
  SIG_CUADRO_NECESIDAD_DET.belongsTo(SIG_CUADRO_NECESIDAD, { as: "ANO_EJE_SIG_CUADRO_NECESIDAD", foreignKey: "ANO_EJE"});
  SIG_CUADRO_NECESIDAD.hasMany(SIG_CUADRO_NECESIDAD_DET, { as: "ANO_EJE_SIG_CUADRO_NECESIDAD_DETs", foreignKey: "ANO_EJE"});
  SIG_CUADRO_NECESIDAD_DET.belongsTo(SIG_CUADRO_NECESIDAD, { as: "CENTRO_COSTO_SIG_CUADRO_NECESIDAD", foreignKey: "CENTRO_COSTO"});
  SIG_CUADRO_NECESIDAD.hasMany(SIG_CUADRO_NECESIDAD_DET, { as: "CENTRO_COSTO_SIG_CUADRO_NECESIDAD_DETs", foreignKey: "CENTRO_COSTO"});
  SIG_CUADRO_NECESIDAD_DET.belongsTo(SIG_CUADRO_NECESIDAD, { as: "FASE_CUADRO_SIG_CUADRO_NECESIDAD", foreignKey: "FASE_CUADRO"});
  SIG_CUADRO_NECESIDAD.hasMany(SIG_CUADRO_NECESIDAD_DET, { as: "FASE_CUADRO_SIG_CUADRO_NECESIDAD_DETs", foreignKey: "FASE_CUADRO"});
  SIG_CUADRO_NECESIDAD_DET.belongsTo(SIG_CUADRO_NECESIDAD, { as: "SECUENCIA_SIG_CUADRO_NECESIDAD", foreignKey: "SECUENCIA"});
  SIG_CUADRO_NECESIDAD.hasMany(SIG_CUADRO_NECESIDAD_DET, { as: "SECUENCIA_SIG_CUADRO_NECESIDAD_DETs", foreignKey: "SECUENCIA"});
  SIG_CUADRO_TRANSFERENCIA_DET.belongsTo(SIG_CUADRO_TRANSFERENCIA, { as: "NRO_TRANSFERENCIA_SIG_CUADRO_TRANSFERENCIum", foreignKey: "NRO_TRANSFERENCIA"});
  SIG_CUADRO_TRANSFERENCIA.hasMany(SIG_CUADRO_TRANSFERENCIA_DET, { as: "SIG_CUADRO_TRANSFERENCIA_DETs", foreignKey: "NRO_TRANSFERENCIA"});
  SIG_DETALLE_PEDIDO_CUADRO.belongsTo(SIG_DEPEN_META_CUADRO, { as: "ANO_EJE_SIG_DEPEN_META_CUADRO", foreignKey: "ANO_EJE"});
  SIG_DEPEN_META_CUADRO.hasMany(SIG_DETALLE_PEDIDO_CUADRO, { as: "SIG_DETALLE_PEDIDO_CUADROs", foreignKey: "ANO_EJE"});
  SIG_DETALLE_PEDIDO_CUADRO.belongsTo(SIG_DEPEN_META_CUADRO, { as: "SEC_CUADRO_SIG_DEPEN_META_CUADRO", foreignKey: "SEC_CUADRO"});
  SIG_DEPEN_META_CUADRO.hasMany(SIG_DETALLE_PEDIDO_CUADRO, { as: "SEC_CUADRO_SIG_DETALLE_PEDIDO_CUADROs", foreignKey: "SEC_CUADRO"});
  SIG_DETALLE_PEDIDO_CUADRO.belongsTo(SIG_DEPEN_META_CUADRO, { as: "SEC_DEPEND_SIG_DEPEN_META_CUADRO", foreignKey: "SEC_DEPEND"});
  SIG_DEPEN_META_CUADRO.hasMany(SIG_DETALLE_PEDIDO_CUADRO, { as: "SEC_DEPEND_SIG_DETALLE_PEDIDO_CUADROs", foreignKey: "SEC_DEPEND"});
  SIG_DETALLE_PEDIDO_CUADRO.belongsTo(SIG_DEPEN_META_CUADRO, { as: "SEC_EJEC_SIG_DEPEN_META_CUADRO", foreignKey: "SEC_EJEC"});
  SIG_DEPEN_META_CUADRO.hasMany(SIG_DETALLE_PEDIDO_CUADRO, { as: "SEC_EJEC_SIG_DETALLE_PEDIDO_CUADROs", foreignKey: "SEC_EJEC"});
  SIG_DETALLE_PEDIDO_CUADRO.belongsTo(SIG_DEPEN_META_CUADRO, { as: "SEC_META_SIG_DEPEN_META_CUADRO", foreignKey: "SEC_META"});
  SIG_DEPEN_META_CUADRO.hasMany(SIG_DETALLE_PEDIDO_CUADRO, { as: "SEC_META_SIG_DETALLE_PEDIDO_CUADROs", foreignKey: "SEC_META"});
  SIG_DETALLE_PEDIDO_CUADRO.belongsTo(SIG_DEPEN_META_CUADRO, { as: "SECUENCIA_SIG_DEPEN_META_CUADRO", foreignKey: "SECUENCIA"});
  SIG_DEPEN_META_CUADRO.hasMany(SIG_DETALLE_PEDIDO_CUADRO, { as: "SECUENCIA_SIG_DETALLE_PEDIDO_CUADROs", foreignKey: "SECUENCIA"});
  SIG_DETALLE_PEDIDO_CUADRO.belongsTo(SIG_DEPEN_META_CUADRO, { as: "TIPO_BIEN_SIG_DEPEN_META_CUADRO", foreignKey: "TIPO_BIEN"});
  SIG_DEPEN_META_CUADRO.hasMany(SIG_DETALLE_PEDIDO_CUADRO, { as: "TIPO_BIEN_SIG_DETALLE_PEDIDO_CUADROs", foreignKey: "TIPO_BIEN"});
  SIG_DESP_PERSONAL.belongsTo(SIG_DESP_PEDIDOS, { as: "ANO_EJEC_SIG_DESP_PEDIDO", foreignKey: "ANO_EJEC"});
  SIG_DESP_PEDIDOS.hasMany(SIG_DESP_PERSONAL, { as: "SIG_DESP_PERSONALs", foreignKey: "ANO_EJEC"});
  SIG_DESP_PERSONAL.belongsTo(SIG_DESP_PEDIDOS, { as: "SEC_EJEC_SIG_DESP_PEDIDO", foreignKey: "SEC_EJEC"});
  SIG_DESP_PEDIDOS.hasMany(SIG_DESP_PERSONAL, { as: "SEC_EJEC_SIG_DESP_PERSONALs", foreignKey: "SEC_EJEC"});
  SIG_DESP_PERSONAL.belongsTo(SIG_DESP_PEDIDOS, { as: "SEC_PEDIDO_SIG_DESP_PEDIDO", foreignKey: "SEC_PEDIDO"});
  SIG_DESP_PEDIDOS.hasMany(SIG_DESP_PERSONAL, { as: "SEC_PEDIDO_SIG_DESP_PERSONALs", foreignKey: "SEC_PEDIDO"});
  SIG_DESP_DOC_RENDIDO.belongsTo(SIG_DESP_PLANILLA_PASAJE, { as: "ANO_EJEC2_SIG_DESP_PLANILLA_PASAJE", foreignKey: "ANO_EJEC2"});
  SIG_DESP_PLANILLA_PASAJE.hasMany(SIG_DESP_DOC_RENDIDO, { as: "SIG_DESP_DOC_RENDIDOs", foreignKey: "ANO_EJEC2"});
  SIG_DESP_DOC_RENDIDO.belongsTo(SIG_DESP_PLANILLA_PASAJE, { as: "SEC_EJEC2_SIG_DESP_PLANILLA_PASAJE", foreignKey: "SEC_EJEC2"});
  SIG_DESP_PLANILLA_PASAJE.hasMany(SIG_DESP_DOC_RENDIDO, { as: "SEC_EJEC2_SIG_DESP_DOC_RENDIDOs", foreignKey: "SEC_EJEC2"});
  SIG_DESP_DOC_RENDIDO.belongsTo(SIG_DESP_PLANILLA_PASAJE, { as: "SEC_ITEM_PLA_PAS_SIG_DESP_PLANILLA_PASAJE", foreignKey: "SEC_ITEM_PLA_PAS"});
  SIG_DESP_PLANILLA_PASAJE.hasMany(SIG_DESP_DOC_RENDIDO, { as: "SEC_ITEM_PLA_PAS_SIG_DESP_DOC_RENDIDOs", foreignKey: "SEC_ITEM_PLA_PAS"});
  SIG_DESP_PLAN_PAS_PPTA.belongsTo(SIG_DESP_PLANILLA_PASAJE, { as: "ANO_EJEC_SIG_DESP_PLANILLA_PASAJE", foreignKey: "ANO_EJEC"});
  SIG_DESP_PLANILLA_PASAJE.hasMany(SIG_DESP_PLAN_PAS_PPTA, { as: "SIG_DESP_PLAN_PAS_PPTa", foreignKey: "ANO_EJEC"});
  SIG_DESP_PLAN_PAS_PPTA.belongsTo(SIG_DESP_PLANILLA_PASAJE, { as: "SEC_EJEC_SIG_DESP_PLANILLA_PASAJE", foreignKey: "SEC_EJEC"});
  SIG_DESP_PLANILLA_PASAJE.hasMany(SIG_DESP_PLAN_PAS_PPTA, { as: "SEC_EJEC_SIG_DESP_PLAN_PAS_PPTa", foreignKey: "SEC_EJEC"});
  SIG_DESP_PLAN_PAS_PPTA.belongsTo(SIG_DESP_PLANILLA_PASAJE, { as: "SEC_ITEM_PLA_PAS_SIG_DESP_PLANILLA_PASAJE", foreignKey: "SEC_ITEM_PLA_PAS"});
  SIG_DESP_PLANILLA_PASAJE.hasMany(SIG_DESP_PLAN_PAS_PPTA, { as: "SEC_ITEM_PLA_PAS_SIG_DESP_PLAN_PAS_PPTa", foreignKey: "SEC_ITEM_PLA_PAS"});
  SIG_MOVIM_ALMACEN.belongsTo(SIG_DESTINOS, { as: "SEC_EJEC_SIG_DESTINO", foreignKey: "SEC_EJEC"});
  SIG_DESTINOS.hasMany(SIG_MOVIM_ALMACEN, { as: "SIG_MOVIM_ALMACENs", foreignKey: "SEC_EJEC"});
  SIG_MOVIM_ALMACEN.belongsTo(SIG_DESTINOS, { as: "CODIGO_DESTINO_SIG_DESTINO", foreignKey: "CODIGO_DESTINO"});
  SIG_DESTINOS.hasMany(SIG_MOVIM_ALMACEN, { as: "CODIGO_DESTINO_SIG_MOVIM_ALMACENs", foreignKey: "CODIGO_DESTINO"});
  SIG_PEDIDOS.belongsTo(SIG_DESTINOS, { as: "SEC_EJEC_SIG_DESTINO", foreignKey: "SEC_EJEC"});
  SIG_DESTINOS.hasMany(SIG_PEDIDOS, { as: "SIG_PEDIDOs", foreignKey: "SEC_EJEC"});
  SIG_PEDIDOS.belongsTo(SIG_DESTINOS, { as: "CODIGO_DESTINO_SIG_DESTINO", foreignKey: "CODIGO_DESTINO"});
  SIG_DESTINOS.hasMany(SIG_PEDIDOS, { as: "CODIGO_DESTINO_SIG_PEDIDOs", foreignKey: "CODIGO_DESTINO"});
  SIG_DETALLE_ANEXO_CUADRO.belongsTo(SIG_DETALLE_BSERV_CUADRO, { as: "ANO_EJE_SIG_DETALLE_BSERV_CUADRO", foreignKey: "ANO_EJE"});
  SIG_DETALLE_BSERV_CUADRO.hasMany(SIG_DETALLE_ANEXO_CUADRO, { as: "SIG_DETALLE_ANEXO_CUADROs", foreignKey: "ANO_EJE"});
  SIG_DETALLE_ANEXO_CUADRO.belongsTo(SIG_DETALLE_BSERV_CUADRO, { as: "SEC_CUADRO_SIG_DETALLE_BSERV_CUADRO", foreignKey: "SEC_CUADRO"});
  SIG_DETALLE_BSERV_CUADRO.hasMany(SIG_DETALLE_ANEXO_CUADRO, { as: "SEC_CUADRO_SIG_DETALLE_ANEXO_CUADROs", foreignKey: "SEC_CUADRO"});
  SIG_DETALLE_ANEXO_CUADRO.belongsTo(SIG_DETALLE_BSERV_CUADRO, { as: "SEC_EJEC_SIG_DETALLE_BSERV_CUADRO", foreignKey: "SEC_EJEC"});
  SIG_DETALLE_BSERV_CUADRO.hasMany(SIG_DETALLE_ANEXO_CUADRO, { as: "SEC_EJEC_SIG_DETALLE_ANEXO_CUADROs", foreignKey: "SEC_EJEC"});
  SIG_DETALLE_ANEXO_CUADRO.belongsTo(SIG_DETALLE_BSERV_CUADRO, { as: "SECUENCIA_SIG_DETALLE_BSERV_CUADRO", foreignKey: "SECUENCIA"});
  SIG_DETALLE_BSERV_CUADRO.hasMany(SIG_DETALLE_ANEXO_CUADRO, { as: "SECUENCIA_SIG_DETALLE_ANEXO_CUADROs", foreignKey: "SECUENCIA"});
  SIG_DETALLE_ANEXO_CUADRO.belongsTo(SIG_DETALLE_BSERV_CUADRO, { as: "TIPO_BIEN_SIG_DETALLE_BSERV_CUADRO", foreignKey: "TIPO_BIEN"});
  SIG_DETALLE_BSERV_CUADRO.hasMany(SIG_DETALLE_ANEXO_CUADRO, { as: "TIPO_BIEN_SIG_DETALLE_ANEXO_CUADROs", foreignKey: "TIPO_BIEN"});
  SIG_DETALLE_METAS_CUADRO.belongsTo(SIG_DETALLE_BSERV_CUADRO, { as: "ANO_EJE_SIG_DETALLE_BSERV_CUADRO", foreignKey: "ANO_EJE"});
  SIG_DETALLE_BSERV_CUADRO.hasMany(SIG_DETALLE_METAS_CUADRO, { as: "SIG_DETALLE_METAS_CUADROs", foreignKey: "ANO_EJE"});
  SIG_DETALLE_METAS_CUADRO.belongsTo(SIG_DETALLE_BSERV_CUADRO, { as: "sec_ejec_SIG_DETALLE_BSERV_CUADRO", foreignKey: "sec_ejec"});
  SIG_DETALLE_BSERV_CUADRO.hasMany(SIG_DETALLE_METAS_CUADRO, { as: "sec_ejec_SIG_DETALLE_METAS_CUADROs", foreignKey: "sec_ejec"});
  SIG_DETALLE_METAS_CUADRO.belongsTo(SIG_DETALLE_BSERV_CUADRO, { as: "SEC_CUADRO_SIG_DETALLE_BSERV_CUADRO", foreignKey: "SEC_CUADRO"});
  SIG_DETALLE_BSERV_CUADRO.hasMany(SIG_DETALLE_METAS_CUADRO, { as: "SEC_CUADRO_SIG_DETALLE_METAS_CUADROs", foreignKey: "SEC_CUADRO"});
  SIG_DETALLE_METAS_CUADRO.belongsTo(SIG_DETALLE_BSERV_CUADRO, { as: "SECUENCIA_SIG_DETALLE_BSERV_CUADRO", foreignKey: "SECUENCIA"});
  SIG_DETALLE_BSERV_CUADRO.hasMany(SIG_DETALLE_METAS_CUADRO, { as: "SECUENCIA_SIG_DETALLE_METAS_CUADROs", foreignKey: "SECUENCIA"});
  SIG_DETALLE_METAS_CUADRO.belongsTo(SIG_DETALLE_BSERV_CUADRO, { as: "TIPO_BIEN_SIG_DETALLE_BSERV_CUADRO", foreignKey: "TIPO_BIEN"});
  SIG_DETALLE_BSERV_CUADRO.hasMany(SIG_DETALLE_METAS_CUADRO, { as: "TIPO_BIEN_SIG_DETALLE_METAS_CUADROs", foreignKey: "TIPO_BIEN"});
  SIG_DEPEN_META_CUADRO.belongsTo(SIG_DETALLE_METAS_CUADRO, { as: "ANO_EJE_SIG_DETALLE_METAS_CUADRO", foreignKey: "ANO_EJE"});
  SIG_DETALLE_METAS_CUADRO.hasMany(SIG_DEPEN_META_CUADRO, { as: "SIG_DEPEN_META_CUADROs", foreignKey: "ANO_EJE"});
  SIG_DEPEN_META_CUADRO.belongsTo(SIG_DETALLE_METAS_CUADRO, { as: "SEC_EJEC_SIG_DETALLE_METAS_CUADRO", foreignKey: "SEC_EJEC"});
  SIG_DETALLE_METAS_CUADRO.hasMany(SIG_DEPEN_META_CUADRO, { as: "SEC_EJEC_SIG_DEPEN_META_CUADROs", foreignKey: "SEC_EJEC"});
  SIG_DEPEN_META_CUADRO.belongsTo(SIG_DETALLE_METAS_CUADRO, { as: "SEC_CUADRO_SIG_DETALLE_METAS_CUADRO", foreignKey: "SEC_CUADRO"});
  SIG_DETALLE_METAS_CUADRO.hasMany(SIG_DEPEN_META_CUADRO, { as: "SEC_CUADRO_SIG_DEPEN_META_CUADROs", foreignKey: "SEC_CUADRO"});
  SIG_DEPEN_META_CUADRO.belongsTo(SIG_DETALLE_METAS_CUADRO, { as: "SEC_META_SIG_DETALLE_METAS_CUADRO", foreignKey: "SEC_META"});
  SIG_DETALLE_METAS_CUADRO.hasMany(SIG_DEPEN_META_CUADRO, { as: "SEC_META_SIG_DEPEN_META_CUADROs", foreignKey: "SEC_META"});
  SIG_DEPEN_META_CUADRO.belongsTo(SIG_DETALLE_METAS_CUADRO, { as: "SECUENCIA_SIG_DETALLE_METAS_CUADRO", foreignKey: "SECUENCIA"});
  SIG_DETALLE_METAS_CUADRO.hasMany(SIG_DEPEN_META_CUADRO, { as: "SECUENCIA_SIG_DEPEN_META_CUADROs", foreignKey: "SECUENCIA"});
  SIG_DEPEN_META_CUADRO.belongsTo(SIG_DETALLE_METAS_CUADRO, { as: "TIPO_BIEN_SIG_DETALLE_METAS_CUADRO", foreignKey: "TIPO_BIEN"});
  SIG_DETALLE_METAS_CUADRO.hasMany(SIG_DEPEN_META_CUADRO, { as: "TIPO_BIEN_SIG_DEPEN_META_CUADROs", foreignKey: "TIPO_BIEN"});
  SIG_DETALLE_ALMACEN_LOTES.belongsTo(SIG_DETALLE_MOVIM_ALMACEN, { as: "ALMACEN_SIG_DETALLE_MOVIM_ALMACEN", foreignKey: "ALMACEN"});
  SIG_DETALLE_MOVIM_ALMACEN.hasMany(SIG_DETALLE_ALMACEN_LOTES, { as: "SIG_DETALLE_ALMACEN_LOTEs", foreignKey: "ALMACEN"});
  SIG_DETALLE_ALMACEN_LOTES.belongsTo(SIG_DETALLE_MOVIM_ALMACEN, { as: "ANO_EJE_SIG_DETALLE_MOVIM_ALMACEN", foreignKey: "ANO_EJE"});
  SIG_DETALLE_MOVIM_ALMACEN.hasMany(SIG_DETALLE_ALMACEN_LOTES, { as: "ANO_EJE_SIG_DETALLE_ALMACEN_LOTEs", foreignKey: "ANO_EJE"});
  SIG_DETALLE_ALMACEN_LOTES.belongsTo(SIG_DETALLE_MOVIM_ALMACEN, { as: "NRO_MOVIMTO_SIG_DETALLE_MOVIM_ALMACEN", foreignKey: "NRO_MOVIMTO"});
  SIG_DETALLE_MOVIM_ALMACEN.hasMany(SIG_DETALLE_ALMACEN_LOTES, { as: "NRO_MOVIMTO_SIG_DETALLE_ALMACEN_LOTEs", foreignKey: "NRO_MOVIMTO"});
  SIG_DETALLE_ALMACEN_LOTES.belongsTo(SIG_DETALLE_MOVIM_ALMACEN, { as: "SEC_ALMACEN_SIG_DETALLE_MOVIM_ALMACEN", foreignKey: "SEC_ALMACEN"});
  SIG_DETALLE_MOVIM_ALMACEN.hasMany(SIG_DETALLE_ALMACEN_LOTES, { as: "SEC_ALMACEN_SIG_DETALLE_ALMACEN_LOTEs", foreignKey: "SEC_ALMACEN"});
  SIG_DETALLE_ALMACEN_LOTES.belongsTo(SIG_DETALLE_MOVIM_ALMACEN, { as: "SEC_DETALLE_SIG_DETALLE_MOVIM_ALMACEN", foreignKey: "SEC_DETALLE"});
  SIG_DETALLE_MOVIM_ALMACEN.hasMany(SIG_DETALLE_ALMACEN_LOTES, { as: "SEC_DETALLE_SIG_DETALLE_ALMACEN_LOTEs", foreignKey: "SEC_DETALLE"});
  SIG_DETALLE_ALMACEN_LOTES.belongsTo(SIG_DETALLE_MOVIM_ALMACEN, { as: "sec_ejec_SIG_DETALLE_MOVIM_ALMACEN", foreignKey: "sec_ejec"});
  SIG_DETALLE_MOVIM_ALMACEN.hasMany(SIG_DETALLE_ALMACEN_LOTES, { as: "sec_ejec_SIG_DETALLE_ALMACEN_LOTEs", foreignKey: "sec_ejec"});
  SIG_DETALLE_ALMACEN_LOTES.belongsTo(SIG_DETALLE_MOVIM_ALMACEN, { as: "SECUENCIA_SIG_DETALLE_MOVIM_ALMACEN", foreignKey: "SECUENCIA"});
  SIG_DETALLE_MOVIM_ALMACEN.hasMany(SIG_DETALLE_ALMACEN_LOTES, { as: "SECUENCIA_SIG_DETALLE_ALMACEN_LOTEs", foreignKey: "SECUENCIA"});
  SIG_DETALLE_ALMACEN_LOTES.belongsTo(SIG_DETALLE_MOVIM_ALMACEN, { as: "TIPO_MOVIMTO_SIG_DETALLE_MOVIM_ALMACEN", foreignKey: "TIPO_MOVIMTO"});
  SIG_DETALLE_MOVIM_ALMACEN.hasMany(SIG_DETALLE_ALMACEN_LOTES, { as: "TIPO_MOVIMTO_SIG_DETALLE_ALMACEN_LOTEs", foreignKey: "TIPO_MOVIMTO"});
  SIG_DETALLE_ALMACEN_LOTES.belongsTo(SIG_DETALLE_MOVIM_ALMACEN, { as: "TIPO_PPTO_SIG_DETALLE_MOVIM_ALMACEN", foreignKey: "TIPO_PPTO"});
  SIG_DETALLE_MOVIM_ALMACEN.hasMany(SIG_DETALLE_ALMACEN_LOTES, { as: "TIPO_PPTO_SIG_DETALLE_ALMACEN_LOTEs", foreignKey: "TIPO_PPTO"});
  SIG_DETALLE_ALMACEN_LOTES.belongsTo(SIG_DETALLE_MOVIM_ALMACEN, { as: "TIPO_TRANSAC_SIG_DETALLE_MOVIM_ALMACEN", foreignKey: "TIPO_TRANSAC"});
  SIG_DETALLE_MOVIM_ALMACEN.hasMany(SIG_DETALLE_ALMACEN_LOTES, { as: "TIPO_TRANSAC_SIG_DETALLE_ALMACEN_LOTEs", foreignKey: "TIPO_TRANSAC"});
  SIG_DETALLE_MOVIM_PPTO.belongsTo(SIG_DETALLE_MOVIM_ALMACEN, { as: "ALMACEN_SIG_DETALLE_MOVIM_ALMACEN", foreignKey: "ALMACEN"});
  SIG_DETALLE_MOVIM_ALMACEN.hasMany(SIG_DETALLE_MOVIM_PPTO, { as: "SIG_DETALLE_MOVIM_PPTOs", foreignKey: "ALMACEN"});
  SIG_DETALLE_MOVIM_PPTO.belongsTo(SIG_DETALLE_MOVIM_ALMACEN, { as: "ANO_EJE_SIG_DETALLE_MOVIM_ALMACEN", foreignKey: "ANO_EJE"});
  SIG_DETALLE_MOVIM_ALMACEN.hasMany(SIG_DETALLE_MOVIM_PPTO, { as: "ANO_EJE_SIG_DETALLE_MOVIM_PPTOs", foreignKey: "ANO_EJE"});
  SIG_DETALLE_MOVIM_PPTO.belongsTo(SIG_DETALLE_MOVIM_ALMACEN, { as: "NRO_MOVIMTO_SIG_DETALLE_MOVIM_ALMACEN", foreignKey: "NRO_MOVIMTO"});
  SIG_DETALLE_MOVIM_ALMACEN.hasMany(SIG_DETALLE_MOVIM_PPTO, { as: "NRO_MOVIMTO_SIG_DETALLE_MOVIM_PPTOs", foreignKey: "NRO_MOVIMTO"});
  SIG_DETALLE_MOVIM_PPTO.belongsTo(SIG_DETALLE_MOVIM_ALMACEN, { as: "SEC_ALMACEN_SIG_DETALLE_MOVIM_ALMACEN", foreignKey: "SEC_ALMACEN"});
  SIG_DETALLE_MOVIM_ALMACEN.hasMany(SIG_DETALLE_MOVIM_PPTO, { as: "SEC_ALMACEN_SIG_DETALLE_MOVIM_PPTOs", foreignKey: "SEC_ALMACEN"});
  SIG_DETALLE_MOVIM_PPTO.belongsTo(SIG_DETALLE_MOVIM_ALMACEN, { as: "SEC_DETALLE_SIG_DETALLE_MOVIM_ALMACEN", foreignKey: "SEC_DETALLE"});
  SIG_DETALLE_MOVIM_ALMACEN.hasMany(SIG_DETALLE_MOVIM_PPTO, { as: "SEC_DETALLE_SIG_DETALLE_MOVIM_PPTOs", foreignKey: "SEC_DETALLE"});
  SIG_DETALLE_MOVIM_PPTO.belongsTo(SIG_DETALLE_MOVIM_ALMACEN, { as: "sec_ejec_SIG_DETALLE_MOVIM_ALMACEN", foreignKey: "sec_ejec"});
  SIG_DETALLE_MOVIM_ALMACEN.hasMany(SIG_DETALLE_MOVIM_PPTO, { as: "sec_ejec_SIG_DETALLE_MOVIM_PPTOs", foreignKey: "sec_ejec"});
  SIG_DETALLE_MOVIM_PPTO.belongsTo(SIG_DETALLE_MOVIM_ALMACEN, { as: "SECUENCIA_SIG_DETALLE_MOVIM_ALMACEN", foreignKey: "SECUENCIA"});
  SIG_DETALLE_MOVIM_ALMACEN.hasMany(SIG_DETALLE_MOVIM_PPTO, { as: "SECUENCIA_SIG_DETALLE_MOVIM_PPTOs", foreignKey: "SECUENCIA"});
  SIG_DETALLE_MOVIM_PPTO.belongsTo(SIG_DETALLE_MOVIM_ALMACEN, { as: "TIPO_MOVIMTO_SIG_DETALLE_MOVIM_ALMACEN", foreignKey: "TIPO_MOVIMTO"});
  SIG_DETALLE_MOVIM_ALMACEN.hasMany(SIG_DETALLE_MOVIM_PPTO, { as: "TIPO_MOVIMTO_SIG_DETALLE_MOVIM_PPTOs", foreignKey: "TIPO_MOVIMTO"});
  SIG_DETALLE_MOVIM_PPTO.belongsTo(SIG_DETALLE_MOVIM_ALMACEN, { as: "TIPO_PPTO_SIG_DETALLE_MOVIM_ALMACEN", foreignKey: "TIPO_PPTO"});
  SIG_DETALLE_MOVIM_ALMACEN.hasMany(SIG_DETALLE_MOVIM_PPTO, { as: "TIPO_PPTO_SIG_DETALLE_MOVIM_PPTOs", foreignKey: "TIPO_PPTO"});
  SIG_DETALLE_MOVIM_PPTO.belongsTo(SIG_DETALLE_MOVIM_ALMACEN, { as: "TIPO_TRANSAC_SIG_DETALLE_MOVIM_ALMACEN", foreignKey: "TIPO_TRANSAC"});
  SIG_DETALLE_MOVIM_ALMACEN.hasMany(SIG_DETALLE_MOVIM_PPTO, { as: "TIPO_TRANSAC_SIG_DETALLE_MOVIM_PPTOs", foreignKey: "TIPO_TRANSAC"});
  SIG_DETALLE_MOVIM_PPTO_CF.belongsTo(SIG_DETALLE_MOVIM_CONFOR_SERV, { as: "ANO_EJE_SIG_DETALLE_MOVIM_CONFOR_SERV", foreignKey: "ANO_EJE"});
  SIG_DETALLE_MOVIM_CONFOR_SERV.hasMany(SIG_DETALLE_MOVIM_PPTO_CF, { as: "SIG_DETALLE_MOVIM_PPTO_CFs", foreignKey: "ANO_EJE"});
  SIG_DETALLE_MOVIM_PPTO_CF.belongsTo(SIG_DETALLE_MOVIM_CONFOR_SERV, { as: "NRO_MOVIMTO_SIG_DETALLE_MOVIM_CONFOR_SERV", foreignKey: "NRO_MOVIMTO"});
  SIG_DETALLE_MOVIM_CONFOR_SERV.hasMany(SIG_DETALLE_MOVIM_PPTO_CF, { as: "NRO_MOVIMTO_SIG_DETALLE_MOVIM_PPTO_CFs", foreignKey: "NRO_MOVIMTO"});
  SIG_DETALLE_MOVIM_PPTO_CF.belongsTo(SIG_DETALLE_MOVIM_CONFOR_SERV, { as: "SEC_DETALLE_SIG_DETALLE_MOVIM_CONFOR_SERV", foreignKey: "SEC_DETALLE"});
  SIG_DETALLE_MOVIM_CONFOR_SERV.hasMany(SIG_DETALLE_MOVIM_PPTO_CF, { as: "SEC_DETALLE_SIG_DETALLE_MOVIM_PPTO_CFs", foreignKey: "SEC_DETALLE"});
  SIG_DETALLE_MOVIM_PPTO_CF.belongsTo(SIG_DETALLE_MOVIM_CONFOR_SERV, { as: "SEC_EJEC_SIG_DETALLE_MOVIM_CONFOR_SERV", foreignKey: "SEC_EJEC"});
  SIG_DETALLE_MOVIM_CONFOR_SERV.hasMany(SIG_DETALLE_MOVIM_PPTO_CF, { as: "SEC_EJEC_SIG_DETALLE_MOVIM_PPTO_CFs", foreignKey: "SEC_EJEC"});
  SIG_DETALLE_MOVIM_PPTO_CF.belongsTo(SIG_DETALLE_MOVIM_CONFOR_SERV, { as: "SECUENCIA_SIG_DETALLE_MOVIM_CONFOR_SERV", foreignKey: "SECUENCIA"});
  SIG_DETALLE_MOVIM_CONFOR_SERV.hasMany(SIG_DETALLE_MOVIM_PPTO_CF, { as: "SECUENCIA_SIG_DETALLE_MOVIM_PPTO_CFs", foreignKey: "SECUENCIA"});
  SIG_DETALLE_MOVIM_PPTO_CF.belongsTo(SIG_DETALLE_MOVIM_CONFOR_SERV, { as: "TIPO_MOVIMTO_SIG_DETALLE_MOVIM_CONFOR_SERV", foreignKey: "TIPO_MOVIMTO"});
  SIG_DETALLE_MOVIM_CONFOR_SERV.hasMany(SIG_DETALLE_MOVIM_PPTO_CF, { as: "TIPO_MOVIMTO_SIG_DETALLE_MOVIM_PPTO_CFs", foreignKey: "TIPO_MOVIMTO"});
  SIG_DETALLE_MOVIM_PPTO_CF.belongsTo(SIG_DETALLE_MOVIM_CONFOR_SERV, { as: "TIPO_PPTO_SIG_DETALLE_MOVIM_CONFOR_SERV", foreignKey: "TIPO_PPTO"});
  SIG_DETALLE_MOVIM_CONFOR_SERV.hasMany(SIG_DETALLE_MOVIM_PPTO_CF, { as: "TIPO_PPTO_SIG_DETALLE_MOVIM_PPTO_CFs", foreignKey: "TIPO_PPTO"});
  SIG_DETALLE_MOVIM_PPTO_CF.belongsTo(SIG_DETALLE_MOVIM_CONFOR_SERV, { as: "TIPO_TRANSAC_SIG_DETALLE_MOVIM_CONFOR_SERV", foreignKey: "TIPO_TRANSAC"});
  SIG_DETALLE_MOVIM_CONFOR_SERV.hasMany(SIG_DETALLE_MOVIM_PPTO_CF, { as: "TIPO_TRANSAC_SIG_DETALLE_MOVIM_PPTO_CFs", foreignKey: "TIPO_TRANSAC"});
  SIG_DETALLE_CTA_ALMACEN.belongsTo(SIG_DETALLE_MOVIM_PPTO, { as: "ALMACEN_SIG_DETALLE_MOVIM_PPTO", foreignKey: "ALMACEN"});
  SIG_DETALLE_MOVIM_PPTO.hasMany(SIG_DETALLE_CTA_ALMACEN, { as: "SIG_DETALLE_CTA_ALMACENs", foreignKey: "ALMACEN"});
  SIG_DETALLE_CTA_ALMACEN.belongsTo(SIG_DETALLE_MOVIM_PPTO, { as: "ANO_EJE_SIG_DETALLE_MOVIM_PPTO", foreignKey: "ANO_EJE"});
  SIG_DETALLE_MOVIM_PPTO.hasMany(SIG_DETALLE_CTA_ALMACEN, { as: "ANO_EJE_SIG_DETALLE_CTA_ALMACENs", foreignKey: "ANO_EJE"});
  SIG_DETALLE_CTA_ALMACEN.belongsTo(SIG_DETALLE_MOVIM_PPTO, { as: "NRO_MOVIMTO_SIG_DETALLE_MOVIM_PPTO", foreignKey: "NRO_MOVIMTO"});
  SIG_DETALLE_MOVIM_PPTO.hasMany(SIG_DETALLE_CTA_ALMACEN, { as: "NRO_MOVIMTO_SIG_DETALLE_CTA_ALMACENs", foreignKey: "NRO_MOVIMTO"});
  SIG_DETALLE_CTA_ALMACEN.belongsTo(SIG_DETALLE_MOVIM_PPTO, { as: "SEC_ALMACEN_SIG_DETALLE_MOVIM_PPTO", foreignKey: "SEC_ALMACEN"});
  SIG_DETALLE_MOVIM_PPTO.hasMany(SIG_DETALLE_CTA_ALMACEN, { as: "SEC_ALMACEN_SIG_DETALLE_CTA_ALMACENs", foreignKey: "SEC_ALMACEN"});
  SIG_DETALLE_CTA_ALMACEN.belongsTo(SIG_DETALLE_MOVIM_PPTO, { as: "SEC_DETALLE_SIG_DETALLE_MOVIM_PPTO", foreignKey: "SEC_DETALLE"});
  SIG_DETALLE_MOVIM_PPTO.hasMany(SIG_DETALLE_CTA_ALMACEN, { as: "SEC_DETALLE_SIG_DETALLE_CTA_ALMACENs", foreignKey: "SEC_DETALLE"});
  SIG_DETALLE_CTA_ALMACEN.belongsTo(SIG_DETALLE_MOVIM_PPTO, { as: "sec_ejec_SIG_DETALLE_MOVIM_PPTO", foreignKey: "sec_ejec"});
  SIG_DETALLE_MOVIM_PPTO.hasMany(SIG_DETALLE_CTA_ALMACEN, { as: "sec_ejec_SIG_DETALLE_CTA_ALMACENs", foreignKey: "sec_ejec"});
  SIG_DETALLE_CTA_ALMACEN.belongsTo(SIG_DETALLE_MOVIM_PPTO, { as: "SEC_PPTO_SIG_DETALLE_MOVIM_PPTO", foreignKey: "SEC_PPTO"});
  SIG_DETALLE_MOVIM_PPTO.hasMany(SIG_DETALLE_CTA_ALMACEN, { as: "SEC_PPTO_SIG_DETALLE_CTA_ALMACENs", foreignKey: "SEC_PPTO"});
  SIG_DETALLE_CTA_ALMACEN.belongsTo(SIG_DETALLE_MOVIM_PPTO, { as: "SECUENCIA_SIG_DETALLE_MOVIM_PPTO", foreignKey: "SECUENCIA"});
  SIG_DETALLE_MOVIM_PPTO.hasMany(SIG_DETALLE_CTA_ALMACEN, { as: "SECUENCIA_SIG_DETALLE_CTA_ALMACENs", foreignKey: "SECUENCIA"});
  SIG_DETALLE_CTA_ALMACEN.belongsTo(SIG_DETALLE_MOVIM_PPTO, { as: "TIPO_MOVIMTO_SIG_DETALLE_MOVIM_PPTO", foreignKey: "TIPO_MOVIMTO"});
  SIG_DETALLE_MOVIM_PPTO.hasMany(SIG_DETALLE_CTA_ALMACEN, { as: "TIPO_MOVIMTO_SIG_DETALLE_CTA_ALMACENs", foreignKey: "TIPO_MOVIMTO"});
  SIG_DETALLE_CTA_ALMACEN.belongsTo(SIG_DETALLE_MOVIM_PPTO, { as: "TIPO_PPTO_SIG_DETALLE_MOVIM_PPTO", foreignKey: "TIPO_PPTO"});
  SIG_DETALLE_MOVIM_PPTO.hasMany(SIG_DETALLE_CTA_ALMACEN, { as: "TIPO_PPTO_SIG_DETALLE_CTA_ALMACENs", foreignKey: "TIPO_PPTO"});
  SIG_DETALLE_CTA_ALMACEN.belongsTo(SIG_DETALLE_MOVIM_PPTO, { as: "TIPO_TRANSAC_SIG_DETALLE_MOVIM_PPTO", foreignKey: "TIPO_TRANSAC"});
  SIG_DETALLE_MOVIM_PPTO.hasMany(SIG_DETALLE_CTA_ALMACEN, { as: "TIPO_TRANSAC_SIG_DETALLE_CTA_ALMACENs", foreignKey: "TIPO_TRANSAC"});
  SIG_DETALLE_CTA_CONFOR_SERV.belongsTo(SIG_DETALLE_MOVIM_PPTO_CF, { as: "ANO_EJE_SIG_DETALLE_MOVIM_PPTO_CF", foreignKey: "ANO_EJE"});
  SIG_DETALLE_MOVIM_PPTO_CF.hasMany(SIG_DETALLE_CTA_CONFOR_SERV, { as: "SIG_DETALLE_CTA_CONFOR_SERVs", foreignKey: "ANO_EJE"});
  SIG_DETALLE_CTA_CONFOR_SERV.belongsTo(SIG_DETALLE_MOVIM_PPTO_CF, { as: "NRO_MOVIMTO_SIG_DETALLE_MOVIM_PPTO_CF", foreignKey: "NRO_MOVIMTO"});
  SIG_DETALLE_MOVIM_PPTO_CF.hasMany(SIG_DETALLE_CTA_CONFOR_SERV, { as: "NRO_MOVIMTO_SIG_DETALLE_CTA_CONFOR_SERVs", foreignKey: "NRO_MOVIMTO"});
  SIG_DETALLE_CTA_CONFOR_SERV.belongsTo(SIG_DETALLE_MOVIM_PPTO_CF, { as: "SEC_DETALLE_SIG_DETALLE_MOVIM_PPTO_CF", foreignKey: "SEC_DETALLE"});
  SIG_DETALLE_MOVIM_PPTO_CF.hasMany(SIG_DETALLE_CTA_CONFOR_SERV, { as: "SEC_DETALLE_SIG_DETALLE_CTA_CONFOR_SERVs", foreignKey: "SEC_DETALLE"});
  SIG_DETALLE_CTA_CONFOR_SERV.belongsTo(SIG_DETALLE_MOVIM_PPTO_CF, { as: "SEC_EJEC_SIG_DETALLE_MOVIM_PPTO_CF", foreignKey: "SEC_EJEC"});
  SIG_DETALLE_MOVIM_PPTO_CF.hasMany(SIG_DETALLE_CTA_CONFOR_SERV, { as: "SEC_EJEC_SIG_DETALLE_CTA_CONFOR_SERVs", foreignKey: "SEC_EJEC"});
  SIG_DETALLE_CTA_CONFOR_SERV.belongsTo(SIG_DETALLE_MOVIM_PPTO_CF, { as: "SEC_PPTO_SIG_DETALLE_MOVIM_PPTO_CF", foreignKey: "SEC_PPTO"});
  SIG_DETALLE_MOVIM_PPTO_CF.hasMany(SIG_DETALLE_CTA_CONFOR_SERV, { as: "SEC_PPTO_SIG_DETALLE_CTA_CONFOR_SERVs", foreignKey: "SEC_PPTO"});
  SIG_DETALLE_CTA_CONFOR_SERV.belongsTo(SIG_DETALLE_MOVIM_PPTO_CF, { as: "SECUENCIA_SIG_DETALLE_MOVIM_PPTO_CF", foreignKey: "SECUENCIA"});
  SIG_DETALLE_MOVIM_PPTO_CF.hasMany(SIG_DETALLE_CTA_CONFOR_SERV, { as: "SECUENCIA_SIG_DETALLE_CTA_CONFOR_SERVs", foreignKey: "SECUENCIA"});
  SIG_DETALLE_CTA_CONFOR_SERV.belongsTo(SIG_DETALLE_MOVIM_PPTO_CF, { as: "TIPO_MOVIMTO_SIG_DETALLE_MOVIM_PPTO_CF", foreignKey: "TIPO_MOVIMTO"});
  SIG_DETALLE_MOVIM_PPTO_CF.hasMany(SIG_DETALLE_CTA_CONFOR_SERV, { as: "TIPO_MOVIMTO_SIG_DETALLE_CTA_CONFOR_SERVs", foreignKey: "TIPO_MOVIMTO"});
  SIG_DETALLE_CTA_CONFOR_SERV.belongsTo(SIG_DETALLE_MOVIM_PPTO_CF, { as: "TIPO_PPTO_SIG_DETALLE_MOVIM_PPTO_CF", foreignKey: "TIPO_PPTO"});
  SIG_DETALLE_MOVIM_PPTO_CF.hasMany(SIG_DETALLE_CTA_CONFOR_SERV, { as: "TIPO_PPTO_SIG_DETALLE_CTA_CONFOR_SERVs", foreignKey: "TIPO_PPTO"});
  SIG_DETALLE_CTA_CONFOR_SERV.belongsTo(SIG_DETALLE_MOVIM_PPTO_CF, { as: "TIPO_TRANSAC_SIG_DETALLE_MOVIM_PPTO_CF", foreignKey: "TIPO_TRANSAC"});
  SIG_DETALLE_MOVIM_PPTO_CF.hasMany(SIG_DETALLE_CTA_CONFOR_SERV, { as: "TIPO_TRANSAC_SIG_DETALLE_CTA_CONFOR_SERVs", foreignKey: "TIPO_TRANSAC"});
  SIG_DETALLE_PECOSA.belongsTo(SIG_DETALLE_PEDIDOS, { as: "ANO_EJE_SIG_DETALLE_PEDIDO", foreignKey: "ANO_EJE"});
  SIG_DETALLE_PEDIDOS.hasMany(SIG_DETALLE_PECOSA, { as: "SIG_DETALLE_PECOSAs", foreignKey: "ANO_EJE"});
  SIG_DETALLE_PECOSA.belongsTo(SIG_DETALLE_PEDIDOS, { as: "NRO_PEDIDO_SIG_DETALLE_PEDIDO", foreignKey: "NRO_PEDIDO"});
  SIG_DETALLE_PEDIDOS.hasMany(SIG_DETALLE_PECOSA, { as: "NRO_PEDIDO_SIG_DETALLE_PECOSAs", foreignKey: "NRO_PEDIDO"});
  SIG_DETALLE_PECOSA.belongsTo(SIG_DETALLE_PEDIDOS, { as: "sec_ejec_SIG_DETALLE_PEDIDO", foreignKey: "sec_ejec"});
  SIG_DETALLE_PEDIDOS.hasMany(SIG_DETALLE_PECOSA, { as: "sec_ejec_SIG_DETALLE_PECOSAs", foreignKey: "sec_ejec"});
  SIG_DETALLE_PECOSA.belongsTo(SIG_DETALLE_PEDIDOS, { as: "SECUENCIA_SIG_DETALLE_PEDIDO", foreignKey: "SECUENCIA"});
  SIG_DETALLE_PEDIDOS.hasMany(SIG_DETALLE_PECOSA, { as: "SECUENCIA_SIG_DETALLE_PECOSAs", foreignKey: "SECUENCIA"});
  SIG_DETALLE_PECOSA.belongsTo(SIG_DETALLE_PEDIDOS, { as: "TIPO_BIEN_SIG_DETALLE_PEDIDO", foreignKey: "TIPO_BIEN"});
  SIG_DETALLE_PEDIDOS.hasMany(SIG_DETALLE_PECOSA, { as: "TIPO_BIEN_SIG_DETALLE_PECOSAs", foreignKey: "TIPO_BIEN"});
  SIG_DETALLE_PECOSA.belongsTo(SIG_DETALLE_PEDIDOS, { as: "TIPO_PEDIDO_SIG_DETALLE_PEDIDO", foreignKey: "TIPO_PEDIDO"});
  SIG_DETALLE_PEDIDOS.hasMany(SIG_DETALLE_PECOSA, { as: "TIPO_PEDIDO_SIG_DETALLE_PECOSAs", foreignKey: "TIPO_PEDIDO"});
  SIG_DETALLE_PEDIDOS_ANEXO.belongsTo(SIG_DETALLE_PEDIDOS, { as: "ANO_EJE_SIG_DETALLE_PEDIDO", foreignKey: "ANO_EJE"});
  SIG_DETALLE_PEDIDOS.hasMany(SIG_DETALLE_PEDIDOS_ANEXO, { as: "SIG_DETALLE_PEDIDOS_ANEXOs", foreignKey: "ANO_EJE"});
  SIG_DETALLE_PEDIDOS_ANEXO.belongsTo(SIG_DETALLE_PEDIDOS, { as: "NRO_PEDIDO_SIG_DETALLE_PEDIDO", foreignKey: "NRO_PEDIDO"});
  SIG_DETALLE_PEDIDOS.hasMany(SIG_DETALLE_PEDIDOS_ANEXO, { as: "NRO_PEDIDO_SIG_DETALLE_PEDIDOS_ANEXOs", foreignKey: "NRO_PEDIDO"});
  SIG_DETALLE_PEDIDOS_ANEXO.belongsTo(SIG_DETALLE_PEDIDOS, { as: "sec_ejec_SIG_DETALLE_PEDIDO", foreignKey: "sec_ejec"});
  SIG_DETALLE_PEDIDOS.hasMany(SIG_DETALLE_PEDIDOS_ANEXO, { as: "sec_ejec_SIG_DETALLE_PEDIDOS_ANEXOs", foreignKey: "sec_ejec"});
  SIG_DETALLE_PEDIDOS_ANEXO.belongsTo(SIG_DETALLE_PEDIDOS, { as: "SECUENCIA_SIG_DETALLE_PEDIDO", foreignKey: "SECUENCIA"});
  SIG_DETALLE_PEDIDOS.hasMany(SIG_DETALLE_PEDIDOS_ANEXO, { as: "SECUENCIA_SIG_DETALLE_PEDIDOS_ANEXOs", foreignKey: "SECUENCIA"});
  SIG_DETALLE_PEDIDOS_ANEXO.belongsTo(SIG_DETALLE_PEDIDOS, { as: "TIPO_BIEN_SIG_DETALLE_PEDIDO", foreignKey: "TIPO_BIEN"});
  SIG_DETALLE_PEDIDOS.hasMany(SIG_DETALLE_PEDIDOS_ANEXO, { as: "TIPO_BIEN_SIG_DETALLE_PEDIDOS_ANEXOs", foreignKey: "TIPO_BIEN"});
  SIG_DETALLE_PEDIDOS_ANEXO.belongsTo(SIG_DETALLE_PEDIDOS, { as: "TIPO_PEDIDO_SIG_DETALLE_PEDIDO", foreignKey: "TIPO_PEDIDO"});
  SIG_DETALLE_PEDIDOS.hasMany(SIG_DETALLE_PEDIDOS_ANEXO, { as: "TIPO_PEDIDO_SIG_DETALLE_PEDIDOS_ANEXOs", foreignKey: "TIPO_PEDIDO"});
  SIG_DETALLE_PEDIDO_COMISIONADO.belongsTo(SIG_DETALLE_PEDIDOS, { as: "ANO_EJE_SIG_DETALLE_PEDIDO", foreignKey: "ANO_EJE"});
  SIG_DETALLE_PEDIDOS.hasMany(SIG_DETALLE_PEDIDO_COMISIONADO, { as: "SIG_DETALLE_PEDIDO_COMISIONADOs", foreignKey: "ANO_EJE"});
  SIG_DETALLE_PEDIDO_COMISIONADO.belongsTo(SIG_DETALLE_PEDIDOS, { as: "NRO_PEDIDO_SIG_DETALLE_PEDIDO", foreignKey: "NRO_PEDIDO"});
  SIG_DETALLE_PEDIDOS.hasMany(SIG_DETALLE_PEDIDO_COMISIONADO, { as: "NRO_PEDIDO_SIG_DETALLE_PEDIDO_COMISIONADOs", foreignKey: "NRO_PEDIDO"});
  SIG_DETALLE_PEDIDO_COMISIONADO.belongsTo(SIG_DETALLE_PEDIDOS, { as: "SECUENCIA_SIG_DETALLE_PEDIDO", foreignKey: "SECUENCIA"});
  SIG_DETALLE_PEDIDOS.hasMany(SIG_DETALLE_PEDIDO_COMISIONADO, { as: "SECUENCIA_SIG_DETALLE_PEDIDO_COMISIONADOs", foreignKey: "SECUENCIA"});
  SIG_DETALLE_PEDIDO_COMISIONADO.belongsTo(SIG_DETALLE_PEDIDOS, { as: "TIPO_BIEN_SIG_DETALLE_PEDIDO", foreignKey: "TIPO_BIEN"});
  SIG_DETALLE_PEDIDOS.hasMany(SIG_DETALLE_PEDIDO_COMISIONADO, { as: "TIPO_BIEN_SIG_DETALLE_PEDIDO_COMISIONADOs", foreignKey: "TIPO_BIEN"});
  SIG_DETALLE_PEDIDO_COMISIONADO.belongsTo(SIG_DETALLE_PEDIDOS, { as: "TIPO_PEDIDO_SIG_DETALLE_PEDIDO", foreignKey: "TIPO_PEDIDO"});
  SIG_DETALLE_PEDIDOS.hasMany(SIG_DETALLE_PEDIDO_COMISIONADO, { as: "TIPO_PEDIDO_SIG_DETALLE_PEDIDO_COMISIONADOs", foreignKey: "TIPO_PEDIDO"});
  SIG_DET_ADMIN_INM_COMP.belongsTo(SIG_DET_ADMINISTRATIVO, { as: "ANO_EJE_SIG_DET_ADMINISTRATIVO", foreignKey: "ANO_EJE"});
  SIG_DET_ADMINISTRATIVO.hasMany(SIG_DET_ADMIN_INM_COMP, { as: "SIG_DET_ADMIN_INM_COMPs", foreignKey: "ANO_EJE"});
  SIG_DET_ADMIN_INM_COMP.belongsTo(SIG_DET_ADMINISTRATIVO, { as: "MES_EJE_SIG_DET_ADMINISTRATIVO", foreignKey: "MES_EJE"});
  SIG_DET_ADMINISTRATIVO.hasMany(SIG_DET_ADMIN_INM_COMP, { as: "MES_EJE_SIG_DET_ADMIN_INM_COMPs", foreignKey: "MES_EJE"});
  SIG_DET_ADMIN_INM_COMP.belongsTo(SIG_DET_ADMINISTRATIVO, { as: "NRO_MOVIMTO_SIG_DET_ADMINISTRATIVO", foreignKey: "NRO_MOVIMTO"});
  SIG_DET_ADMINISTRATIVO.hasMany(SIG_DET_ADMIN_INM_COMP, { as: "NRO_MOVIMTO_SIG_DET_ADMIN_INM_COMPs", foreignKey: "NRO_MOVIMTO"});
  SIG_DET_ADMIN_INM_COMP.belongsTo(SIG_DET_ADMINISTRATIVO, { as: "NRO_SECUENCIA_SIG_DET_ADMINISTRATIVO", foreignKey: "NRO_SECUENCIA"});
  SIG_DET_ADMINISTRATIVO.hasMany(SIG_DET_ADMIN_INM_COMP, { as: "NRO_SECUENCIA_SIG_DET_ADMIN_INM_COMPs", foreignKey: "NRO_SECUENCIA"});
  SIG_DET_ADMIN_INM_COMP.belongsTo(SIG_DET_ADMINISTRATIVO, { as: "SEC_EJEC_SIG_DET_ADMINISTRATIVO", foreignKey: "SEC_EJEC"});
  SIG_DET_ADMINISTRATIVO.hasMany(SIG_DET_ADMIN_INM_COMP, { as: "SEC_EJEC_SIG_DET_ADMIN_INM_COMPs", foreignKey: "SEC_EJEC"});
  SIG_DET_ADMIN_INM_COMP.belongsTo(SIG_DET_ADMINISTRATIVO, { as: "TIPO_ACTO_ADM_SIG_DET_ADMINISTRATIVO", foreignKey: "TIPO_ACTO_ADM"});
  SIG_DET_ADMINISTRATIVO.hasMany(SIG_DET_ADMIN_INM_COMP, { as: "TIPO_ACTO_ADM_SIG_DET_ADMIN_INM_COMPs", foreignKey: "TIPO_ACTO_ADM"});
  SIG_DET_ADMIN_INM_COMP.belongsTo(SIG_DET_ADMINISTRATIVO, { as: "TIPO_PATRIMONIO_SIG_DET_ADMINISTRATIVO", foreignKey: "TIPO_PATRIMONIO"});
  SIG_DET_ADMINISTRATIVO.hasMany(SIG_DET_ADMIN_INM_COMP, { as: "TIPO_PATRIMONIO_SIG_DET_ADMIN_INM_COMPs", foreignKey: "TIPO_PATRIMONIO"});
  SIG_DEVENGADO_DOC_SECU.belongsTo(SIG_DEVENGADO, { as: "ANO_EJE_SIG_DEVENGADO", foreignKey: "ANO_EJE"});
  SIG_DEVENGADO.hasMany(SIG_DEVENGADO_DOC_SECU, { as: "SIG_DEVENGADO_DOC_SECUs", foreignKey: "ANO_EJE"});
  SIG_DEVENGADO_DOC_SECU.belongsTo(SIG_DEVENGADO, { as: "NRO_DEVENGADO_SIG_DEVENGADO", foreignKey: "NRO_DEVENGADO"});
  SIG_DEVENGADO.hasMany(SIG_DEVENGADO_DOC_SECU, { as: "NRO_DEVENGADO_SIG_DEVENGADO_DOC_SECUs", foreignKey: "NRO_DEVENGADO"});
  SIG_DEVENGADO_DOC_SECU.belongsTo(SIG_DEVENGADO, { as: "SEC_EJEC_SIG_DEVENGADO", foreignKey: "SEC_EJEC"});
  SIG_DEVENGADO.hasMany(SIG_DEVENGADO_DOC_SECU, { as: "SEC_EJEC_SIG_DEVENGADO_DOC_SECUs", foreignKey: "SEC_EJEC"});
  SIG_DEVENGADO_SECUENCIA.belongsTo(SIG_DEVENGADO, { as: "ANO_EJE_SIG_DEVENGADO", foreignKey: "ANO_EJE"});
  SIG_DEVENGADO.hasMany(SIG_DEVENGADO_SECUENCIA, { as: "SIG_DEVENGADO_SECUENCIa", foreignKey: "ANO_EJE"});
  SIG_DEVENGADO_SECUENCIA.belongsTo(SIG_DEVENGADO, { as: "NRO_DEVENGADO_SIG_DEVENGADO", foreignKey: "NRO_DEVENGADO"});
  SIG_DEVENGADO.hasMany(SIG_DEVENGADO_SECUENCIA, { as: "NRO_DEVENGADO_SIG_DEVENGADO_SECUENCIa", foreignKey: "NRO_DEVENGADO"});
  SIG_DEVENGADO_SECUENCIA.belongsTo(SIG_DEVENGADO, { as: "SEC_EJEC_SIG_DEVENGADO", foreignKey: "SEC_EJEC"});
  SIG_DEVENGADO.hasMany(SIG_DEVENGADO_SECUENCIA, { as: "SEC_EJEC_SIG_DEVENGADO_SECUENCIa", foreignKey: "SEC_EJEC"});
  SIG_DEVENGADO_ITEM_PPTO.belongsTo(SIG_DEVENGADO_ITEM, { as: "ANO_EJE_SIG_DEVENGADO_ITEM", foreignKey: "ANO_EJE"});
  SIG_DEVENGADO_ITEM.hasMany(SIG_DEVENGADO_ITEM_PPTO, { as: "SIG_DEVENGADO_ITEM_PPTOs", foreignKey: "ANO_EJE"});
  SIG_DEVENGADO_ITEM_PPTO.belongsTo(SIG_DEVENGADO_ITEM, { as: "NRO_DEVENGADO_SIG_DEVENGADO_ITEM", foreignKey: "NRO_DEVENGADO"});
  SIG_DEVENGADO_ITEM.hasMany(SIG_DEVENGADO_ITEM_PPTO, { as: "NRO_DEVENGADO_SIG_DEVENGADO_ITEM_PPTOs", foreignKey: "NRO_DEVENGADO"});
  SIG_DEVENGADO_ITEM_PPTO.belongsTo(SIG_DEVENGADO_ITEM, { as: "SEC_DEVENGADO_SIG_DEVENGADO_ITEM", foreignKey: "SEC_DEVENGADO"});
  SIG_DEVENGADO_ITEM.hasMany(SIG_DEVENGADO_ITEM_PPTO, { as: "SEC_DEVENGADO_SIG_DEVENGADO_ITEM_PPTOs", foreignKey: "SEC_DEVENGADO"});
  SIG_DEVENGADO_ITEM_PPTO.belongsTo(SIG_DEVENGADO_ITEM, { as: "SEC_EJEC_SIG_DEVENGADO_ITEM", foreignKey: "SEC_EJEC"});
  SIG_DEVENGADO_ITEM.hasMany(SIG_DEVENGADO_ITEM_PPTO, { as: "SEC_EJEC_SIG_DEVENGADO_ITEM_PPTOs", foreignKey: "SEC_EJEC"});
  SIG_DEVENGADO_ITEM_PPTO.belongsTo(SIG_DEVENGADO_ITEM, { as: "SEC_ITEM_SIG_DEVENGADO_ITEM", foreignKey: "SEC_ITEM"});
  SIG_DEVENGADO_ITEM.hasMany(SIG_DEVENGADO_ITEM_PPTO, { as: "SEC_ITEM_SIG_DEVENGADO_ITEM_PPTOs", foreignKey: "SEC_ITEM"});
  SIG_DEVENGADO_ITEM.belongsTo(SIG_DEVENGADO_SECUENCIA, { as: "SEC_EJEC_SIG_DEVENGADO_SECUENCIum", foreignKey: "SEC_EJEC"});
  SIG_DEVENGADO_SECUENCIA.hasMany(SIG_DEVENGADO_ITEM, { as: "SIG_DEVENGADO_ITEMs", foreignKey: "SEC_EJEC"});
  SIG_DEVENGADO_ITEM.belongsTo(SIG_DEVENGADO_SECUENCIA, { as: "ANO_EJE_SIG_DEVENGADO_SECUENCIum", foreignKey: "ANO_EJE"});
  SIG_DEVENGADO_SECUENCIA.hasMany(SIG_DEVENGADO_ITEM, { as: "ANO_EJE_SIG_DEVENGADO_ITEMs", foreignKey: "ANO_EJE"});
  SIG_DEVENGADO_ITEM.belongsTo(SIG_DEVENGADO_SECUENCIA, { as: "NRO_DEVENGADO_SIG_DEVENGADO_SECUENCIum", foreignKey: "NRO_DEVENGADO"});
  SIG_DEVENGADO_SECUENCIA.hasMany(SIG_DEVENGADO_ITEM, { as: "NRO_DEVENGADO_SIG_DEVENGADO_ITEMs", foreignKey: "NRO_DEVENGADO"});
  SIG_DEVENGADO_ITEM.belongsTo(SIG_DEVENGADO_SECUENCIA, { as: "SEC_DEVENGADO_SIG_DEVENGADO_SECUENCIum", foreignKey: "SEC_DEVENGADO"});
  SIG_DEVENGADO_SECUENCIA.hasMany(SIG_DEVENGADO_ITEM, { as: "SEC_DEVENGADO_SIG_DEVENGADO_ITEMs", foreignKey: "SEC_DEVENGADO"});
  SIG_DEVENGADO_PENALIDAD_OTROS.belongsTo(SIG_DEVENGADO_SECUENCIA, { as: "ANO_EJE_SIG_DEVENGADO_SECUENCIum", foreignKey: "ANO_EJE"});
  SIG_DEVENGADO_SECUENCIA.hasMany(SIG_DEVENGADO_PENALIDAD_OTROS, { as: "SIG_DEVENGADO_PENALIDAD_OTROs", foreignKey: "ANO_EJE"});
  SIG_DEVENGADO_PENALIDAD_OTROS.belongsTo(SIG_DEVENGADO_SECUENCIA, { as: "NRO_DEVENGADO_SIG_DEVENGADO_SECUENCIum", foreignKey: "NRO_DEVENGADO"});
  SIG_DEVENGADO_SECUENCIA.hasMany(SIG_DEVENGADO_PENALIDAD_OTROS, { as: "NRO_DEVENGADO_SIG_DEVENGADO_PENALIDAD_OTROs", foreignKey: "NRO_DEVENGADO"});
  SIG_DEVENGADO_PENALIDAD_OTROS.belongsTo(SIG_DEVENGADO_SECUENCIA, { as: "SEC_DEVENGADO_SIG_DEVENGADO_SECUENCIum", foreignKey: "SEC_DEVENGADO"});
  SIG_DEVENGADO_SECUENCIA.hasMany(SIG_DEVENGADO_PENALIDAD_OTROS, { as: "SEC_DEVENGADO_SIG_DEVENGADO_PENALIDAD_OTROs", foreignKey: "SEC_DEVENGADO"});
  SIG_DEVENGADO_PENALIDAD_OTROS.belongsTo(SIG_DEVENGADO_SECUENCIA, { as: "SEC_EJEC_SIG_DEVENGADO_SECUENCIum", foreignKey: "SEC_EJEC"});
  SIG_DEVENGADO_SECUENCIA.hasMany(SIG_DEVENGADO_PENALIDAD_OTROS, { as: "SEC_EJEC_SIG_DEVENGADO_PENALIDAD_OTROs", foreignKey: "SEC_EJEC"});
  SIG_DEVOLUCION_DET.belongsTo(SIG_DEVOLUCION_CAB, { as: "ANO_EJE_SIG_DEVOLUCION_CAB", foreignKey: "ANO_EJE"});
  SIG_DEVOLUCION_CAB.hasMany(SIG_DEVOLUCION_DET, { as: "SIG_DEVOLUCION_DETs", foreignKey: "ANO_EJE"});
  SIG_DEVOLUCION_DET.belongsTo(SIG_DEVOLUCION_CAB, { as: "SEC_DEVOLUCION_SIG_DEVOLUCION_CAB", foreignKey: "SEC_DEVOLUCION"});
  SIG_DEVOLUCION_CAB.hasMany(SIG_DEVOLUCION_DET, { as: "SEC_DEVOLUCION_SIG_DEVOLUCION_DETs", foreignKey: "SEC_DEVOLUCION"});
  SIG_DEVOLUCION_DET.belongsTo(SIG_DEVOLUCION_CAB, { as: "SEC_EJEC_SIG_DEVOLUCION_CAB", foreignKey: "SEC_EJEC"});
  SIG_DEVOLUCION_CAB.hasMany(SIG_DEVOLUCION_DET, { as: "SEC_EJEC_SIG_DEVOLUCION_DETs", foreignKey: "SEC_EJEC"});
  SIG_DEVOLUCION_PPTAL.belongsTo(SIG_DEVOLUCION_DET, { as: "ANO_EJE_SIG_DEVOLUCION_DET", foreignKey: "ANO_EJE"});
  SIG_DEVOLUCION_DET.hasMany(SIG_DEVOLUCION_PPTAL, { as: "SIG_DEVOLUCION_PPTALs", foreignKey: "ANO_EJE"});
  SIG_DEVOLUCION_PPTAL.belongsTo(SIG_DEVOLUCION_DET, { as: "CICLO_SIG_DEVOLUCION_DET", foreignKey: "CICLO"});
  SIG_DEVOLUCION_DET.hasMany(SIG_DEVOLUCION_PPTAL, { as: "CICLO_SIG_DEVOLUCION_PPTALs", foreignKey: "CICLO"});
  SIG_DEVOLUCION_PPTAL.belongsTo(SIG_DEVOLUCION_DET, { as: "CORRELATIVO_SIG_DEVOLUCION_DET", foreignKey: "CORRELATIVO"});
  SIG_DEVOLUCION_DET.hasMany(SIG_DEVOLUCION_PPTAL, { as: "CORRELATIVO_SIG_DEVOLUCION_PPTALs", foreignKey: "CORRELATIVO"});
  SIG_DEVOLUCION_PPTAL.belongsTo(SIG_DEVOLUCION_DET, { as: "FASE_SIG_DEVOLUCION_DET", foreignKey: "FASE"});
  SIG_DEVOLUCION_DET.hasMany(SIG_DEVOLUCION_PPTAL, { as: "FASE_SIG_DEVOLUCION_PPTALs", foreignKey: "FASE"});
  SIG_DEVOLUCION_PPTAL.belongsTo(SIG_DEVOLUCION_DET, { as: "SEC_DEVOLUCION_SIG_DEVOLUCION_DET", foreignKey: "SEC_DEVOLUCION"});
  SIG_DEVOLUCION_DET.hasMany(SIG_DEVOLUCION_PPTAL, { as: "SEC_DEVOLUCION_SIG_DEVOLUCION_PPTALs", foreignKey: "SEC_DEVOLUCION"});
  SIG_DEVOLUCION_PPTAL.belongsTo(SIG_DEVOLUCION_DET, { as: "SEC_EJEC_SIG_DEVOLUCION_DET", foreignKey: "SEC_EJEC"});
  SIG_DEVOLUCION_DET.hasMany(SIG_DEVOLUCION_PPTAL, { as: "SEC_EJEC_SIG_DEVOLUCION_PPTALs", foreignKey: "SEC_EJEC"});
  SIG_DEVOLUCION_PPTAL.belongsTo(SIG_DEVOLUCION_DET, { as: "SECUENCIA_SIG_DEVOLUCION_DET", foreignKey: "SECUENCIA"});
  SIG_DEVOLUCION_DET.hasMany(SIG_DEVOLUCION_PPTAL, { as: "SECUENCIA_SIG_DEVOLUCION_PPTALs", foreignKey: "SECUENCIA"});
  SIG_DIVISION_FONDO.belongsTo(SIG_DIVISION, { as: "COD_DIV_SIG_DIVISION", foreignKey: "COD_DIV"});
  SIG_DIVISION.hasMany(SIG_DIVISION_FONDO, { as: "SIG_DIVISION_FONDOs", foreignKey: "COD_DIV"});
  SIG_ENCARGO_REQ_DET.belongsTo(SIG_ENCARGO_REQ, { as: "ANO_EJE_SIG_ENCARGO_REQ", foreignKey: "ANO_EJE"});
  SIG_ENCARGO_REQ.hasMany(SIG_ENCARGO_REQ_DET, { as: "SIG_ENCARGO_REQ_DETs", foreignKey: "ANO_EJE"});
  SIG_ENCARGO_REQ_DET.belongsTo(SIG_ENCARGO_REQ, { as: "SEC_EJEC_SIG_ENCARGO_REQ", foreignKey: "SEC_EJEC"});
  SIG_ENCARGO_REQ.hasMany(SIG_ENCARGO_REQ_DET, { as: "SEC_EJEC_SIG_ENCARGO_REQ_DETs", foreignKey: "SEC_EJEC"});
  SIG_ENCARGO_REQ_DET.belongsTo(SIG_ENCARGO_REQ, { as: "SEC_ENCARGO_REQ_SIG_ENCARGO_REQ", foreignKey: "SEC_ENCARGO_REQ"});
  SIG_ENCARGO_REQ.hasMany(SIG_ENCARGO_REQ_DET, { as: "SEC_ENCARGO_REQ_SIG_ENCARGO_REQ_DETs", foreignKey: "SEC_ENCARGO_REQ"});
  SIG_ENCARGO_REQ_ITEM.belongsTo(SIG_ENCARGO_REQ_DET, { as: "SEC_EJEC_SIG_ENCARGO_REQ_DET", foreignKey: "SEC_EJEC"});
  SIG_ENCARGO_REQ_DET.hasMany(SIG_ENCARGO_REQ_ITEM, { as: "SIG_ENCARGO_REQ_ITEMs", foreignKey: "SEC_EJEC"});
  SIG_ENCARGO_REQ_ITEM.belongsTo(SIG_ENCARGO_REQ_DET, { as: "ANO_EJE_SIG_ENCARGO_REQ_DET", foreignKey: "ANO_EJE"});
  SIG_ENCARGO_REQ_DET.hasMany(SIG_ENCARGO_REQ_ITEM, { as: "ANO_EJE_SIG_ENCARGO_REQ_ITEMs", foreignKey: "ANO_EJE"});
  SIG_ENCARGO_REQ_ITEM.belongsTo(SIG_ENCARGO_REQ_DET, { as: "SEC_ENCARGO_REQ_SIG_ENCARGO_REQ_DET", foreignKey: "SEC_ENCARGO_REQ"});
  SIG_ENCARGO_REQ_DET.hasMany(SIG_ENCARGO_REQ_ITEM, { as: "SEC_ENCARGO_REQ_SIG_ENCARGO_REQ_ITEMs", foreignKey: "SEC_ENCARGO_REQ"});
  SIG_ENCARGO_REQ_ITEM.belongsTo(SIG_ENCARGO_REQ_DET, { as: "SEC_ENCARGO_REQ_DET_SIG_ENCARGO_REQ_DET", foreignKey: "SEC_ENCARGO_REQ_DET"});
  SIG_ENCARGO_REQ_DET.hasMany(SIG_ENCARGO_REQ_ITEM, { as: "SEC_ENCARGO_REQ_DET_SIG_ENCARGO_REQ_ITEMs", foreignKey: "SEC_ENCARGO_REQ_DET"});
  SIG_ENCARGO_ITEM_ANEXO.belongsTo(SIG_ENCARGO_REQ_ITEM, { as: "ANO_EJE_SIG_ENCARGO_REQ_ITEM", foreignKey: "ANO_EJE"});
  SIG_ENCARGO_REQ_ITEM.hasMany(SIG_ENCARGO_ITEM_ANEXO, { as: "SIG_ENCARGO_ITEM_ANEXOs", foreignKey: "ANO_EJE"});
  SIG_ENCARGO_ITEM_ANEXO.belongsTo(SIG_ENCARGO_REQ_ITEM, { as: "SEC_EJEC_SIG_ENCARGO_REQ_ITEM", foreignKey: "SEC_EJEC"});
  SIG_ENCARGO_REQ_ITEM.hasMany(SIG_ENCARGO_ITEM_ANEXO, { as: "SEC_EJEC_SIG_ENCARGO_ITEM_ANEXOs", foreignKey: "SEC_EJEC"});
  SIG_ENCARGO_ITEM_ANEXO.belongsTo(SIG_ENCARGO_REQ_ITEM, { as: "SEC_ENCARGO_REQ_SIG_ENCARGO_REQ_ITEM", foreignKey: "SEC_ENCARGO_REQ"});
  SIG_ENCARGO_REQ_ITEM.hasMany(SIG_ENCARGO_ITEM_ANEXO, { as: "SEC_ENCARGO_REQ_SIG_ENCARGO_ITEM_ANEXOs", foreignKey: "SEC_ENCARGO_REQ"});
  SIG_ENCARGO_ITEM_ANEXO.belongsTo(SIG_ENCARGO_REQ_ITEM, { as: "SEC_ENCARGO_REQ_DET_SIG_ENCARGO_REQ_ITEM", foreignKey: "SEC_ENCARGO_REQ_DET"});
  SIG_ENCARGO_REQ_ITEM.hasMany(SIG_ENCARGO_ITEM_ANEXO, { as: "SEC_ENCARGO_REQ_DET_SIG_ENCARGO_ITEM_ANEXOs", foreignKey: "SEC_ENCARGO_REQ_DET"});
  SIG_ENCARGO_ITEM_ANEXO.belongsTo(SIG_ENCARGO_REQ_ITEM, { as: "SEC_ENCARGO_REQ_ITEM_SIG_ENCARGO_REQ_ITEM", foreignKey: "SEC_ENCARGO_REQ_ITEM"});
  SIG_ENCARGO_REQ_ITEM.hasMany(SIG_ENCARGO_ITEM_ANEXO, { as: "SEC_ENCARGO_REQ_ITEM_SIG_ENCARGO_ITEM_ANEXOs", foreignKey: "SEC_ENCARGO_REQ_ITEM"});
  SIG_ENCARGO_REQ_EXP.belongsTo(SIG_ENCARGO_REQ_ITEM, { as: "ANO_EJE_SIG_ENCARGO_REQ_ITEM", foreignKey: "ANO_EJE"});
  SIG_ENCARGO_REQ_ITEM.hasMany(SIG_ENCARGO_REQ_EXP, { as: "SIG_ENCARGO_REQ_EXPs", foreignKey: "ANO_EJE"});
  SIG_ENCARGO_REQ_EXP.belongsTo(SIG_ENCARGO_REQ_ITEM, { as: "SEC_EJEC_SIG_ENCARGO_REQ_ITEM", foreignKey: "SEC_EJEC"});
  SIG_ENCARGO_REQ_ITEM.hasMany(SIG_ENCARGO_REQ_EXP, { as: "SEC_EJEC_SIG_ENCARGO_REQ_EXPs", foreignKey: "SEC_EJEC"});
  SIG_ENCARGO_REQ_EXP.belongsTo(SIG_ENCARGO_REQ_ITEM, { as: "SEC_ENCARGO_REQ_SIG_ENCARGO_REQ_ITEM", foreignKey: "SEC_ENCARGO_REQ"});
  SIG_ENCARGO_REQ_ITEM.hasMany(SIG_ENCARGO_REQ_EXP, { as: "SEC_ENCARGO_REQ_SIG_ENCARGO_REQ_EXPs", foreignKey: "SEC_ENCARGO_REQ"});
  SIG_ENCARGO_REQ_EXP.belongsTo(SIG_ENCARGO_REQ_ITEM, { as: "SEC_ENCARGO_REQ_DET_SIG_ENCARGO_REQ_ITEM", foreignKey: "SEC_ENCARGO_REQ_DET"});
  SIG_ENCARGO_REQ_ITEM.hasMany(SIG_ENCARGO_REQ_EXP, { as: "SEC_ENCARGO_REQ_DET_SIG_ENCARGO_REQ_EXPs", foreignKey: "SEC_ENCARGO_REQ_DET"});
  SIG_ENCARGO_REQ_EXP.belongsTo(SIG_ENCARGO_REQ_ITEM, { as: "SEC_ENCARGO_REQ_ITEM_SIG_ENCARGO_REQ_ITEM", foreignKey: "SEC_ENCARGO_REQ_ITEM"});
  SIG_ENCARGO_REQ_ITEM.hasMany(SIG_ENCARGO_REQ_EXP, { as: "SEC_ENCARGO_REQ_ITEM_SIG_ENCARGO_REQ_EXPs", foreignKey: "SEC_ENCARGO_REQ_ITEM"});
  SIG_SOLICITUD_ESPECIFICACIONES.belongsTo(SIG_ESPECIFICAS_TECNICAS, { as: "SEC_EJEC_SIG_ESPECIFICAS_TECNICA", foreignKey: "SEC_EJEC"});
  SIG_ESPECIFICAS_TECNICAS.hasMany(SIG_SOLICITUD_ESPECIFICACIONES, { as: "SIG_SOLICITUD_ESPECIFICACIONEs", foreignKey: "SEC_EJEC"});
  SIG_SOLICITUD_ESPECIFICACIONES.belongsTo(SIG_ESPECIFICAS_TECNICAS, { as: "SEC_ESPEC_SIG_ESPECIFICAS_TECNICA", foreignKey: "SEC_ESPEC"});
  SIG_ESPECIFICAS_TECNICAS.hasMany(SIG_SOLICITUD_ESPECIFICACIONES, { as: "SEC_ESPEC_SIG_SOLICITUD_ESPECIFICACIONEs", foreignKey: "SEC_ESPEC"});
  SIG_EXP_SIGA_DOCU.belongsTo(SIG_EXP_SIGA, { as: "ANO_EJE_SIG_EXP_SIGA", foreignKey: "ANO_EJE"});
  SIG_EXP_SIGA.hasMany(SIG_EXP_SIGA_DOCU, { as: "SIG_EXP_SIGA_DOCUs", foreignKey: "ANO_EJE"});
  SIG_EXP_SIGA_DOCU.belongsTo(SIG_EXP_SIGA, { as: "EXP_SIGA_SIG_EXP_SIGA", foreignKey: "EXP_SIGA"});
  SIG_EXP_SIGA.hasMany(SIG_EXP_SIGA_DOCU, { as: "EXP_SIGA_SIG_EXP_SIGA_DOCUs", foreignKey: "EXP_SIGA"});
  SIG_EXP_SIGA_DOCU.belongsTo(SIG_EXP_SIGA, { as: "SEC_EJEC_SIG_EXP_SIGA", foreignKey: "SEC_EJEC"});
  SIG_EXP_SIGA.hasMany(SIG_EXP_SIGA_DOCU, { as: "SEC_EJEC_SIG_EXP_SIGA_DOCUs", foreignKey: "SEC_EJEC"});
  SIG_EXP_SIGA_DOCU.belongsTo(SIG_EXP_SIGA, { as: "TIPO_PPTO_SIG_EXP_SIGA", foreignKey: "TIPO_PPTO"});
  SIG_EXP_SIGA.hasMany(SIG_EXP_SIGA_DOCU, { as: "TIPO_PPTO_SIG_EXP_SIGA_DOCUs", foreignKey: "TIPO_PPTO"});
  SIG_EXP_SIGA_SECU.belongsTo(SIG_EXP_SIGA_DOCU, { as: "EXP_SIGA_SIG_EXP_SIGA_DOCU", foreignKey: "EXP_SIGA"});
  SIG_EXP_SIGA_DOCU.hasMany(SIG_EXP_SIGA_SECU, { as: "SIG_EXP_SIGA_SECUs", foreignKey: "EXP_SIGA"});
  SIG_EXP_SIGA_SECU.belongsTo(SIG_EXP_SIGA_DOCU, { as: "EXP_SIGA_DOC_SIG_EXP_SIGA_DOCU", foreignKey: "EXP_SIGA_DOC"});
  SIG_EXP_SIGA_DOCU.hasMany(SIG_EXP_SIGA_SECU, { as: "EXP_SIGA_DOC_SIG_EXP_SIGA_SECUs", foreignKey: "EXP_SIGA_DOC"});
  SIG_EXP_SIGA_PPTO.belongsTo(SIG_EXP_SIGA_SECU, { as: "ANO_EJE_SIG_EXP_SIGA_SECU", foreignKey: "ANO_EJE"});
  SIG_EXP_SIGA_SECU.hasMany(SIG_EXP_SIGA_PPTO, { as: "SIG_EXP_SIGA_PPTOs", foreignKey: "ANO_EJE"});
  SIG_EXP_SIGA_PPTO.belongsTo(SIG_EXP_SIGA_SECU, { as: "EXP_SIGA_SIG_EXP_SIGA_SECU", foreignKey: "EXP_SIGA"});
  SIG_EXP_SIGA_SECU.hasMany(SIG_EXP_SIGA_PPTO, { as: "EXP_SIGA_SIG_EXP_SIGA_PPTOs", foreignKey: "EXP_SIGA"});
  SIG_EXP_SIGA_PPTO.belongsTo(SIG_EXP_SIGA_SECU, { as: "EXP_SIGA_DOC_SIG_EXP_SIGA_SECU", foreignKey: "EXP_SIGA_DOC"});
  SIG_EXP_SIGA_SECU.hasMany(SIG_EXP_SIGA_PPTO, { as: "EXP_SIGA_DOC_SIG_EXP_SIGA_PPTOs", foreignKey: "EXP_SIGA_DOC"});
  SIG_EXP_SIGA_PPTO.belongsTo(SIG_EXP_SIGA_SECU, { as: "EXP_SIGA_SECU_SIG_EXP_SIGA_SECU", foreignKey: "EXP_SIGA_SECU"});
  SIG_EXP_SIGA_SECU.hasMany(SIG_EXP_SIGA_PPTO, { as: "EXP_SIGA_SECU_SIG_EXP_SIGA_PPTOs", foreignKey: "EXP_SIGA_SECU"});
  SIG_EXP_SIGA_PPTO.belongsTo(SIG_EXP_SIGA_SECU, { as: "SEC_EJEC_SIG_EXP_SIGA_SECU", foreignKey: "SEC_EJEC"});
  SIG_EXP_SIGA_SECU.hasMany(SIG_EXP_SIGA_PPTO, { as: "SEC_EJEC_SIG_EXP_SIGA_PPTOs", foreignKey: "SEC_EJEC"});
  SIG_EXP_SIGA_PPTO.belongsTo(SIG_EXP_SIGA_SECU, { as: "TIPO_PPTO_SIG_EXP_SIGA_SECU", foreignKey: "TIPO_PPTO"});
  SIG_EXP_SIGA_SECU.hasMany(SIG_EXP_SIGA_PPTO, { as: "TIPO_PPTO_SIG_EXP_SIGA_PPTOs", foreignKey: "TIPO_PPTO"});
  SIG_FACTOR_AJUSTE_MENSUAL.belongsTo(SIG_FACTOR_AJUSTE_ANUAL, { as: "ANO_EJE_SIG_FACTOR_AJUSTE_ANUAL", foreignKey: "ANO_EJE"});
  SIG_FACTOR_AJUSTE_ANUAL.hasMany(SIG_FACTOR_AJUSTE_MENSUAL, { as: "SIG_FACTOR_AJUSTE_MENSUALs", foreignKey: "ANO_EJE"});
  SIG_PLANTILLA_GRUPO_NOTA.belongsTo(SIG_GRUPO_NOTA, { as: "SEC_GRUPO_SIG_GRUPO_NOTum", foreignKey: "SEC_GRUPO"});
  SIG_GRUPO_NOTA.hasMany(SIG_PLANTILLA_GRUPO_NOTA, { as: "SIG_PLANTILLA_GRUPO_NOTa", foreignKey: "SEC_GRUPO"});
  SIG_GUIA_REMISION_DET.belongsTo(SIG_GUIA_REMISION, { as: "ALMACEN_SIG_GUIA_REMISION", foreignKey: "ALMACEN"});
  SIG_GUIA_REMISION.hasMany(SIG_GUIA_REMISION_DET, { as: "SIG_GUIA_REMISION_DETs", foreignKey: "ALMACEN"});
  SIG_GUIA_REMISION_DET.belongsTo(SIG_GUIA_REMISION, { as: "ANO_EJE_SIG_GUIA_REMISION", foreignKey: "ANO_EJE"});
  SIG_GUIA_REMISION.hasMany(SIG_GUIA_REMISION_DET, { as: "ANO_EJE_SIG_GUIA_REMISION_DETs", foreignKey: "ANO_EJE"});
  SIG_GUIA_REMISION_DET.belongsTo(SIG_GUIA_REMISION, { as: "SEC_ALMACEN_SIG_GUIA_REMISION", foreignKey: "SEC_ALMACEN"});
  SIG_GUIA_REMISION.hasMany(SIG_GUIA_REMISION_DET, { as: "SEC_ALMACEN_SIG_GUIA_REMISION_DETs", foreignKey: "SEC_ALMACEN"});
  SIG_GUIA_REMISION_DET.belongsTo(SIG_GUIA_REMISION, { as: "SEC_EJEC_SIG_GUIA_REMISION", foreignKey: "SEC_EJEC"});
  SIG_GUIA_REMISION.hasMany(SIG_GUIA_REMISION_DET, { as: "SEC_EJEC_SIG_GUIA_REMISION_DETs", foreignKey: "SEC_EJEC"});
  SIG_GUIA_REMISION_DET.belongsTo(SIG_GUIA_REMISION, { as: "SEC_GUIA_SIG_GUIA_REMISION", foreignKey: "SEC_GUIA"});
  SIG_GUIA_REMISION.hasMany(SIG_GUIA_REMISION_DET, { as: "SEC_GUIA_SIG_GUIA_REMISION_DETs", foreignKey: "SEC_GUIA"});
  SIG_GUIA_REMISION_DET.belongsTo(SIG_GUIA_REMISION, { as: "SERIE_SIG_GUIA_REMISION", foreignKey: "SERIE"});
  SIG_GUIA_REMISION.hasMany(SIG_GUIA_REMISION_DET, { as: "SERIE_SIG_GUIA_REMISION_DETs", foreignKey: "SERIE"});
  SIG_GUIA_REMISION_DET.belongsTo(SIG_GUIA_REMISION, { as: "TIPO_DOCUMENTO_SIG_GUIA_REMISION", foreignKey: "TIPO_DOCUMENTO"});
  SIG_GUIA_REMISION.hasMany(SIG_GUIA_REMISION_DET, { as: "TIPO_DOCUMENTO_SIG_GUIA_REMISION_DETs", foreignKey: "TIPO_DOCUMENTO"});
  SIG_INM_COMPONENTE_CUENTA.belongsTo(SIG_INM_COMPONENTE, { as: "SEC_COMPONENTE_SIG_INM_COMPONENTE", foreignKey: "SEC_COMPONENTE"});
  SIG_INM_COMPONENTE.hasMany(SIG_INM_COMPONENTE_CUENTA, { as: "SIG_INM_COMPONENTE_CUENTa", foreignKey: "SEC_COMPONENTE"});
  SIG_INM_COMPONENTE_CUENTA.belongsTo(SIG_INM_COMPONENTE, { as: "SEC_EJEC_SIG_INM_COMPONENTE", foreignKey: "SEC_EJEC"});
  SIG_INM_COMPONENTE.hasMany(SIG_INM_COMPONENTE_CUENTA, { as: "SEC_EJEC_SIG_INM_COMPONENTE_CUENTa", foreignKey: "SEC_EJEC"});
  SIG_INM_COMPONENTE_CUENTA.belongsTo(SIG_INM_COMPONENTE, { as: "SEC_UNIDAD_ACTIVO_SIG_INM_COMPONENTE", foreignKey: "SEC_UNIDAD_ACTIVO"});
  SIG_INM_COMPONENTE.hasMany(SIG_INM_COMPONENTE_CUENTA, { as: "SEC_UNIDAD_ACTIVO_SIG_INM_COMPONENTE_CUENTa", foreignKey: "SEC_UNIDAD_ACTIVO"});
  SIG_INM_COMPONENTE_CUENTA.belongsTo(SIG_INM_COMPONENTE, { as: "SECUENCIA_SIG_INM_COMPONENTE", foreignKey: "SECUENCIA"});
  SIG_INM_COMPONENTE.hasMany(SIG_INM_COMPONENTE_CUENTA, { as: "SECUENCIA_SIG_INM_COMPONENTE_CUENTa", foreignKey: "SECUENCIA"});
  SIG_INM_COMPONENTE_ESP_TECNICA.belongsTo(SIG_INM_COMPONENTE, { as: "SEC_COMPONENTE_SIG_INM_COMPONENTE", foreignKey: "SEC_COMPONENTE"});
  SIG_INM_COMPONENTE.hasMany(SIG_INM_COMPONENTE_ESP_TECNICA, { as: "SIG_INM_COMPONENTE_ESP_TECNICAs", foreignKey: "SEC_COMPONENTE"});
  SIG_INM_COMPONENTE_ESP_TECNICA.belongsTo(SIG_INM_COMPONENTE, { as: "SEC_EJEC_SIG_INM_COMPONENTE", foreignKey: "SEC_EJEC"});
  SIG_INM_COMPONENTE.hasMany(SIG_INM_COMPONENTE_ESP_TECNICA, { as: "SEC_EJEC_SIG_INM_COMPONENTE_ESP_TECNICAs", foreignKey: "SEC_EJEC"});
  SIG_INM_COMPONENTE_ESP_TECNICA.belongsTo(SIG_INM_COMPONENTE, { as: "SEC_UNIDAD_ACTIVO_SIG_INM_COMPONENTE", foreignKey: "SEC_UNIDAD_ACTIVO"});
  SIG_INM_COMPONENTE.hasMany(SIG_INM_COMPONENTE_ESP_TECNICA, { as: "SEC_UNIDAD_ACTIVO_SIG_INM_COMPONENTE_ESP_TECNICAs", foreignKey: "SEC_UNIDAD_ACTIVO"});
  SIG_INM_COMPONENTE_ESP_TECNICA.belongsTo(SIG_INM_COMPONENTE, { as: "SECUENCIA_SIG_INM_COMPONENTE", foreignKey: "SECUENCIA"});
  SIG_INM_COMPONENTE.hasMany(SIG_INM_COMPONENTE_ESP_TECNICA, { as: "SECUENCIA_SIG_INM_COMPONENTE_ESP_TECNICAs", foreignKey: "SECUENCIA"});
  SIG_INM_COMPONENTE_INSPEC.belongsTo(SIG_INM_COMPONENTE, { as: "SEC_COMPONENTE_SIG_INM_COMPONENTE", foreignKey: "SEC_COMPONENTE"});
  SIG_INM_COMPONENTE.hasMany(SIG_INM_COMPONENTE_INSPEC, { as: "SIG_INM_COMPONENTE_INSPECs", foreignKey: "SEC_COMPONENTE"});
  SIG_INM_COMPONENTE_INSPEC.belongsTo(SIG_INM_COMPONENTE, { as: "SEC_EJEC_SIG_INM_COMPONENTE", foreignKey: "SEC_EJEC"});
  SIG_INM_COMPONENTE.hasMany(SIG_INM_COMPONENTE_INSPEC, { as: "SEC_EJEC_SIG_INM_COMPONENTE_INSPECs", foreignKey: "SEC_EJEC"});
  SIG_INM_COMPONENTE_INSPEC.belongsTo(SIG_INM_COMPONENTE, { as: "SEC_UNIDAD_ACTIVO_SIG_INM_COMPONENTE", foreignKey: "SEC_UNIDAD_ACTIVO"});
  SIG_INM_COMPONENTE.hasMany(SIG_INM_COMPONENTE_INSPEC, { as: "SEC_UNIDAD_ACTIVO_SIG_INM_COMPONENTE_INSPECs", foreignKey: "SEC_UNIDAD_ACTIVO"});
  SIG_INM_COMPONENTE_INSPEC.belongsTo(SIG_INM_COMPONENTE, { as: "SECUENCIA_SIG_INM_COMPONENTE", foreignKey: "SECUENCIA"});
  SIG_INM_COMPONENTE.hasMany(SIG_INM_COMPONENTE_INSPEC, { as: "SECUENCIA_SIG_INM_COMPONENTE_INSPECs", foreignKey: "SECUENCIA"});
  SIG_MOVIM_CONTABLE_INM_COMP.belongsTo(SIG_INM_COMPONENTE, { as: "SEC_COMPONENTE_SIG_INM_COMPONENTE", foreignKey: "SEC_COMPONENTE"});
  SIG_INM_COMPONENTE.hasMany(SIG_MOVIM_CONTABLE_INM_COMP, { as: "SIG_MOVIM_CONTABLE_INM_COMPs", foreignKey: "SEC_COMPONENTE"});
  SIG_MOVIM_CONTABLE_INM_COMP.belongsTo(SIG_INM_COMPONENTE, { as: "SEC_EJEC_SIG_INM_COMPONENTE", foreignKey: "SEC_EJEC"});
  SIG_INM_COMPONENTE.hasMany(SIG_MOVIM_CONTABLE_INM_COMP, { as: "SEC_EJEC_SIG_MOVIM_CONTABLE_INM_COMPs", foreignKey: "SEC_EJEC"});
  SIG_MOVIM_CONTABLE_INM_COMP.belongsTo(SIG_INM_COMPONENTE, { as: "SEC_UNIDAD_ACTIVO_SIG_INM_COMPONENTE", foreignKey: "SEC_UNIDAD_ACTIVO"});
  SIG_INM_COMPONENTE.hasMany(SIG_MOVIM_CONTABLE_INM_COMP, { as: "SEC_UNIDAD_ACTIVO_SIG_MOVIM_CONTABLE_INM_COMPs", foreignKey: "SEC_UNIDAD_ACTIVO"});
  SIG_MOVIM_CONTABLE_INM_COMP.belongsTo(SIG_INM_COMPONENTE, { as: "SECUENCIA_SIG_INM_COMPONENTE", foreignKey: "SECUENCIA"});
  SIG_INM_COMPONENTE.hasMany(SIG_MOVIM_CONTABLE_INM_COMP, { as: "SECUENCIA_SIG_MOVIM_CONTABLE_INM_COMPs", foreignKey: "SECUENCIA"});
  SIG_PATRIMONIO_INM_IF.belongsTo(SIG_INM_IF, { as: "ANO_EJE_SIG_INM_IF", foreignKey: "ANO_EJE"});
  SIG_INM_IF.hasMany(SIG_PATRIMONIO_INM_IF, { as: "SIG_PATRIMONIO_INM_IFs", foreignKey: "ANO_EJE"});
  SIG_PATRIMONIO_INM_IF.belongsTo(SIG_INM_IF, { as: "NRO_INVENTARIO_SIG_INM_IF", foreignKey: "NRO_INVENTARIO"});
  SIG_INM_IF.hasMany(SIG_PATRIMONIO_INM_IF, { as: "NRO_INVENTARIO_SIG_PATRIMONIO_INM_IFs", foreignKey: "NRO_INVENTARIO"});
  SIG_PATRIMONIO_INM_IF.belongsTo(SIG_INM_IF, { as: "SEC_EJEC_SIG_INM_IF", foreignKey: "SEC_EJEC"});
  SIG_INM_IF.hasMany(SIG_PATRIMONIO_INM_IF, { as: "SEC_EJEC_SIG_PATRIMONIO_INM_IFs", foreignKey: "SEC_EJEC"});
  SIG_INM_COMPONENTE.belongsTo(SIG_INM_UNIDAD_ACTIVO, { as: "SEC_EJEC_SIG_INM_UNIDAD_ACTIVO", foreignKey: "SEC_EJEC"});
  SIG_INM_UNIDAD_ACTIVO.hasMany(SIG_INM_COMPONENTE, { as: "SIG_INM_COMPONENTEs", foreignKey: "SEC_EJEC"});
  SIG_INM_COMPONENTE.belongsTo(SIG_INM_UNIDAD_ACTIVO, { as: "SEC_UNIDAD_ACTIVO_SIG_INM_UNIDAD_ACTIVO", foreignKey: "SEC_UNIDAD_ACTIVO"});
  SIG_INM_UNIDAD_ACTIVO.hasMany(SIG_INM_COMPONENTE, { as: "SEC_UNIDAD_ACTIVO_SIG_INM_COMPONENTEs", foreignKey: "SEC_UNIDAD_ACTIVO"});
  SIG_INM_COMPONENTE.belongsTo(SIG_INM_UNIDAD_ACTIVO, { as: "SECUENCIA_SIG_INM_UNIDAD_ACTIVO", foreignKey: "SECUENCIA"});
  SIG_INM_UNIDAD_ACTIVO.hasMany(SIG_INM_COMPONENTE, { as: "SECUENCIA_SIG_INM_COMPONENTEs", foreignKey: "SECUENCIA"});
  SIG_INM_UND_ACTIVO_ESP_TECNICA.belongsTo(SIG_INM_UNIDAD_ACTIVO, { as: "SEC_EJEC_SIG_INM_UNIDAD_ACTIVO", foreignKey: "SEC_EJEC"});
  SIG_INM_UNIDAD_ACTIVO.hasMany(SIG_INM_UND_ACTIVO_ESP_TECNICA, { as: "SIG_INM_UND_ACTIVO_ESP_TECNICAs", foreignKey: "SEC_EJEC"});
  SIG_INM_UND_ACTIVO_ESP_TECNICA.belongsTo(SIG_INM_UNIDAD_ACTIVO, { as: "SEC_UNIDAD_ACTIVO_SIG_INM_UNIDAD_ACTIVO", foreignKey: "SEC_UNIDAD_ACTIVO"});
  SIG_INM_UNIDAD_ACTIVO.hasMany(SIG_INM_UND_ACTIVO_ESP_TECNICA, { as: "SEC_UNIDAD_ACTIVO_SIG_INM_UND_ACTIVO_ESP_TECNICAs", foreignKey: "SEC_UNIDAD_ACTIVO"});
  SIG_INM_UND_ACTIVO_ESP_TECNICA.belongsTo(SIG_INM_UNIDAD_ACTIVO, { as: "SECUENCIA_SIG_INM_UNIDAD_ACTIVO", foreignKey: "SECUENCIA"});
  SIG_INM_UNIDAD_ACTIVO.hasMany(SIG_INM_UND_ACTIVO_ESP_TECNICA, { as: "SECUENCIA_SIG_INM_UND_ACTIVO_ESP_TECNICAs", foreignKey: "SECUENCIA"});
  SIG_INM_UNIDAD_ACTIVO_BAJA.belongsTo(SIG_INM_UNIDAD_ACTIVO, { as: "SEC_EJEC_SIG_INM_UNIDAD_ACTIVO", foreignKey: "SEC_EJEC"});
  SIG_INM_UNIDAD_ACTIVO.hasMany(SIG_INM_UNIDAD_ACTIVO_BAJA, { as: "SIG_INM_UNIDAD_ACTIVO_BAJAs", foreignKey: "SEC_EJEC"});
  SIG_INM_UNIDAD_ACTIVO_BAJA.belongsTo(SIG_INM_UNIDAD_ACTIVO, { as: "SEC_UNIDAD_ACTIVO_SIG_INM_UNIDAD_ACTIVO", foreignKey: "SEC_UNIDAD_ACTIVO"});
  SIG_INM_UNIDAD_ACTIVO.hasMany(SIG_INM_UNIDAD_ACTIVO_BAJA, { as: "SEC_UNIDAD_ACTIVO_SIG_INM_UNIDAD_ACTIVO_BAJAs", foreignKey: "SEC_UNIDAD_ACTIVO"});
  SIG_INM_UNIDAD_ACTIVO_BAJA.belongsTo(SIG_INM_UNIDAD_ACTIVO, { as: "SECUENCIA_SIG_INM_UNIDAD_ACTIVO", foreignKey: "SECUENCIA"});
  SIG_INM_UNIDAD_ACTIVO.hasMany(SIG_INM_UNIDAD_ACTIVO_BAJA, { as: "SECUENCIA_SIG_INM_UNIDAD_ACTIVO_BAJAs", foreignKey: "SECUENCIA"});
  SIG_INM_COMPONENTES_IF.belongsTo(SIG_INM_UNIDAD_ACTIVO_IF, { as: "ANO_EJE_SIG_INM_UNIDAD_ACTIVO_IF", foreignKey: "ANO_EJE"});
  SIG_INM_UNIDAD_ACTIVO_IF.hasMany(SIG_INM_COMPONENTES_IF, { as: "SIG_INM_COMPONENTES_IFs", foreignKey: "ANO_EJE"});
  SIG_INM_COMPONENTES_IF.belongsTo(SIG_INM_UNIDAD_ACTIVO_IF, { as: "NRO_INVENTARIO_SIG_INM_UNIDAD_ACTIVO_IF", foreignKey: "NRO_INVENTARIO"});
  SIG_INM_UNIDAD_ACTIVO_IF.hasMany(SIG_INM_COMPONENTES_IF, { as: "NRO_INVENTARIO_SIG_INM_COMPONENTES_IFs", foreignKey: "NRO_INVENTARIO"});
  SIG_INM_COMPONENTES_IF.belongsTo(SIG_INM_UNIDAD_ACTIVO_IF, { as: "SEC_EJEC_SIG_INM_UNIDAD_ACTIVO_IF", foreignKey: "SEC_EJEC"});
  SIG_INM_UNIDAD_ACTIVO_IF.hasMany(SIG_INM_COMPONENTES_IF, { as: "SEC_EJEC_SIG_INM_COMPONENTES_IFs", foreignKey: "SEC_EJEC"});
  SIG_INM_COMPONENTES_IF.belongsTo(SIG_INM_UNIDAD_ACTIVO_IF, { as: "SEC_UNIDAD_ACTIVO_SIG_INM_UNIDAD_ACTIVO_IF", foreignKey: "SEC_UNIDAD_ACTIVO"});
  SIG_INM_UNIDAD_ACTIVO_IF.hasMany(SIG_INM_COMPONENTES_IF, { as: "SEC_UNIDAD_ACTIVO_SIG_INM_COMPONENTES_IFs", foreignKey: "SEC_UNIDAD_ACTIVO"});
  SIG_INM_COMPONENTES_IF.belongsTo(SIG_INM_UNIDAD_ACTIVO_IF, { as: "SECUENCIA_SIG_INM_UNIDAD_ACTIVO_IF", foreignKey: "SECUENCIA"});
  SIG_INM_UNIDAD_ACTIVO_IF.hasMany(SIG_INM_COMPONENTES_IF, { as: "SECUENCIA_SIG_INM_COMPONENTES_IFs", foreignKey: "SECUENCIA"});
  SIG_INVENTARIO_FISICO_CIERRE.belongsTo(SIG_INVENTARIO_FISICO, { as: "ANO_EJE_SIG_INVENTARIO_FISICO", foreignKey: "ANO_EJE"});
  SIG_INVENTARIO_FISICO.hasMany(SIG_INVENTARIO_FISICO_CIERRE, { as: "SIG_INVENTARIO_FISICO_CIERREs", foreignKey: "ANO_EJE"});
  SIG_INVENTARIO_FISICO_CIERRE.belongsTo(SIG_INVENTARIO_FISICO, { as: "NRO_INVENTARIO_SIG_INVENTARIO_FISICO", foreignKey: "NRO_INVENTARIO"});
  SIG_INVENTARIO_FISICO.hasMany(SIG_INVENTARIO_FISICO_CIERRE, { as: "NRO_INVENTARIO_SIG_INVENTARIO_FISICO_CIERREs", foreignKey: "NRO_INVENTARIO"});
  SIG_INVENTARIO_FISICO_CIERRE.belongsTo(SIG_INVENTARIO_FISICO, { as: "SEC_EJEC_SIG_INVENTARIO_FISICO", foreignKey: "SEC_EJEC"});
  SIG_INVENTARIO_FISICO.hasMany(SIG_INVENTARIO_FISICO_CIERRE, { as: "SEC_EJEC_SIG_INVENTARIO_FISICO_CIERREs", foreignKey: "SEC_EJEC"});
  SIG_INVENTARIO_FISICO_DOCUM.belongsTo(SIG_INVENTARIO_FISICO, { as: "ANO_EJE_SIG_INVENTARIO_FISICO", foreignKey: "ANO_EJE"});
  SIG_INVENTARIO_FISICO.hasMany(SIG_INVENTARIO_FISICO_DOCUM, { as: "SIG_INVENTARIO_FISICO_DOCUMs", foreignKey: "ANO_EJE"});
  SIG_INVENTARIO_FISICO_DOCUM.belongsTo(SIG_INVENTARIO_FISICO, { as: "NRO_INVENTARIO_SIG_INVENTARIO_FISICO", foreignKey: "NRO_INVENTARIO"});
  SIG_INVENTARIO_FISICO.hasMany(SIG_INVENTARIO_FISICO_DOCUM, { as: "NRO_INVENTARIO_SIG_INVENTARIO_FISICO_DOCUMs", foreignKey: "NRO_INVENTARIO"});
  SIG_INVENTARIO_FISICO_DOCUM.belongsTo(SIG_INVENTARIO_FISICO, { as: "SEC_EJEC_SIG_INVENTARIO_FISICO", foreignKey: "SEC_EJEC"});
  SIG_INVENTARIO_FISICO.hasMany(SIG_INVENTARIO_FISICO_DOCUM, { as: "SEC_EJEC_SIG_INVENTARIO_FISICO_DOCUMs", foreignKey: "SEC_EJEC"});
  SIG_DETALLE_MEJORAS.belongsTo(SIG_MEJORAS, { as: "ANO_EJE_SIG_MEJORA", foreignKey: "ANO_EJE"});
  SIG_MEJORAS.hasMany(SIG_DETALLE_MEJORAS, { as: "SIG_DETALLE_MEJORAs", foreignKey: "ANO_EJE"});
  SIG_DETALLE_MEJORAS.belongsTo(SIG_MEJORAS, { as: "NRO_MEJORA_SIG_MEJORA", foreignKey: "NRO_MEJORA"});
  SIG_MEJORAS.hasMany(SIG_DETALLE_MEJORAS, { as: "NRO_MEJORA_SIG_DETALLE_MEJORAs", foreignKey: "NRO_MEJORA"});
  SIG_DETALLE_MEJORAS.belongsTo(SIG_MEJORAS, { as: "SEC_EJEC_SIG_MEJORA", foreignKey: "SEC_EJEC"});
  SIG_MEJORAS.hasMany(SIG_DETALLE_MEJORAS, { as: "SEC_EJEC_SIG_DETALLE_MEJORAs", foreignKey: "SEC_EJEC"});
  SIG_DETALLE_MEJORAS.belongsTo(SIG_MEJORAS, { as: "SECUENCIA_SIG_MEJORA", foreignKey: "SECUENCIA"});
  SIG_MEJORAS.hasMany(SIG_DETALLE_MEJORAS, { as: "SECUENCIA_SIG_DETALLE_MEJORAs", foreignKey: "SECUENCIA"});
  SIG_MP_CENTRO_RUBRO.belongsTo(SIG_METAS_PROP_X_CENTRO, { as: "ANO_EJE_SIG_METAS_PROP_X_CENTRO", foreignKey: "ANO_EJE"});
  SIG_METAS_PROP_X_CENTRO.hasMany(SIG_MP_CENTRO_RUBRO, { as: "SIG_MP_CENTRO_RUBROs", foreignKey: "ANO_EJE"});
  SIG_MP_CENTRO_RUBRO.belongsTo(SIG_METAS_PROP_X_CENTRO, { as: "CENTRO_COSTO_SIG_METAS_PROP_X_CENTRO", foreignKey: "CENTRO_COSTO"});
  SIG_METAS_PROP_X_CENTRO.hasMany(SIG_MP_CENTRO_RUBRO, { as: "CENTRO_COSTO_SIG_MP_CENTRO_RUBROs", foreignKey: "CENTRO_COSTO"});
  SIG_MP_CENTRO_RUBRO.belongsTo(SIG_METAS_PROP_X_CENTRO, { as: "SEC_EJEC_SIG_METAS_PROP_X_CENTRO", foreignKey: "SEC_EJEC"});
  SIG_METAS_PROP_X_CENTRO.hasMany(SIG_MP_CENTRO_RUBRO, { as: "SEC_EJEC_SIG_MP_CENTRO_RUBROs", foreignKey: "SEC_EJEC"});
  SIG_MP_CENTRO_RUBRO.belongsTo(SIG_METAS_PROP_X_CENTRO, { as: "SECUENCIA_SIG_METAS_PROP_X_CENTRO", foreignKey: "SECUENCIA"});
  SIG_METAS_PROP_X_CENTRO.hasMany(SIG_MP_CENTRO_RUBRO, { as: "SECUENCIA_SIG_MP_CENTRO_RUBROs", foreignKey: "SECUENCIA"});
  SIG_CONSTRUCCIONES_DET.belongsTo(SIG_MODALIDAD_CONSTRUCCION, { as: "COD_MODALIDAD_SIG_MODALIDAD_CONSTRUCCION", foreignKey: "COD_MODALIDAD"});
  SIG_MODALIDAD_CONSTRUCCION.hasMany(SIG_CONSTRUCCIONES_DET, { as: "SIG_CONSTRUCCIONES_DETs", foreignKey: "COD_MODALIDAD"});
  SIG_CUENTA_CONSTRUCCION.belongsTo(SIG_MODALIDAD_CONSTRUCCION, { as: "COD_MODALIDAD_SIG_MODALIDAD_CONSTRUCCION", foreignKey: "COD_MODALIDAD"});
  SIG_MODALIDAD_CONSTRUCCION.hasMany(SIG_CUENTA_CONSTRUCCION, { as: "SIG_CUENTA_CONSTRUCCIONs", foreignKey: "COD_MODALIDAD"});
  SIG_DETALLE_ACTIVOS.belongsTo(SIG_MOVIMIENTO_ACTIVO, { as: "ANO_EJE_SIG_MOVIMIENTO_ACTIVO", foreignKey: "ANO_EJE"});
  SIG_MOVIMIENTO_ACTIVO.hasMany(SIG_DETALLE_ACTIVOS, { as: "SIG_DETALLE_ACTIVOs", foreignKey: "ANO_EJE"});
  SIG_DETALLE_ACTIVOS.belongsTo(SIG_MOVIMIENTO_ACTIVO, { as: "MES_PROCESO_SIG_MOVIMIENTO_ACTIVO", foreignKey: "MES_PROCESO"});
  SIG_MOVIMIENTO_ACTIVO.hasMany(SIG_DETALLE_ACTIVOS, { as: "MES_PROCESO_SIG_DETALLE_ACTIVOs", foreignKey: "MES_PROCESO"});
  SIG_DETALLE_ACTIVOS.belongsTo(SIG_MOVIMIENTO_ACTIVO, { as: "NRO_MOVIMTO_SIG_MOVIMIENTO_ACTIVO", foreignKey: "NRO_MOVIMTO"});
  SIG_MOVIMIENTO_ACTIVO.hasMany(SIG_DETALLE_ACTIVOS, { as: "NRO_MOVIMTO_SIG_DETALLE_ACTIVOs", foreignKey: "NRO_MOVIMTO"});
  SIG_DETALLE_ACTIVOS.belongsTo(SIG_MOVIMIENTO_ACTIVO, { as: "TIPO_MOVIMTO_SIG_MOVIMIENTO_ACTIVO", foreignKey: "TIPO_MOVIMTO"});
  SIG_MOVIMIENTO_ACTIVO.hasMany(SIG_DETALLE_ACTIVOS, { as: "TIPO_MOVIMTO_SIG_DETALLE_ACTIVOs", foreignKey: "TIPO_MOVIMTO"});
  SIG_DETALLE_BIENES.belongsTo(SIG_MOVIMIENTO_BIENES, { as: "ANO_EJE_SIG_MOVIMIENTO_BIENE", foreignKey: "ANO_EJE"});
  SIG_MOVIMIENTO_BIENES.hasMany(SIG_DETALLE_BIENES, { as: "SIG_DETALLE_BIENEs", foreignKey: "ANO_EJE"});
  SIG_DETALLE_BIENES.belongsTo(SIG_MOVIMIENTO_BIENES, { as: "SEC_EJEC_SIG_MOVIMIENTO_BIENE", foreignKey: "SEC_EJEC"});
  SIG_MOVIMIENTO_BIENES.hasMany(SIG_DETALLE_BIENES, { as: "SEC_EJEC_SIG_DETALLE_BIENEs", foreignKey: "SEC_EJEC"});
  SIG_DETALLE_BIENES.belongsTo(SIG_MOVIMIENTO_BIENES, { as: "MES_PROCESO_SIG_MOVIMIENTO_BIENE", foreignKey: "MES_PROCESO"});
  SIG_MOVIMIENTO_BIENES.hasMany(SIG_DETALLE_BIENES, { as: "MES_PROCESO_SIG_DETALLE_BIENEs", foreignKey: "MES_PROCESO"});
  SIG_DETALLE_BIENES.belongsTo(SIG_MOVIMIENTO_BIENES, { as: "NRO_MOVIMTO_SIG_MOVIMIENTO_BIENE", foreignKey: "NRO_MOVIMTO"});
  SIG_MOVIMIENTO_BIENES.hasMany(SIG_DETALLE_BIENES, { as: "NRO_MOVIMTO_SIG_DETALLE_BIENEs", foreignKey: "NRO_MOVIMTO"});
  SIG_DETALLE_BIENES.belongsTo(SIG_MOVIMIENTO_BIENES, { as: "TIPO_MOVIMTO_SIG_MOVIMIENTO_BIENE", foreignKey: "TIPO_MOVIMTO"});
  SIG_MOVIMIENTO_BIENES.hasMany(SIG_DETALLE_BIENES, { as: "TIPO_MOVIMTO_SIG_DETALLE_BIENEs", foreignKey: "TIPO_MOVIMTO"});
  SIG_MOVIMIENTO_CONTABLE_COMP.belongsTo(SIG_MOVIMIENTO_CONTABLE, { as: "ANO_EJE_SIG_MOVIMIENTO_CONTABLE", foreignKey: "ANO_EJE"});
  SIG_MOVIMIENTO_CONTABLE.hasMany(SIG_MOVIMIENTO_CONTABLE_COMP, { as: "SIG_MOVIMIENTO_CONTABLE_COMPs", foreignKey: "ANO_EJE"});
  SIG_MOVIMIENTO_CONTABLE_COMP.belongsTo(SIG_MOVIMIENTO_CONTABLE, { as: "NMES_PROC_AMC_SIG_MOVIMIENTO_CONTABLE", foreignKey: "NMES_PROC_AMC"});
  SIG_MOVIMIENTO_CONTABLE.hasMany(SIG_MOVIMIENTO_CONTABLE_COMP, { as: "NMES_PROC_AMC_SIG_MOVIMIENTO_CONTABLE_COMPs", foreignKey: "NMES_PROC_AMC"});
  SIG_MOVIMIENTO_CONTABLE_COMP.belongsTo(SIG_MOVIMIENTO_CONTABLE, { as: "SEC_EJEC_SIG_MOVIMIENTO_CONTABLE", foreignKey: "SEC_EJEC"});
  SIG_MOVIMIENTO_CONTABLE.hasMany(SIG_MOVIMIENTO_CONTABLE_COMP, { as: "SEC_EJEC_SIG_MOVIMIENTO_CONTABLE_COMPs", foreignKey: "SEC_EJEC"});
  SIG_MOVIMIENTO_CONTABLE_COMP.belongsTo(SIG_MOVIMIENTO_CONTABLE, { as: "SECUENCIA_SIG_MOVIMIENTO_CONTABLE", foreignKey: "SECUENCIA"});
  SIG_MOVIMIENTO_CONTABLE.hasMany(SIG_MOVIMIENTO_CONTABLE_COMP, { as: "SECUENCIA_SIG_MOVIMIENTO_CONTABLE_COMPs", foreignKey: "SECUENCIA"});
  SIG_MOVIMIENTO_CONTABLE_COMP.belongsTo(SIG_MOVIMIENTO_CONTABLE, { as: "TIPO_MODALIDAD_SIG_MOVIMIENTO_CONTABLE", foreignKey: "TIPO_MODALIDAD"});
  SIG_MOVIMIENTO_CONTABLE.hasMany(SIG_MOVIMIENTO_CONTABLE_COMP, { as: "TIPO_MODALIDAD_SIG_MOVIMIENTO_CONTABLE_COMPs", foreignKey: "TIPO_MODALIDAD"});
  SIG_DET_ADMINISTRATIVO.belongsTo(SIG_MOVIM_ADMINISTRATIVO, { as: "ANO_EJE_SIG_MOVIM_ADMINISTRATIVO", foreignKey: "ANO_EJE"});
  SIG_MOVIM_ADMINISTRATIVO.hasMany(SIG_DET_ADMINISTRATIVO, { as: "SIG_DET_ADMINISTRATIVOs", foreignKey: "ANO_EJE"});
  SIG_DET_ADMINISTRATIVO.belongsTo(SIG_MOVIM_ADMINISTRATIVO, { as: "MES_EJE_SIG_MOVIM_ADMINISTRATIVO", foreignKey: "MES_EJE"});
  SIG_MOVIM_ADMINISTRATIVO.hasMany(SIG_DET_ADMINISTRATIVO, { as: "MES_EJE_SIG_DET_ADMINISTRATIVOs", foreignKey: "MES_EJE"});
  SIG_DET_ADMINISTRATIVO.belongsTo(SIG_MOVIM_ADMINISTRATIVO, { as: "NRO_MOVIMTO_SIG_MOVIM_ADMINISTRATIVO", foreignKey: "NRO_MOVIMTO"});
  SIG_MOVIM_ADMINISTRATIVO.hasMany(SIG_DET_ADMINISTRATIVO, { as: "NRO_MOVIMTO_SIG_DET_ADMINISTRATIVOs", foreignKey: "NRO_MOVIMTO"});
  SIG_DET_ADMINISTRATIVO.belongsTo(SIG_MOVIM_ADMINISTRATIVO, { as: "SEC_EJEC_SIG_MOVIM_ADMINISTRATIVO", foreignKey: "SEC_EJEC"});
  SIG_MOVIM_ADMINISTRATIVO.hasMany(SIG_DET_ADMINISTRATIVO, { as: "SEC_EJEC_SIG_DET_ADMINISTRATIVOs", foreignKey: "SEC_EJEC"});
  SIG_DET_ADMINISTRATIVO.belongsTo(SIG_MOVIM_ADMINISTRATIVO, { as: "TIPO_ACTO_ADM_SIG_MOVIM_ADMINISTRATIVO", foreignKey: "TIPO_ACTO_ADM"});
  SIG_MOVIM_ADMINISTRATIVO.hasMany(SIG_DET_ADMINISTRATIVO, { as: "TIPO_ACTO_ADM_SIG_DET_ADMINISTRATIVOs", foreignKey: "TIPO_ACTO_ADM"});
  SIG_DET_ADMINISTRATIVO.belongsTo(SIG_MOVIM_ADMINISTRATIVO, { as: "TIPO_PATRIMONIO_SIG_MOVIM_ADMINISTRATIVO", foreignKey: "TIPO_PATRIMONIO"});
  SIG_MOVIM_ADMINISTRATIVO.hasMany(SIG_DET_ADMINISTRATIVO, { as: "TIPO_PATRIMONIO_SIG_DET_ADMINISTRATIVOs", foreignKey: "TIPO_PATRIMONIO"});
  SIG_SECUENCIA_MOV_ALMACEN.belongsTo(SIG_MOVIM_ALMACEN, { as: "ALMACEN_SIG_MOVIM_ALMACEN", foreignKey: "ALMACEN"});
  SIG_MOVIM_ALMACEN.hasMany(SIG_SECUENCIA_MOV_ALMACEN, { as: "SIG_SECUENCIA_MOV_ALMACENs", foreignKey: "ALMACEN"});
  SIG_SECUENCIA_MOV_ALMACEN.belongsTo(SIG_MOVIM_ALMACEN, { as: "ANO_EJE_SIG_MOVIM_ALMACEN", foreignKey: "ANO_EJE"});
  SIG_MOVIM_ALMACEN.hasMany(SIG_SECUENCIA_MOV_ALMACEN, { as: "ANO_EJE_SIG_SECUENCIA_MOV_ALMACENs", foreignKey: "ANO_EJE"});
  SIG_SECUENCIA_MOV_ALMACEN.belongsTo(SIG_MOVIM_ALMACEN, { as: "NRO_MOVIMTO_SIG_MOVIM_ALMACEN", foreignKey: "NRO_MOVIMTO"});
  SIG_MOVIM_ALMACEN.hasMany(SIG_SECUENCIA_MOV_ALMACEN, { as: "NRO_MOVIMTO_SIG_SECUENCIA_MOV_ALMACENs", foreignKey: "NRO_MOVIMTO"});
  SIG_SECUENCIA_MOV_ALMACEN.belongsTo(SIG_MOVIM_ALMACEN, { as: "SEC_ALMACEN_SIG_MOVIM_ALMACEN", foreignKey: "SEC_ALMACEN"});
  SIG_MOVIM_ALMACEN.hasMany(SIG_SECUENCIA_MOV_ALMACEN, { as: "SEC_ALMACEN_SIG_SECUENCIA_MOV_ALMACENs", foreignKey: "SEC_ALMACEN"});
  SIG_SECUENCIA_MOV_ALMACEN.belongsTo(SIG_MOVIM_ALMACEN, { as: "sec_ejec_SIG_MOVIM_ALMACEN", foreignKey: "sec_ejec"});
  SIG_MOVIM_ALMACEN.hasMany(SIG_SECUENCIA_MOV_ALMACEN, { as: "sec_ejec_SIG_SECUENCIA_MOV_ALMACENs", foreignKey: "sec_ejec"});
  SIG_SECUENCIA_MOV_ALMACEN.belongsTo(SIG_MOVIM_ALMACEN, { as: "TIPO_MOVIMTO_SIG_MOVIM_ALMACEN", foreignKey: "TIPO_MOVIMTO"});
  SIG_MOVIM_ALMACEN.hasMany(SIG_SECUENCIA_MOV_ALMACEN, { as: "TIPO_MOVIMTO_SIG_SECUENCIA_MOV_ALMACENs", foreignKey: "TIPO_MOVIMTO"});
  SIG_SECUENCIA_MOV_ALMACEN.belongsTo(SIG_MOVIM_ALMACEN, { as: "TIPO_PPTO_SIG_MOVIM_ALMACEN", foreignKey: "TIPO_PPTO"});
  SIG_MOVIM_ALMACEN.hasMany(SIG_SECUENCIA_MOV_ALMACEN, { as: "TIPO_PPTO_SIG_SECUENCIA_MOV_ALMACENs", foreignKey: "TIPO_PPTO"});
  SIG_SECUENCIA_MOV_ALMACEN.belongsTo(SIG_MOVIM_ALMACEN, { as: "TIPO_TRANSAC_SIG_MOVIM_ALMACEN", foreignKey: "TIPO_TRANSAC"});
  SIG_MOVIM_ALMACEN.hasMany(SIG_SECUENCIA_MOV_ALMACEN, { as: "TIPO_TRANSAC_SIG_SECUENCIA_MOV_ALMACENs", foreignKey: "TIPO_TRANSAC"});
  SIG_SECUENCIA_MOV_CONFOR_SERV.belongsTo(SIG_MOVIM_CONFOR_SERVICIO, { as: "ANO_EJE_SIG_MOVIM_CONFOR_SERVICIO", foreignKey: "ANO_EJE"});
  SIG_MOVIM_CONFOR_SERVICIO.hasMany(SIG_SECUENCIA_MOV_CONFOR_SERV, { as: "SIG_SECUENCIA_MOV_CONFOR_SERVs", foreignKey: "ANO_EJE"});
  SIG_SECUENCIA_MOV_CONFOR_SERV.belongsTo(SIG_MOVIM_CONFOR_SERVICIO, { as: "NRO_MOVIMTO_SIG_MOVIM_CONFOR_SERVICIO", foreignKey: "NRO_MOVIMTO"});
  SIG_MOVIM_CONFOR_SERVICIO.hasMany(SIG_SECUENCIA_MOV_CONFOR_SERV, { as: "NRO_MOVIMTO_SIG_SECUENCIA_MOV_CONFOR_SERVs", foreignKey: "NRO_MOVIMTO"});
  SIG_SECUENCIA_MOV_CONFOR_SERV.belongsTo(SIG_MOVIM_CONFOR_SERVICIO, { as: "SEC_EJEC_SIG_MOVIM_CONFOR_SERVICIO", foreignKey: "SEC_EJEC"});
  SIG_MOVIM_CONFOR_SERVICIO.hasMany(SIG_SECUENCIA_MOV_CONFOR_SERV, { as: "SEC_EJEC_SIG_SECUENCIA_MOV_CONFOR_SERVs", foreignKey: "SEC_EJEC"});
  SIG_SECUENCIA_MOV_CONFOR_SERV.belongsTo(SIG_MOVIM_CONFOR_SERVICIO, { as: "TIPO_MOVIMTO_SIG_MOVIM_CONFOR_SERVICIO", foreignKey: "TIPO_MOVIMTO"});
  SIG_MOVIM_CONFOR_SERVICIO.hasMany(SIG_SECUENCIA_MOV_CONFOR_SERV, { as: "TIPO_MOVIMTO_SIG_SECUENCIA_MOV_CONFOR_SERVs", foreignKey: "TIPO_MOVIMTO"});
  SIG_SECUENCIA_MOV_CONFOR_SERV.belongsTo(SIG_MOVIM_CONFOR_SERVICIO, { as: "TIPO_PPTO_SIG_MOVIM_CONFOR_SERVICIO", foreignKey: "TIPO_PPTO"});
  SIG_MOVIM_CONFOR_SERVICIO.hasMany(SIG_SECUENCIA_MOV_CONFOR_SERV, { as: "TIPO_PPTO_SIG_SECUENCIA_MOV_CONFOR_SERVs", foreignKey: "TIPO_PPTO"});
  SIG_SECUENCIA_MOV_CONFOR_SERV.belongsTo(SIG_MOVIM_CONFOR_SERVICIO, { as: "TIPO_TRANSAC_SIG_MOVIM_CONFOR_SERVICIO", foreignKey: "TIPO_TRANSAC"});
  SIG_MOVIM_CONFOR_SERVICIO.hasMany(SIG_SECUENCIA_MOV_CONFOR_SERV, { as: "TIPO_TRANSAC_SIG_SECUENCIA_MOV_CONFOR_SERVs", foreignKey: "TIPO_TRANSAC"});
  SIG_MSG_ALERTA.belongsTo(SIG_MSG_ACTIVA, { as: "SEC_TIPO_ACTIVA_SIG_MSG_ACTIVA", foreignKey: "SEC_TIPO_ACTIVA"});
  SIG_MSG_ACTIVA.hasMany(SIG_MSG_ALERTA, { as: "SIG_MSG_ALERTa", foreignKey: "SEC_TIPO_ACTIVA"});
  SIG_MSG_DESTINATARIO.belongsTo(SIG_MSG_ALERTA, { as: "SEC_ALERTA_SIG_MSG_ALERTum", foreignKey: "SEC_ALERTA"});
  SIG_MSG_ALERTA.hasMany(SIG_MSG_DESTINATARIO, { as: "SIG_MSG_DESTINATARIOs", foreignKey: "SEC_ALERTA"});
  SIG_MSG_DESTINATARIO.belongsTo(SIG_MSG_ALERTA, { as: "SEC_EJEC_SIG_MSG_ALERTum", foreignKey: "SEC_EJEC"});
  SIG_MSG_ALERTA.hasMany(SIG_MSG_DESTINATARIO, { as: "SEC_EJEC_SIG_MSG_DESTINATARIOs", foreignKey: "SEC_EJEC"});
  SIG_MSG_DESTINATARIO.belongsTo(SIG_MSG_ALERTA, { as: "SEC_GRUPO_SIG_MSG_ALERTum", foreignKey: "SEC_GRUPO"});
  SIG_MSG_ALERTA.hasMany(SIG_MSG_DESTINATARIO, { as: "SEC_GRUPO_SIG_MSG_DESTINATARIOs", foreignKey: "SEC_GRUPO"});
  SIG_MSG_DESTINATARIO.belongsTo(SIG_MSG_ALERTA, { as: "SEC_MODULO_SIG_MSG_ALERTum", foreignKey: "SEC_MODULO"});
  SIG_MSG_ALERTA.hasMany(SIG_MSG_DESTINATARIO, { as: "SEC_MODULO_SIG_MSG_DESTINATARIOs", foreignKey: "SEC_MODULO"});
  SIG_MSG_DOCUMENTO.belongsTo(SIG_MSG_ALERTA, { as: "SEC_ALERTA_SIG_MSG_ALERTum", foreignKey: "SEC_ALERTA"});
  SIG_MSG_ALERTA.hasMany(SIG_MSG_DOCUMENTO, { as: "SIG_MSG_DOCUMENTOs", foreignKey: "SEC_ALERTA"});
  SIG_MSG_DOCUMENTO.belongsTo(SIG_MSG_ALERTA, { as: "SEC_EJEC_SIG_MSG_ALERTum", foreignKey: "SEC_EJEC"});
  SIG_MSG_ALERTA.hasMany(SIG_MSG_DOCUMENTO, { as: "SEC_EJEC_SIG_MSG_DOCUMENTOs", foreignKey: "SEC_EJEC"});
  SIG_MSG_DOCUMENTO.belongsTo(SIG_MSG_ALERTA, { as: "SEC_GRUPO_SIG_MSG_ALERTum", foreignKey: "SEC_GRUPO"});
  SIG_MSG_ALERTA.hasMany(SIG_MSG_DOCUMENTO, { as: "SEC_GRUPO_SIG_MSG_DOCUMENTOs", foreignKey: "SEC_GRUPO"});
  SIG_MSG_DOCUMENTO.belongsTo(SIG_MSG_ALERTA, { as: "SEC_MODULO_SIG_MSG_ALERTum", foreignKey: "SEC_MODULO"});
  SIG_MSG_ALERTA.hasMany(SIG_MSG_DOCUMENTO, { as: "SEC_MODULO_SIG_MSG_DOCUMENTOs", foreignKey: "SEC_MODULO"});
  SIG_MSG_PROGRAMA.belongsTo(SIG_MSG_ALERTA, { as: "SEC_ALERTA_SIG_MSG_ALERTum", foreignKey: "SEC_ALERTA"});
  SIG_MSG_ALERTA.hasMany(SIG_MSG_PROGRAMA, { as: "SIG_MSG_PROGRAMAs", foreignKey: "SEC_ALERTA"});
  SIG_MSG_PROGRAMA.belongsTo(SIG_MSG_ALERTA, { as: "SEC_EJEC_SIG_MSG_ALERTum", foreignKey: "SEC_EJEC"});
  SIG_MSG_ALERTA.hasMany(SIG_MSG_PROGRAMA, { as: "SEC_EJEC_SIG_MSG_PROGRAMAs", foreignKey: "SEC_EJEC"});
  SIG_MSG_PROGRAMA.belongsTo(SIG_MSG_ALERTA, { as: "SEC_GRUPO_SIG_MSG_ALERTum", foreignKey: "SEC_GRUPO"});
  SIG_MSG_ALERTA.hasMany(SIG_MSG_PROGRAMA, { as: "SEC_GRUPO_SIG_MSG_PROGRAMAs", foreignKey: "SEC_GRUPO"});
  SIG_MSG_PROGRAMA.belongsTo(SIG_MSG_ALERTA, { as: "SEC_MODULO_SIG_MSG_ALERTum", foreignKey: "SEC_MODULO"});
  SIG_MSG_ALERTA.hasMany(SIG_MSG_PROGRAMA, { as: "SEC_MODULO_SIG_MSG_PROGRAMAs", foreignKey: "SEC_MODULO"});
  SIG_MSG_DOCU_DESTINO.belongsTo(SIG_MSG_DESTINATARIO, { as: "EMPLEADO_SIG_MSG_DESTINATARIO", foreignKey: "EMPLEADO"});
  SIG_MSG_DESTINATARIO.hasMany(SIG_MSG_DOCU_DESTINO, { as: "SIG_MSG_DOCU_DESTINOs", foreignKey: "EMPLEADO"});
  SIG_MSG_DOCU_DESTINO.belongsTo(SIG_MSG_DOCUMENTO, { as: "SEC_ALERTA_SIG_MSG_DOCUMENTO", foreignKey: "SEC_ALERTA"});
  SIG_MSG_DOCUMENTO.hasMany(SIG_MSG_DOCU_DESTINO, { as: "SIG_MSG_DOCU_DESTINOs", foreignKey: "SEC_ALERTA"});
  SIG_MSG_DOCU_DESTINO.belongsTo(SIG_MSG_DOCUMENTO, { as: "SEC_EJEC_SIG_MSG_DOCUMENTO", foreignKey: "SEC_EJEC"});
  SIG_MSG_DOCUMENTO.hasMany(SIG_MSG_DOCU_DESTINO, { as: "SEC_EJEC_SIG_MSG_DOCU_DESTINOs", foreignKey: "SEC_EJEC"});
  SIG_MSG_DOCU_DESTINO.belongsTo(SIG_MSG_DOCUMENTO, { as: "SEC_GRUPO_SIG_MSG_DOCUMENTO", foreignKey: "SEC_GRUPO"});
  SIG_MSG_DOCUMENTO.hasMany(SIG_MSG_DOCU_DESTINO, { as: "SEC_GRUPO_SIG_MSG_DOCU_DESTINOs", foreignKey: "SEC_GRUPO"});
  SIG_MSG_DOCU_DESTINO.belongsTo(SIG_MSG_DOCUMENTO, { as: "SEC_MODULO_SIG_MSG_DOCUMENTO", foreignKey: "SEC_MODULO"});
  SIG_MSG_DOCUMENTO.hasMany(SIG_MSG_DOCU_DESTINO, { as: "SEC_MODULO_SIG_MSG_DOCU_DESTINOs", foreignKey: "SEC_MODULO"});
  SIG_MSG_DOCU_DESTINO.belongsTo(SIG_MSG_DOCUMENTO, { as: "SEC_DOCUMENTO_SIG_MSG_DOCUMENTO", foreignKey: "SEC_DOCUMENTO"});
  SIG_MSG_DOCUMENTO.hasMany(SIG_MSG_DOCU_DESTINO, { as: "SEC_DOCUMENTO_SIG_MSG_DOCU_DESTINOs", foreignKey: "SEC_DOCUMENTO"});
  SIG_MSG_DOCU_PROG.belongsTo(SIG_MSG_DOCUMENTO, { as: "SEC_DOCUMENTO_SIG_MSG_DOCUMENTO", foreignKey: "SEC_DOCUMENTO"});
  SIG_MSG_DOCUMENTO.hasMany(SIG_MSG_DOCU_PROG, { as: "SIG_MSG_DOCU_PROGs", foreignKey: "SEC_DOCUMENTO"});
  SIG_MSG_LOG_MOVIMIENTO.belongsTo(SIG_MSG_DOCUMENTO, { as: "SEC_ALERTA_SIG_MSG_DOCUMENTO", foreignKey: "SEC_ALERTA"});
  SIG_MSG_DOCUMENTO.hasMany(SIG_MSG_LOG_MOVIMIENTO, { as: "SIG_MSG_LOG_MOVIMIENTOs", foreignKey: "SEC_ALERTA"});
  SIG_MSG_LOG_MOVIMIENTO.belongsTo(SIG_MSG_DOCUMENTO, { as: "SEC_EJEC_SIG_MSG_DOCUMENTO", foreignKey: "SEC_EJEC"});
  SIG_MSG_DOCUMENTO.hasMany(SIG_MSG_LOG_MOVIMIENTO, { as: "SEC_EJEC_SIG_MSG_LOG_MOVIMIENTOs", foreignKey: "SEC_EJEC"});
  SIG_MSG_LOG_MOVIMIENTO.belongsTo(SIG_MSG_DOCUMENTO, { as: "SEC_GRUPO_SIG_MSG_DOCUMENTO", foreignKey: "SEC_GRUPO"});
  SIG_MSG_DOCUMENTO.hasMany(SIG_MSG_LOG_MOVIMIENTO, { as: "SEC_GRUPO_SIG_MSG_LOG_MOVIMIENTOs", foreignKey: "SEC_GRUPO"});
  SIG_MSG_LOG_MOVIMIENTO.belongsTo(SIG_MSG_DOCUMENTO, { as: "SEC_MODULO_SIG_MSG_DOCUMENTO", foreignKey: "SEC_MODULO"});
  SIG_MSG_DOCUMENTO.hasMany(SIG_MSG_LOG_MOVIMIENTO, { as: "SEC_MODULO_SIG_MSG_LOG_MOVIMIENTOs", foreignKey: "SEC_MODULO"});
  SIG_MSG_LOG_MOVIMIENTO.belongsTo(SIG_MSG_DOCUMENTO, { as: "SEC_DOCUMENTO_SIG_MSG_DOCUMENTO", foreignKey: "SEC_DOCUMENTO"});
  SIG_MSG_DOCUMENTO.hasMany(SIG_MSG_LOG_MOVIMIENTO, { as: "SEC_DOCUMENTO_SIG_MSG_LOG_MOVIMIENTOs", foreignKey: "SEC_DOCUMENTO"});
  SIG_MSG_LOG_MOVIMIENTO.belongsTo(SIG_MSG_DOCU_DESTINO, { as: "EMPLEADO_SIG_MSG_DOCU_DESTINO", foreignKey: "EMPLEADO"});
  SIG_MSG_DOCU_DESTINO.hasMany(SIG_MSG_LOG_MOVIMIENTO, { as: "SIG_MSG_LOG_MOVIMIENTOs", foreignKey: "EMPLEADO"});
  SIG_MSG_LOG_MOVIMIENTO.belongsTo(SIG_MSG_DOCU_DESTINO, { as: "SEC_DESTINO_SIG_MSG_DOCU_DESTINO", foreignKey: "SEC_DESTINO"});
  SIG_MSG_DOCU_DESTINO.hasMany(SIG_MSG_LOG_MOVIMIENTO, { as: "SEC_DESTINO_SIG_MSG_LOG_MOVIMIENTOs", foreignKey: "SEC_DESTINO"});
  SIG_MSG_LOG_MOVIMIENTO.belongsTo(SIG_MSG_DOCU_PROG, { as: "SEC_PROG_SIG_MSG_DOCU_PROG", foreignKey: "SEC_PROG"});
  SIG_MSG_DOCU_PROG.hasMany(SIG_MSG_LOG_MOVIMIENTO, { as: "SIG_MSG_LOG_MOVIMIENTOs", foreignKey: "SEC_PROG"});
  SIG_MSG_LOG_MOVIMIENTO.belongsTo(SIG_MSG_DOCU_PROG, { as: "SEC_PROGRAMA_SIG_MSG_DOCU_PROG", foreignKey: "SEC_PROGRAMA"});
  SIG_MSG_DOCU_PROG.hasMany(SIG_MSG_LOG_MOVIMIENTO, { as: "SEC_PROGRAMA_SIG_MSG_LOG_MOVIMIENTOs", foreignKey: "SEC_PROGRAMA"});
  SIG_MSG_ALERTA.belongsTo(SIG_MSG_GRUPO, { as: "SEC_GRUPO_SIG_MSG_GRUPO", foreignKey: "SEC_GRUPO"});
  SIG_MSG_GRUPO.hasMany(SIG_MSG_ALERTA, { as: "SIG_MSG_ALERTa", foreignKey: "SEC_GRUPO"});
  SIG_MSG_ACTIVA.belongsTo(SIG_MSG_MODULO, { as: "SEC_EJEC_SIG_MSG_MODULO", foreignKey: "SEC_EJEC"});
  SIG_MSG_MODULO.hasMany(SIG_MSG_ACTIVA, { as: "SIG_MSG_ACTIVAs", foreignKey: "SEC_EJEC"});
  SIG_MSG_ACTIVA.belongsTo(SIG_MSG_MODULO, { as: "SEC_MODULO_SIG_MSG_MODULO", foreignKey: "SEC_MODULO"});
  SIG_MSG_MODULO.hasMany(SIG_MSG_ACTIVA, { as: "SEC_MODULO_SIG_MSG_ACTIVAs", foreignKey: "SEC_MODULO"});
  SIG_MSG_GRUPO.belongsTo(SIG_MSG_MODULO, { as: "SEC_EJEC_SIG_MSG_MODULO", foreignKey: "SEC_EJEC"});
  SIG_MSG_MODULO.hasMany(SIG_MSG_GRUPO, { as: "SIG_MSG_GRUPOs", foreignKey: "SEC_EJEC"});
  SIG_MSG_GRUPO.belongsTo(SIG_MSG_MODULO, { as: "SEC_MODULO_SIG_MSG_MODULO", foreignKey: "SEC_MODULO"});
  SIG_MSG_MODULO.hasMany(SIG_MSG_GRUPO, { as: "SEC_MODULO_SIG_MSG_GRUPOs", foreignKey: "SEC_MODULO"});
  SIG_MSG_TIPO.belongsTo(SIG_MSG_MODULO, { as: "SEC_EJEC_SIG_MSG_MODULO", foreignKey: "SEC_EJEC"});
  SIG_MSG_MODULO.hasMany(SIG_MSG_TIPO, { as: "SIG_MSG_TIPOs", foreignKey: "SEC_EJEC"});
  SIG_MSG_TIPO.belongsTo(SIG_MSG_MODULO, { as: "SEC_MODULO_SIG_MSG_MODULO", foreignKey: "SEC_MODULO"});
  SIG_MSG_MODULO.hasMany(SIG_MSG_TIPO, { as: "SEC_MODULO_SIG_MSG_TIPOs", foreignKey: "SEC_MODULO"});
  SIG_MSG_DOCU_PROG.belongsTo(SIG_MSG_PROGRAMA, { as: "SEC_ALERTA_SIG_MSG_PROGRAMA", foreignKey: "SEC_ALERTA"});
  SIG_MSG_PROGRAMA.hasMany(SIG_MSG_DOCU_PROG, { as: "SIG_MSG_DOCU_PROGs", foreignKey: "SEC_ALERTA"});
  SIG_MSG_DOCU_PROG.belongsTo(SIG_MSG_PROGRAMA, { as: "SEC_EJEC_SIG_MSG_PROGRAMA", foreignKey: "SEC_EJEC"});
  SIG_MSG_PROGRAMA.hasMany(SIG_MSG_DOCU_PROG, { as: "SEC_EJEC_SIG_MSG_DOCU_PROGs", foreignKey: "SEC_EJEC"});
  SIG_MSG_DOCU_PROG.belongsTo(SIG_MSG_PROGRAMA, { as: "SEC_GRUPO_SIG_MSG_PROGRAMA", foreignKey: "SEC_GRUPO"});
  SIG_MSG_PROGRAMA.hasMany(SIG_MSG_DOCU_PROG, { as: "SEC_GRUPO_SIG_MSG_DOCU_PROGs", foreignKey: "SEC_GRUPO"});
  SIG_MSG_DOCU_PROG.belongsTo(SIG_MSG_PROGRAMA, { as: "SEC_MODULO_SIG_MSG_PROGRAMA", foreignKey: "SEC_MODULO"});
  SIG_MSG_PROGRAMA.hasMany(SIG_MSG_DOCU_PROG, { as: "SEC_MODULO_SIG_MSG_DOCU_PROGs", foreignKey: "SEC_MODULO"});
  SIG_MSG_DOCU_PROG.belongsTo(SIG_MSG_PROGRAMA, { as: "SEC_PROGRAMA_SIG_MSG_PROGRAMA", foreignKey: "SEC_PROGRAMA"});
  SIG_MSG_PROGRAMA.hasMany(SIG_MSG_DOCU_PROG, { as: "SEC_PROGRAMA_SIG_MSG_DOCU_PROGs", foreignKey: "SEC_PROGRAMA"});
  SIG_MSG_ALERTA.belongsTo(SIG_MSG_TIPO, { as: "SEC_EJEC_SIG_MSG_TIPO", foreignKey: "SEC_EJEC"});
  SIG_MSG_TIPO.hasMany(SIG_MSG_ALERTA, { as: "SIG_MSG_ALERTa", foreignKey: "SEC_EJEC"});
  SIG_MSG_ALERTA.belongsTo(SIG_MSG_TIPO, { as: "SEC_MODULO_SIG_MSG_TIPO", foreignKey: "SEC_MODULO"});
  SIG_MSG_TIPO.hasMany(SIG_MSG_ALERTA, { as: "SEC_MODULO_SIG_MSG_ALERTa", foreignKey: "SEC_MODULO"});
  SIG_MSG_ALERTA.belongsTo(SIG_MSG_TIPO, { as: "SEC_TIPO_SIG_MSG_TIPO", foreignKey: "SEC_TIPO"});
  SIG_MSG_TIPO.hasMany(SIG_MSG_ALERTA, { as: "SEC_TIPO_SIG_MSG_ALERTa", foreignKey: "SEC_TIPO"});
  SIG_DEVENGADO.belongsTo(SIG_ORDEN_ADQUISICION, { as: "ANO_EJE_SIG_ORDEN_ADQUISICION", foreignKey: "ANO_EJE"});
  SIG_ORDEN_ADQUISICION.hasMany(SIG_DEVENGADO, { as: "SIG_DEVENGADOs", foreignKey: "ANO_EJE"});
  SIG_DEVENGADO.belongsTo(SIG_ORDEN_ADQUISICION, { as: "NRO_ORDEN_SIG_ORDEN_ADQUISICION", foreignKey: "NRO_ORDEN"});
  SIG_ORDEN_ADQUISICION.hasMany(SIG_DEVENGADO, { as: "NRO_ORDEN_SIG_DEVENGADOs", foreignKey: "NRO_ORDEN"});
  SIG_DEVENGADO.belongsTo(SIG_ORDEN_ADQUISICION, { as: "SEC_EJEC_SIG_ORDEN_ADQUISICION", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_ADQUISICION.hasMany(SIG_DEVENGADO, { as: "SEC_EJEC_SIG_DEVENGADOs", foreignKey: "SEC_EJEC"});
  SIG_DEVENGADO.belongsTo(SIG_ORDEN_ADQUISICION, { as: "TIPO_BIEN_SIG_ORDEN_ADQUISICION", foreignKey: "TIPO_BIEN"});
  SIG_ORDEN_ADQUISICION.hasMany(SIG_DEVENGADO, { as: "TIPO_BIEN_SIG_DEVENGADOs", foreignKey: "TIPO_BIEN"});
  SIG_DEVENGADO.belongsTo(SIG_ORDEN_ADQUISICION, { as: "TIPO_PPTO_SIG_ORDEN_ADQUISICION", foreignKey: "TIPO_PPTO"});
  SIG_ORDEN_ADQUISICION.hasMany(SIG_DEVENGADO, { as: "TIPO_PPTO_SIG_DEVENGADOs", foreignKey: "TIPO_PPTO"});
  SIG_OCE_DET.belongsTo(SIG_ORDEN_ADQUISICION, { as: "ANO_EJE_SIG_ORDEN_ADQUISICION", foreignKey: "ANO_EJE"});
  SIG_ORDEN_ADQUISICION.hasMany(SIG_OCE_DET, { as: "SIG_OCE_DETs", foreignKey: "ANO_EJE"});
  SIG_OCE_DET.belongsTo(SIG_ORDEN_ADQUISICION, { as: "NRO_ORDEN_SIG_ORDEN_ADQUISICION", foreignKey: "NRO_ORDEN"});
  SIG_ORDEN_ADQUISICION.hasMany(SIG_OCE_DET, { as: "NRO_ORDEN_SIG_OCE_DETs", foreignKey: "NRO_ORDEN"});
  SIG_OCE_DET.belongsTo(SIG_ORDEN_ADQUISICION, { as: "SEC_EJEC_SIG_ORDEN_ADQUISICION", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_ADQUISICION.hasMany(SIG_OCE_DET, { as: "SEC_EJEC_SIG_OCE_DETs", foreignKey: "SEC_EJEC"});
  SIG_OCE_DET.belongsTo(SIG_ORDEN_ADQUISICION, { as: "TIPO_BIEN_SIG_ORDEN_ADQUISICION", foreignKey: "TIPO_BIEN"});
  SIG_ORDEN_ADQUISICION.hasMany(SIG_OCE_DET, { as: "TIPO_BIEN_SIG_OCE_DETs", foreignKey: "TIPO_BIEN"});
  SIG_OCE_DET.belongsTo(SIG_ORDEN_ADQUISICION, { as: "TIPO_PPTO_SIG_ORDEN_ADQUISICION", foreignKey: "TIPO_PPTO"});
  SIG_ORDEN_ADQUISICION.hasMany(SIG_OCE_DET, { as: "TIPO_PPTO_SIG_OCE_DETs", foreignKey: "TIPO_PPTO"});
  SIG_ORDEN_INTERFASE.belongsTo(SIG_ORDEN_ADQUISICION, { as: "ANO_EJE_SIG_ORDEN_ADQUISICION", foreignKey: "ANO_EJE"});
  SIG_ORDEN_ADQUISICION.hasMany(SIG_ORDEN_INTERFASE, { as: "SIG_ORDEN_INTERFASEs", foreignKey: "ANO_EJE"});
  SIG_ORDEN_INTERFASE.belongsTo(SIG_ORDEN_ADQUISICION, { as: "NRO_ORDEN_SIG_ORDEN_ADQUISICION", foreignKey: "NRO_ORDEN"});
  SIG_ORDEN_ADQUISICION.hasMany(SIG_ORDEN_INTERFASE, { as: "NRO_ORDEN_SIG_ORDEN_INTERFASEs", foreignKey: "NRO_ORDEN"});
  SIG_ORDEN_INTERFASE.belongsTo(SIG_ORDEN_ADQUISICION, { as: "SEC_EJEC_SIG_ORDEN_ADQUISICION", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_ADQUISICION.hasMany(SIG_ORDEN_INTERFASE, { as: "SEC_EJEC_SIG_ORDEN_INTERFASEs", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_INTERFASE.belongsTo(SIG_ORDEN_ADQUISICION, { as: "TIPO_BIEN_SIG_ORDEN_ADQUISICION", foreignKey: "TIPO_BIEN"});
  SIG_ORDEN_ADQUISICION.hasMany(SIG_ORDEN_INTERFASE, { as: "TIPO_BIEN_SIG_ORDEN_INTERFASEs", foreignKey: "TIPO_BIEN"});
  SIG_ORDEN_INTERFASE.belongsTo(SIG_ORDEN_ADQUISICION, { as: "TIPO_PPTO_SIG_ORDEN_ADQUISICION", foreignKey: "TIPO_PPTO"});
  SIG_ORDEN_ADQUISICION.hasMany(SIG_ORDEN_INTERFASE, { as: "TIPO_PPTO_SIG_ORDEN_INTERFASEs", foreignKey: "TIPO_PPTO"});
  SIG_ORDEN_SECUENCIA.belongsTo(SIG_ORDEN_ADQUISICION, { as: "ANO_EJE_SIG_ORDEN_ADQUISICION", foreignKey: "ANO_EJE"});
  SIG_ORDEN_ADQUISICION.hasMany(SIG_ORDEN_SECUENCIA, { as: "SIG_ORDEN_SECUENCIa", foreignKey: "ANO_EJE"});
  SIG_ORDEN_SECUENCIA.belongsTo(SIG_ORDEN_ADQUISICION, { as: "NRO_ORDEN_SIG_ORDEN_ADQUISICION", foreignKey: "NRO_ORDEN"});
  SIG_ORDEN_ADQUISICION.hasMany(SIG_ORDEN_SECUENCIA, { as: "NRO_ORDEN_SIG_ORDEN_SECUENCIa", foreignKey: "NRO_ORDEN"});
  SIG_ORDEN_SECUENCIA.belongsTo(SIG_ORDEN_ADQUISICION, { as: "SEC_EJEC_SIG_ORDEN_ADQUISICION", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_ADQUISICION.hasMany(SIG_ORDEN_SECUENCIA, { as: "SEC_EJEC_SIG_ORDEN_SECUENCIa", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_SECUENCIA.belongsTo(SIG_ORDEN_ADQUISICION, { as: "TIPO_BIEN_SIG_ORDEN_ADQUISICION", foreignKey: "TIPO_BIEN"});
  SIG_ORDEN_ADQUISICION.hasMany(SIG_ORDEN_SECUENCIA, { as: "TIPO_BIEN_SIG_ORDEN_SECUENCIa", foreignKey: "TIPO_BIEN"});
  SIG_ORDEN_SECUENCIA.belongsTo(SIG_ORDEN_ADQUISICION, { as: "TIPO_PPTO_SIG_ORDEN_ADQUISICION", foreignKey: "TIPO_PPTO"});
  SIG_ORDEN_ADQUISICION.hasMany(SIG_ORDEN_SECUENCIA, { as: "TIPO_PPTO_SIG_ORDEN_SECUENCIa", foreignKey: "TIPO_PPTO"});
  SIG_ORDEN_INTERFASE_ANULAC.belongsTo(SIG_ORDEN_ADQUISICION_ANULAC, { as: "ANO_EJE_SIG_ORDEN_ADQUISICION_ANULAC", foreignKey: "ANO_EJE"});
  SIG_ORDEN_ADQUISICION_ANULAC.hasMany(SIG_ORDEN_INTERFASE_ANULAC, { as: "SIG_ORDEN_INTERFASE_ANULACs", foreignKey: "ANO_EJE"});
  SIG_ORDEN_INTERFASE_ANULAC.belongsTo(SIG_ORDEN_ADQUISICION_ANULAC, { as: "NRO_ORDEN_SIG_ORDEN_ADQUISICION_ANULAC", foreignKey: "NRO_ORDEN"});
  SIG_ORDEN_ADQUISICION_ANULAC.hasMany(SIG_ORDEN_INTERFASE_ANULAC, { as: "NRO_ORDEN_SIG_ORDEN_INTERFASE_ANULACs", foreignKey: "NRO_ORDEN"});
  SIG_ORDEN_INTERFASE_ANULAC.belongsTo(SIG_ORDEN_ADQUISICION_ANULAC, { as: "SEC_EJEC_SIG_ORDEN_ADQUISICION_ANULAC", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_ADQUISICION_ANULAC.hasMany(SIG_ORDEN_INTERFASE_ANULAC, { as: "SEC_EJEC_SIG_ORDEN_INTERFASE_ANULACs", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_INTERFASE_ANULAC.belongsTo(SIG_ORDEN_ADQUISICION_ANULAC, { as: "TIPO_BIEN_SIG_ORDEN_ADQUISICION_ANULAC", foreignKey: "TIPO_BIEN"});
  SIG_ORDEN_ADQUISICION_ANULAC.hasMany(SIG_ORDEN_INTERFASE_ANULAC, { as: "TIPO_BIEN_SIG_ORDEN_INTERFASE_ANULACs", foreignKey: "TIPO_BIEN"});
  SIG_ORDEN_INTERFASE_ANULAC.belongsTo(SIG_ORDEN_ADQUISICION_ANULAC, { as: "TIPO_PPTO_SIG_ORDEN_ADQUISICION_ANULAC", foreignKey: "TIPO_PPTO"});
  SIG_ORDEN_ADQUISICION_ANULAC.hasMany(SIG_ORDEN_INTERFASE_ANULAC, { as: "TIPO_PPTO_SIG_ORDEN_INTERFASE_ANULACs", foreignKey: "TIPO_PPTO"});
  SIG_ORDEN_SECUENCIA_ANULAC.belongsTo(SIG_ORDEN_ADQUISICION_ANULAC, { as: "ANO_EJE_SIG_ORDEN_ADQUISICION_ANULAC", foreignKey: "ANO_EJE"});
  SIG_ORDEN_ADQUISICION_ANULAC.hasMany(SIG_ORDEN_SECUENCIA_ANULAC, { as: "SIG_ORDEN_SECUENCIA_ANULACs", foreignKey: "ANO_EJE"});
  SIG_ORDEN_SECUENCIA_ANULAC.belongsTo(SIG_ORDEN_ADQUISICION_ANULAC, { as: "NRO_ORDEN_SIG_ORDEN_ADQUISICION_ANULAC", foreignKey: "NRO_ORDEN"});
  SIG_ORDEN_ADQUISICION_ANULAC.hasMany(SIG_ORDEN_SECUENCIA_ANULAC, { as: "NRO_ORDEN_SIG_ORDEN_SECUENCIA_ANULACs", foreignKey: "NRO_ORDEN"});
  SIG_ORDEN_SECUENCIA_ANULAC.belongsTo(SIG_ORDEN_ADQUISICION_ANULAC, { as: "SEC_EJEC_SIG_ORDEN_ADQUISICION_ANULAC", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_ADQUISICION_ANULAC.hasMany(SIG_ORDEN_SECUENCIA_ANULAC, { as: "SEC_EJEC_SIG_ORDEN_SECUENCIA_ANULACs", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_SECUENCIA_ANULAC.belongsTo(SIG_ORDEN_ADQUISICION_ANULAC, { as: "TIPO_BIEN_SIG_ORDEN_ADQUISICION_ANULAC", foreignKey: "TIPO_BIEN"});
  SIG_ORDEN_ADQUISICION_ANULAC.hasMany(SIG_ORDEN_SECUENCIA_ANULAC, { as: "TIPO_BIEN_SIG_ORDEN_SECUENCIA_ANULACs", foreignKey: "TIPO_BIEN"});
  SIG_ORDEN_SECUENCIA_ANULAC.belongsTo(SIG_ORDEN_ADQUISICION_ANULAC, { as: "TIPO_PPTO_SIG_ORDEN_ADQUISICION_ANULAC", foreignKey: "TIPO_PPTO"});
  SIG_ORDEN_ADQUISICION_ANULAC.hasMany(SIG_ORDEN_SECUENCIA_ANULAC, { as: "TIPO_PPTO_SIG_ORDEN_SECUENCIA_ANULACs", foreignKey: "TIPO_PPTO"});
  SIG_ORDEN_ITEM_ANEXO.belongsTo(SIG_ORDEN_ITEM, { as: "ANO_EJE_SIG_ORDEN_ITEM", foreignKey: "ANO_EJE"});
  SIG_ORDEN_ITEM.hasMany(SIG_ORDEN_ITEM_ANEXO, { as: "SIG_ORDEN_ITEM_ANEXOs", foreignKey: "ANO_EJE"});
  SIG_ORDEN_ITEM_ANEXO.belongsTo(SIG_ORDEN_ITEM, { as: "NRO_ORDEN_SIG_ORDEN_ITEM", foreignKey: "NRO_ORDEN"});
  SIG_ORDEN_ITEM.hasMany(SIG_ORDEN_ITEM_ANEXO, { as: "NRO_ORDEN_SIG_ORDEN_ITEM_ANEXOs", foreignKey: "NRO_ORDEN"});
  SIG_ORDEN_ITEM_ANEXO.belongsTo(SIG_ORDEN_ITEM, { as: "SEC_EJEC_SIG_ORDEN_ITEM", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_ITEM.hasMany(SIG_ORDEN_ITEM_ANEXO, { as: "SEC_EJEC_SIG_ORDEN_ITEM_ANEXOs", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_ITEM_ANEXO.belongsTo(SIG_ORDEN_ITEM, { as: "SEC_ITEM_SIG_ORDEN_ITEM", foreignKey: "SEC_ITEM"});
  SIG_ORDEN_ITEM.hasMany(SIG_ORDEN_ITEM_ANEXO, { as: "SEC_ITEM_SIG_ORDEN_ITEM_ANEXOs", foreignKey: "SEC_ITEM"});
  SIG_ORDEN_ITEM_ANEXO.belongsTo(SIG_ORDEN_ITEM, { as: "SEC_ORDEN_SIG_ORDEN_ITEM", foreignKey: "SEC_ORDEN"});
  SIG_ORDEN_ITEM.hasMany(SIG_ORDEN_ITEM_ANEXO, { as: "SEC_ORDEN_SIG_ORDEN_ITEM_ANEXOs", foreignKey: "SEC_ORDEN"});
  SIG_ORDEN_ITEM_ANEXO.belongsTo(SIG_ORDEN_ITEM, { as: "TIPO_BIEN_SIG_ORDEN_ITEM", foreignKey: "TIPO_BIEN"});
  SIG_ORDEN_ITEM.hasMany(SIG_ORDEN_ITEM_ANEXO, { as: "TIPO_BIEN_SIG_ORDEN_ITEM_ANEXOs", foreignKey: "TIPO_BIEN"});
  SIG_ORDEN_ITEM_ANEXO.belongsTo(SIG_ORDEN_ITEM, { as: "TIPO_PPTO_SIG_ORDEN_ITEM", foreignKey: "TIPO_PPTO"});
  SIG_ORDEN_ITEM.hasMany(SIG_ORDEN_ITEM_ANEXO, { as: "TIPO_PPTO_SIG_ORDEN_ITEM_ANEXOs", foreignKey: "TIPO_PPTO"});
  SIG_ORDEN_ITEM_ANEXO_ANULAC.belongsTo(SIG_ORDEN_ITEM_ANULAC, { as: "ANO_EJE_SIG_ORDEN_ITEM_ANULAC", foreignKey: "ANO_EJE"});
  SIG_ORDEN_ITEM_ANULAC.hasMany(SIG_ORDEN_ITEM_ANEXO_ANULAC, { as: "SIG_ORDEN_ITEM_ANEXO_ANULACs", foreignKey: "ANO_EJE"});
  SIG_ORDEN_ITEM_ANEXO_ANULAC.belongsTo(SIG_ORDEN_ITEM_ANULAC, { as: "NRO_ORDEN_SIG_ORDEN_ITEM_ANULAC", foreignKey: "NRO_ORDEN"});
  SIG_ORDEN_ITEM_ANULAC.hasMany(SIG_ORDEN_ITEM_ANEXO_ANULAC, { as: "NRO_ORDEN_SIG_ORDEN_ITEM_ANEXO_ANULACs", foreignKey: "NRO_ORDEN"});
  SIG_ORDEN_ITEM_ANEXO_ANULAC.belongsTo(SIG_ORDEN_ITEM_ANULAC, { as: "SEC_EJEC_SIG_ORDEN_ITEM_ANULAC", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_ITEM_ANULAC.hasMany(SIG_ORDEN_ITEM_ANEXO_ANULAC, { as: "SEC_EJEC_SIG_ORDEN_ITEM_ANEXO_ANULACs", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_ITEM_ANEXO_ANULAC.belongsTo(SIG_ORDEN_ITEM_ANULAC, { as: "SEC_ITEM_SIG_ORDEN_ITEM_ANULAC", foreignKey: "SEC_ITEM"});
  SIG_ORDEN_ITEM_ANULAC.hasMany(SIG_ORDEN_ITEM_ANEXO_ANULAC, { as: "SEC_ITEM_SIG_ORDEN_ITEM_ANEXO_ANULACs", foreignKey: "SEC_ITEM"});
  SIG_ORDEN_ITEM_ANEXO_ANULAC.belongsTo(SIG_ORDEN_ITEM_ANULAC, { as: "SEC_ORDEN_SIG_ORDEN_ITEM_ANULAC", foreignKey: "SEC_ORDEN"});
  SIG_ORDEN_ITEM_ANULAC.hasMany(SIG_ORDEN_ITEM_ANEXO_ANULAC, { as: "SEC_ORDEN_SIG_ORDEN_ITEM_ANEXO_ANULACs", foreignKey: "SEC_ORDEN"});
  SIG_ORDEN_ITEM_ANEXO_ANULAC.belongsTo(SIG_ORDEN_ITEM_ANULAC, { as: "TIPO_BIEN_SIG_ORDEN_ITEM_ANULAC", foreignKey: "TIPO_BIEN"});
  SIG_ORDEN_ITEM_ANULAC.hasMany(SIG_ORDEN_ITEM_ANEXO_ANULAC, { as: "TIPO_BIEN_SIG_ORDEN_ITEM_ANEXO_ANULACs", foreignKey: "TIPO_BIEN"});
  SIG_ORDEN_ITEM_ANEXO_ANULAC.belongsTo(SIG_ORDEN_ITEM_ANULAC, { as: "TIPO_PPTO_SIG_ORDEN_ITEM_ANULAC", foreignKey: "TIPO_PPTO"});
  SIG_ORDEN_ITEM_ANULAC.hasMany(SIG_ORDEN_ITEM_ANEXO_ANULAC, { as: "TIPO_PPTO_SIG_ORDEN_ITEM_ANEXO_ANULACs", foreignKey: "TIPO_PPTO"});
  SIG_EXP_SIGA_SECU.belongsTo(SIG_ORDEN_SECUENCIA, { as: "ANO_EJE_SIG_ORDEN_SECUENCIum", foreignKey: "ANO_EJE"});
  SIG_ORDEN_SECUENCIA.hasMany(SIG_EXP_SIGA_SECU, { as: "SIG_EXP_SIGA_SECUs", foreignKey: "ANO_EJE"});
  SIG_EXP_SIGA_SECU.belongsTo(SIG_ORDEN_SECUENCIA, { as: "SEC_EJEC_SIG_ORDEN_SECUENCIum", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_SECUENCIA.hasMany(SIG_EXP_SIGA_SECU, { as: "SEC_EJEC_SIG_EXP_SIGA_SECUs", foreignKey: "SEC_EJEC"});
  SIG_EXP_SIGA_SECU.belongsTo(SIG_ORDEN_SECUENCIA, { as: "TIPO_PPTO_SIG_ORDEN_SECUENCIum", foreignKey: "TIPO_PPTO"});
  SIG_ORDEN_SECUENCIA.hasMany(SIG_EXP_SIGA_SECU, { as: "TIPO_PPTO_SIG_EXP_SIGA_SECUs", foreignKey: "TIPO_PPTO"});
  SIG_EXP_SIGA_SECU.belongsTo(SIG_ORDEN_SECUENCIA, { as: "NRO_ORDEN_SOS_SIG_ORDEN_SECUENCIum", foreignKey: "NRO_ORDEN_SOS"});
  SIG_ORDEN_SECUENCIA.hasMany(SIG_EXP_SIGA_SECU, { as: "NRO_ORDEN_SOS_SIG_EXP_SIGA_SECUs", foreignKey: "NRO_ORDEN_SOS"});
  SIG_EXP_SIGA_SECU.belongsTo(SIG_ORDEN_SECUENCIA, { as: "SEC_ORDEN_SOS_SIG_ORDEN_SECUENCIum", foreignKey: "SEC_ORDEN_SOS"});
  SIG_ORDEN_SECUENCIA.hasMany(SIG_EXP_SIGA_SECU, { as: "SEC_ORDEN_SOS_SIG_EXP_SIGA_SECUs", foreignKey: "SEC_ORDEN_SOS"});
  SIG_EXP_SIGA_SECU.belongsTo(SIG_ORDEN_SECUENCIA, { as: "TIPO_BIEN_SOS_SIG_ORDEN_SECUENCIum", foreignKey: "TIPO_BIEN_SOS"});
  SIG_ORDEN_SECUENCIA.hasMany(SIG_EXP_SIGA_SECU, { as: "TIPO_BIEN_SOS_SIG_EXP_SIGA_SECUs", foreignKey: "TIPO_BIEN_SOS"});
  SIG_ORDEN_ITEM_PPTO.belongsTo(SIG_ORDEN_SECUENCIA, { as: "ANO_EJE_SIG_ORDEN_SECUENCIum", foreignKey: "ANO_EJE"});
  SIG_ORDEN_SECUENCIA.hasMany(SIG_ORDEN_ITEM_PPTO, { as: "SIG_ORDEN_ITEM_PPTOs", foreignKey: "ANO_EJE"});
  SIG_ORDEN_ITEM_PPTO.belongsTo(SIG_ORDEN_SECUENCIA, { as: "NRO_ORDEN_SIG_ORDEN_SECUENCIum", foreignKey: "NRO_ORDEN"});
  SIG_ORDEN_SECUENCIA.hasMany(SIG_ORDEN_ITEM_PPTO, { as: "NRO_ORDEN_SIG_ORDEN_ITEM_PPTOs", foreignKey: "NRO_ORDEN"});
  SIG_ORDEN_ITEM_PPTO.belongsTo(SIG_ORDEN_SECUENCIA, { as: "SEC_EJEC_SIG_ORDEN_SECUENCIum", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_SECUENCIA.hasMany(SIG_ORDEN_ITEM_PPTO, { as: "SEC_EJEC_SIG_ORDEN_ITEM_PPTOs", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_ITEM_PPTO.belongsTo(SIG_ORDEN_SECUENCIA, { as: "SEC_ORDEN_SIG_ORDEN_SECUENCIum", foreignKey: "SEC_ORDEN"});
  SIG_ORDEN_SECUENCIA.hasMany(SIG_ORDEN_ITEM_PPTO, { as: "SEC_ORDEN_SIG_ORDEN_ITEM_PPTOs", foreignKey: "SEC_ORDEN"});
  SIG_ORDEN_ITEM_PPTO.belongsTo(SIG_ORDEN_SECUENCIA, { as: "TIPO_BIEN_SIG_ORDEN_SECUENCIum", foreignKey: "TIPO_BIEN"});
  SIG_ORDEN_SECUENCIA.hasMany(SIG_ORDEN_ITEM_PPTO, { as: "TIPO_BIEN_SIG_ORDEN_ITEM_PPTOs", foreignKey: "TIPO_BIEN"});
  SIG_ORDEN_ITEM_PPTO.belongsTo(SIG_ORDEN_SECUENCIA, { as: "TIPO_PPTO_SIG_ORDEN_SECUENCIum", foreignKey: "TIPO_PPTO"});
  SIG_ORDEN_SECUENCIA.hasMany(SIG_ORDEN_ITEM_PPTO, { as: "TIPO_PPTO_SIG_ORDEN_ITEM_PPTOs", foreignKey: "TIPO_PPTO"});
  SIG_ORDEN_ITEM_ANULAC.belongsTo(SIG_ORDEN_SECUENCIA_ANULAC, { as: "ANO_EJE_SIG_ORDEN_SECUENCIA_ANULAC", foreignKey: "ANO_EJE"});
  SIG_ORDEN_SECUENCIA_ANULAC.hasMany(SIG_ORDEN_ITEM_ANULAC, { as: "SIG_ORDEN_ITEM_ANULACs", foreignKey: "ANO_EJE"});
  SIG_ORDEN_ITEM_ANULAC.belongsTo(SIG_ORDEN_SECUENCIA_ANULAC, { as: "NRO_ORDEN_SIG_ORDEN_SECUENCIA_ANULAC", foreignKey: "NRO_ORDEN"});
  SIG_ORDEN_SECUENCIA_ANULAC.hasMany(SIG_ORDEN_ITEM_ANULAC, { as: "NRO_ORDEN_SIG_ORDEN_ITEM_ANULACs", foreignKey: "NRO_ORDEN"});
  SIG_ORDEN_ITEM_ANULAC.belongsTo(SIG_ORDEN_SECUENCIA_ANULAC, { as: "SEC_EJEC_SIG_ORDEN_SECUENCIA_ANULAC", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_SECUENCIA_ANULAC.hasMany(SIG_ORDEN_ITEM_ANULAC, { as: "SEC_EJEC_SIG_ORDEN_ITEM_ANULACs", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_ITEM_ANULAC.belongsTo(SIG_ORDEN_SECUENCIA_ANULAC, { as: "SEC_ORDEN_SIG_ORDEN_SECUENCIA_ANULAC", foreignKey: "SEC_ORDEN"});
  SIG_ORDEN_SECUENCIA_ANULAC.hasMany(SIG_ORDEN_ITEM_ANULAC, { as: "SEC_ORDEN_SIG_ORDEN_ITEM_ANULACs", foreignKey: "SEC_ORDEN"});
  SIG_ORDEN_ITEM_ANULAC.belongsTo(SIG_ORDEN_SECUENCIA_ANULAC, { as: "TIPO_BIEN_SIG_ORDEN_SECUENCIA_ANULAC", foreignKey: "TIPO_BIEN"});
  SIG_ORDEN_SECUENCIA_ANULAC.hasMany(SIG_ORDEN_ITEM_ANULAC, { as: "TIPO_BIEN_SIG_ORDEN_ITEM_ANULACs", foreignKey: "TIPO_BIEN"});
  SIG_ORDEN_ITEM_ANULAC.belongsTo(SIG_ORDEN_SECUENCIA_ANULAC, { as: "TIPO_PPTO_SIG_ORDEN_SECUENCIA_ANULAC", foreignKey: "TIPO_PPTO"});
  SIG_ORDEN_SECUENCIA_ANULAC.hasMany(SIG_ORDEN_ITEM_ANULAC, { as: "TIPO_PPTO_SIG_ORDEN_ITEM_ANULACs", foreignKey: "TIPO_PPTO"});
  SIG_ORDEN_ITEM_PPTO_ANULAC.belongsTo(SIG_ORDEN_SECUENCIA_ANULAC, { as: "ANO_EJE_SIG_ORDEN_SECUENCIA_ANULAC", foreignKey: "ANO_EJE"});
  SIG_ORDEN_SECUENCIA_ANULAC.hasMany(SIG_ORDEN_ITEM_PPTO_ANULAC, { as: "SIG_ORDEN_ITEM_PPTO_ANULACs", foreignKey: "ANO_EJE"});
  SIG_ORDEN_ITEM_PPTO_ANULAC.belongsTo(SIG_ORDEN_SECUENCIA_ANULAC, { as: "NRO_ORDEN_SIG_ORDEN_SECUENCIA_ANULAC", foreignKey: "NRO_ORDEN"});
  SIG_ORDEN_SECUENCIA_ANULAC.hasMany(SIG_ORDEN_ITEM_PPTO_ANULAC, { as: "NRO_ORDEN_SIG_ORDEN_ITEM_PPTO_ANULACs", foreignKey: "NRO_ORDEN"});
  SIG_ORDEN_ITEM_PPTO_ANULAC.belongsTo(SIG_ORDEN_SECUENCIA_ANULAC, { as: "SEC_EJEC_SIG_ORDEN_SECUENCIA_ANULAC", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_SECUENCIA_ANULAC.hasMany(SIG_ORDEN_ITEM_PPTO_ANULAC, { as: "SEC_EJEC_SIG_ORDEN_ITEM_PPTO_ANULACs", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_ITEM_PPTO_ANULAC.belongsTo(SIG_ORDEN_SECUENCIA_ANULAC, { as: "SEC_ORDEN_SIG_ORDEN_SECUENCIA_ANULAC", foreignKey: "SEC_ORDEN"});
  SIG_ORDEN_SECUENCIA_ANULAC.hasMany(SIG_ORDEN_ITEM_PPTO_ANULAC, { as: "SEC_ORDEN_SIG_ORDEN_ITEM_PPTO_ANULACs", foreignKey: "SEC_ORDEN"});
  SIG_ORDEN_ITEM_PPTO_ANULAC.belongsTo(SIG_ORDEN_SECUENCIA_ANULAC, { as: "TIPO_BIEN_SIG_ORDEN_SECUENCIA_ANULAC", foreignKey: "TIPO_BIEN"});
  SIG_ORDEN_SECUENCIA_ANULAC.hasMany(SIG_ORDEN_ITEM_PPTO_ANULAC, { as: "TIPO_BIEN_SIG_ORDEN_ITEM_PPTO_ANULACs", foreignKey: "TIPO_BIEN"});
  SIG_ORDEN_ITEM_PPTO_ANULAC.belongsTo(SIG_ORDEN_SECUENCIA_ANULAC, { as: "TIPO_PPTO_SIG_ORDEN_SECUENCIA_ANULAC", foreignKey: "TIPO_PPTO"});
  SIG_ORDEN_SECUENCIA_ANULAC.hasMany(SIG_ORDEN_ITEM_PPTO_ANULAC, { as: "TIPO_PPTO_SIG_ORDEN_ITEM_PPTO_ANULACs", foreignKey: "TIPO_PPTO"});
  SIG_ORDEN_PRESUPUESTO_ANULAC.belongsTo(SIG_ORDEN_SECUENCIA_ANULAC, { as: "ANO_EJE_SIG_ORDEN_SECUENCIA_ANULAC", foreignKey: "ANO_EJE"});
  SIG_ORDEN_SECUENCIA_ANULAC.hasMany(SIG_ORDEN_PRESUPUESTO_ANULAC, { as: "SIG_ORDEN_PRESUPUESTO_ANULACs", foreignKey: "ANO_EJE"});
  SIG_ORDEN_PRESUPUESTO_ANULAC.belongsTo(SIG_ORDEN_SECUENCIA_ANULAC, { as: "NRO_ORDEN_SIG_ORDEN_SECUENCIA_ANULAC", foreignKey: "NRO_ORDEN"});
  SIG_ORDEN_SECUENCIA_ANULAC.hasMany(SIG_ORDEN_PRESUPUESTO_ANULAC, { as: "NRO_ORDEN_SIG_ORDEN_PRESUPUESTO_ANULACs", foreignKey: "NRO_ORDEN"});
  SIG_ORDEN_PRESUPUESTO_ANULAC.belongsTo(SIG_ORDEN_SECUENCIA_ANULAC, { as: "SEC_EJEC_SIG_ORDEN_SECUENCIA_ANULAC", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_SECUENCIA_ANULAC.hasMany(SIG_ORDEN_PRESUPUESTO_ANULAC, { as: "SEC_EJEC_SIG_ORDEN_PRESUPUESTO_ANULACs", foreignKey: "SEC_EJEC"});
  SIG_ORDEN_PRESUPUESTO_ANULAC.belongsTo(SIG_ORDEN_SECUENCIA_ANULAC, { as: "SEC_ORDEN_SIG_ORDEN_SECUENCIA_ANULAC", foreignKey: "SEC_ORDEN"});
  SIG_ORDEN_SECUENCIA_ANULAC.hasMany(SIG_ORDEN_PRESUPUESTO_ANULAC, { as: "SEC_ORDEN_SIG_ORDEN_PRESUPUESTO_ANULACs", foreignKey: "SEC_ORDEN"});
  SIG_ORDEN_PRESUPUESTO_ANULAC.belongsTo(SIG_ORDEN_SECUENCIA_ANULAC, { as: "TIPO_BIEN_SIG_ORDEN_SECUENCIA_ANULAC", foreignKey: "TIPO_BIEN"});
  SIG_ORDEN_SECUENCIA_ANULAC.hasMany(SIG_ORDEN_PRESUPUESTO_ANULAC, { as: "TIPO_BIEN_SIG_ORDEN_PRESUPUESTO_ANULACs", foreignKey: "TIPO_BIEN"});
  SIG_ORDEN_PRESUPUESTO_ANULAC.belongsTo(SIG_ORDEN_SECUENCIA_ANULAC, { as: "TIPO_PPTO_SIG_ORDEN_SECUENCIA_ANULAC", foreignKey: "TIPO_PPTO"});
  SIG_ORDEN_SECUENCIA_ANULAC.hasMany(SIG_ORDEN_PRESUPUESTO_ANULAC, { as: "TIPO_PPTO_SIG_ORDEN_PRESUPUESTO_ANULACs", foreignKey: "TIPO_PPTO"});
  SIG_CUADRO_NECESIDAD_DET_PAAC.belongsTo(SIG_PAAC_CENTRO_COSTO, { as: "ANO_EJE_PCC_SIG_PAAC_CENTRO_COSTO", foreignKey: "ANO_EJE_PCC"});
  SIG_PAAC_CENTRO_COSTO.hasMany(SIG_CUADRO_NECESIDAD_DET_PAAC, { as: "SIG_CUADRO_NECESIDAD_DET_PAACs", foreignKey: "ANO_EJE_PCC"});
  SIG_CUADRO_NECESIDAD_DET_PAAC.belongsTo(SIG_PAAC_CENTRO_COSTO, { as: "NRO_CONSOLID_PCC_SIG_PAAC_CENTRO_COSTO", foreignKey: "NRO_CONSOLID_PCC"});
  SIG_PAAC_CENTRO_COSTO.hasMany(SIG_CUADRO_NECESIDAD_DET_PAAC, { as: "NRO_CONSOLID_PCC_SIG_CUADRO_NECESIDAD_DET_PAACs", foreignKey: "NRO_CONSOLID_PCC"});
  SIG_CUADRO_NECESIDAD_DET_PAAC.belongsTo(SIG_PAAC_CENTRO_COSTO, { as: "SEC_CONSOLID_PCC_SIG_PAAC_CENTRO_COSTO", foreignKey: "SEC_CONSOLID_PCC"});
  SIG_PAAC_CENTRO_COSTO.hasMany(SIG_CUADRO_NECESIDAD_DET_PAAC, { as: "SEC_CONSOLID_PCC_SIG_CUADRO_NECESIDAD_DET_PAACs", foreignKey: "SEC_CONSOLID_PCC"});
  SIG_CUADRO_NECESIDAD_DET_PAAC.belongsTo(SIG_PAAC_CENTRO_COSTO, { as: "SEC_CTRO_COSTO_PCC_SIG_PAAC_CENTRO_COSTO", foreignKey: "SEC_CTRO_COSTO_PCC"});
  SIG_PAAC_CENTRO_COSTO.hasMany(SIG_CUADRO_NECESIDAD_DET_PAAC, { as: "SEC_CTRO_COSTO_PCC_SIG_CUADRO_NECESIDAD_DET_PAACs", foreignKey: "SEC_CTRO_COSTO_PCC"});
  SIG_CUADRO_NECESIDAD_DET_PAAC.belongsTo(SIG_PAAC_CENTRO_COSTO, { as: "SEC_EJEC_PCC_SIG_PAAC_CENTRO_COSTO", foreignKey: "SEC_EJEC_PCC"});
  SIG_PAAC_CENTRO_COSTO.hasMany(SIG_CUADRO_NECESIDAD_DET_PAAC, { as: "SEC_EJEC_PCC_SIG_CUADRO_NECESIDAD_DET_PAACs", foreignKey: "SEC_EJEC_PCC"});
  SIG_CUADRO_NECESIDAD_DET_PAAC.belongsTo(SIG_PAAC_CENTRO_COSTO, { as: "SEC_META_PCC_SIG_PAAC_CENTRO_COSTO", foreignKey: "SEC_META_PCC"});
  SIG_PAAC_CENTRO_COSTO.hasMany(SIG_CUADRO_NECESIDAD_DET_PAAC, { as: "SEC_META_PCC_SIG_CUADRO_NECESIDAD_DET_PAACs", foreignKey: "SEC_META_PCC"});
  SIG_CUADRO_NECESIDAD_DET_PAAC.belongsTo(SIG_PAAC_CENTRO_COSTO, { as: "SEC_RESUMEN_PCC_SIG_PAAC_CENTRO_COSTO", foreignKey: "SEC_RESUMEN_PCC"});
  SIG_PAAC_CENTRO_COSTO.hasMany(SIG_CUADRO_NECESIDAD_DET_PAAC, { as: "SEC_RESUMEN_PCC_SIG_CUADRO_NECESIDAD_DET_PAACs", foreignKey: "SEC_RESUMEN_PCC"});
  SIG_CUADRO_NECESIDAD_DET_PAAC.belongsTo(SIG_PAAC_CENTRO_COSTO, { as: "TIPO_BIEN_PCC_SIG_PAAC_CENTRO_COSTO", foreignKey: "TIPO_BIEN_PCC"});
  SIG_PAAC_CENTRO_COSTO.hasMany(SIG_CUADRO_NECESIDAD_DET_PAAC, { as: "TIPO_BIEN_PCC_SIG_CUADRO_NECESIDAD_DET_PAACs", foreignKey: "TIPO_BIEN_PCC"});
  SIG_CUADRO_NECESIDAD_DET_PAAC.belongsTo(SIG_PAAC_CENTRO_COSTO, { as: "TIPO_CONSOLID_PCC_SIG_PAAC_CENTRO_COSTO", foreignKey: "TIPO_CONSOLID_PCC"});
  SIG_PAAC_CENTRO_COSTO.hasMany(SIG_CUADRO_NECESIDAD_DET_PAAC, { as: "TIPO_CONSOLID_PCC_SIG_CUADRO_NECESIDAD_DET_PAACs", foreignKey: "TIPO_CONSOLID_PCC"});
  SIG_CUADRO_NECESIDAD_DET_PAAC.belongsTo(SIG_PAAC_CENTRO_COSTO, { as: "TIPO_GENERACION_PCC_SIG_PAAC_CENTRO_COSTO", foreignKey: "TIPO_GENERACION_PCC"});
  SIG_PAAC_CENTRO_COSTO.hasMany(SIG_CUADRO_NECESIDAD_DET_PAAC, { as: "TIPO_GENERACION_PCC_SIG_CUADRO_NECESIDAD_DET_PAACs", foreignKey: "TIPO_GENERACION_PCC"});
  SIG_PAAC_CENTRO_COSTO_ANEXO.belongsTo(SIG_PAAC_CENTRO_COSTO, { as: "ANO_EJE_SIG_PAAC_CENTRO_COSTO", foreignKey: "ANO_EJE"});
  SIG_PAAC_CENTRO_COSTO.hasMany(SIG_PAAC_CENTRO_COSTO_ANEXO, { as: "SIG_PAAC_CENTRO_COSTO_ANEXOs", foreignKey: "ANO_EJE"});
  SIG_PAAC_CENTRO_COSTO_ANEXO.belongsTo(SIG_PAAC_CENTRO_COSTO, { as: "NRO_CONSOL", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_CENTRO_COSTO.hasMany(SIG_PAAC_CENTRO_COSTO_ANEXO, { as: "NRO_CONSOL_SIG_PAAC_CENTRO_COSTO_ANEXOs", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_CENTRO_COSTO_ANEXO.belongsTo(SIG_PAAC_CENTRO_COSTO, { as: "SEC_CONSOL", foreignKey: "SEC_CONSOLID"});
  SIG_PAAC_CENTRO_COSTO.hasMany(SIG_PAAC_CENTRO_COSTO_ANEXO, { as: "SEC_CONSOL_SIG_PAAC_CENTRO_COSTO_ANEXOs", foreignKey: "SEC_CONSOLID"});
  SIG_PAAC_CENTRO_COSTO_ANEXO.belongsTo(SIG_PAAC_CENTRO_COSTO, { as: "SEC_CTRO_COSTO_SIG_PAAC_CENTRO_COSTO", foreignKey: "SEC_CTRO_COSTO"});
  SIG_PAAC_CENTRO_COSTO.hasMany(SIG_PAAC_CENTRO_COSTO_ANEXO, { as: "SEC_CTRO_COSTO_SIG_PAAC_CENTRO_COSTO_ANEXOs", foreignKey: "SEC_CTRO_COSTO"});
  SIG_PAAC_CENTRO_COSTO_ANEXO.belongsTo(SIG_PAAC_CENTRO_COSTO, { as: "SEC_EJEC_SIG_PAAC_CENTRO_COSTO", foreignKey: "SEC_EJEC"});
  SIG_PAAC_CENTRO_COSTO.hasMany(SIG_PAAC_CENTRO_COSTO_ANEXO, { as: "SEC_EJEC_SIG_PAAC_CENTRO_COSTO_ANEXOs", foreignKey: "SEC_EJEC"});
  SIG_PAAC_CENTRO_COSTO_ANEXO.belongsTo(SIG_PAAC_CENTRO_COSTO, { as: "SEC_META_SIG_PAAC_CENTRO_COSTO", foreignKey: "SEC_META"});
  SIG_PAAC_CENTRO_COSTO.hasMany(SIG_PAAC_CENTRO_COSTO_ANEXO, { as: "SEC_META_SIG_PAAC_CENTRO_COSTO_ANEXOs", foreignKey: "SEC_META"});
  SIG_PAAC_CENTRO_COSTO_ANEXO.belongsTo(SIG_PAAC_CENTRO_COSTO, { as: "SEC_RESUMEN_SIG_PAAC_CENTRO_COSTO", foreignKey: "SEC_RESUMEN"});
  SIG_PAAC_CENTRO_COSTO.hasMany(SIG_PAAC_CENTRO_COSTO_ANEXO, { as: "SEC_RESUMEN_SIG_PAAC_CENTRO_COSTO_ANEXOs", foreignKey: "SEC_RESUMEN"});
  SIG_PAAC_CENTRO_COSTO_ANEXO.belongsTo(SIG_PAAC_CENTRO_COSTO, { as: "TIPO_BIEN_SIG_PAAC_CENTRO_COSTO", foreignKey: "TIPO_BIEN"});
  SIG_PAAC_CENTRO_COSTO.hasMany(SIG_PAAC_CENTRO_COSTO_ANEXO, { as: "TIPO_BIEN_SIG_PAAC_CENTRO_COSTO_ANEXOs", foreignKey: "TIPO_BIEN"});
  SIG_PAAC_CENTRO_COSTO_ANEXO.belongsTo(SIG_PAAC_CENTRO_COSTO, { as: "TIPO_CONSOL", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_CENTRO_COSTO.hasMany(SIG_PAAC_CENTRO_COSTO_ANEXO, { as: "TIPO_CONSOL_SIG_PAAC_CENTRO_COSTO_ANEXOs", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_CENTRO_COSTO_ANEXO.belongsTo(SIG_PAAC_CENTRO_COSTO, { as: "TIPO_GENERACION_SIG_PAAC_CENTRO_COSTO", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_CENTRO_COSTO.hasMany(SIG_PAAC_CENTRO_COSTO_ANEXO, { as: "TIPO_GENERACION_SIG_PAAC_CENTRO_COSTO_ANEXOs", foreignKey: "TIPO_GENERACION"});
  SIG_CONTRATOS.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "ANO_EJE_SIG_PAAC_CONSOLIDADO", foreignKey: "ANO_EJE"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_CONTRATOS, { as: "SIG_CONTRATOs", foreignKey: "ANO_EJE"});
  SIG_CONTRATOS.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "SEC_EJEC_SIG_PAAC_CONSOLIDADO", foreignKey: "SEC_EJEC"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_CONTRATOS, { as: "SEC_EJEC_SIG_CONTRATOs", foreignKey: "SEC_EJEC"});
  SIG_CONTRATOS.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "TIPO_GENERACION_SIG_PAAC_CONSOLIDADO", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_CONTRATOS, { as: "TIPO_GENERACION_SIG_CONTRATOs", foreignKey: "TIPO_GENERACION"});
  SIG_CONTRATOS.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "NRO_CONSOL", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_CONTRATOS, { as: "NRO_CONSOL_SIG_CONTRATOs", foreignKey: "NRO_CONSOLID"});
  SIG_CONTRATOS.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "TIPO_CONSOL", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_CONTRATOS, { as: "TIPO_CONSOL_SIG_CONTRATOs", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_CONSOLIDADO_UES.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "ANO_EJE_SIG_PAAC_CONSOLIDADO", foreignKey: "ANO_EJE"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_PAAC_CONSOLIDADO_UES, { as: "SIG_PAAC_CONSOLIDADO_UEs", foreignKey: "ANO_EJE"});
  SIG_PAAC_CONSOLIDADO_UES.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "NRO_CONSOL", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_PAAC_CONSOLIDADO_UES, { as: "NRO_CONSOL_SIG_PAAC_CONSOLIDADO_UEs", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_CONSOLIDADO_UES.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "SEC_EJEC_SIG_PAAC_CONSOLIDADO", foreignKey: "SEC_EJEC"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_PAAC_CONSOLIDADO_UES, { as: "SEC_EJEC_SIG_PAAC_CONSOLIDADO_UEs", foreignKey: "SEC_EJEC"});
  SIG_PAAC_CONSOLIDADO_UES.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "TIPO_CONSOL", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_PAAC_CONSOLIDADO_UES, { as: "TIPO_CONSOL_SIG_PAAC_CONSOLIDADO_UEs", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_CONSOLIDADO_UES.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "TIPO_GENERACION_SIG_PAAC_CONSOLIDADO", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_PAAC_CONSOLIDADO_UES, { as: "TIPO_GENERACION_SIG_PAAC_CONSOLIDADO_UEs", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_DET.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "ANO_EJE_SIG_PAAC_CONSOLIDADO", foreignKey: "ANO_EJE"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_PAAC_DET, { as: "SIG_PAAC_DETs", foreignKey: "ANO_EJE"});
  SIG_PAAC_DET.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "NRO_CONSOL", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_PAAC_DET, { as: "NRO_CONSOL_SIG_PAAC_DETs", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_DET.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "SEC_EJEC_SIG_PAAC_CONSOLIDADO", foreignKey: "SEC_EJEC"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_PAAC_DET, { as: "SEC_EJEC_SIG_PAAC_DETs", foreignKey: "SEC_EJEC"});
  SIG_PAAC_DET.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "TIPO_CONSOL", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_PAAC_DET, { as: "TIPO_CONSOL_SIG_PAAC_DETs", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_DET.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "TIPO_GENERACION_SIG_PAAC_CONSOLIDADO", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_PAAC_DET, { as: "TIPO_GENERACION_SIG_PAAC_DETs", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_RESOLUCION.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "ANO_EJE_SIG_PAAC_CONSOLIDADO", foreignKey: "ANO_EJE"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_PAAC_RESOLUCION, { as: "SIG_PAAC_RESOLUCIONs", foreignKey: "ANO_EJE"});
  SIG_PAAC_RESOLUCION.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "NRO_CONSOL", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_PAAC_RESOLUCION, { as: "NRO_CONSOL_SIG_PAAC_RESOLUCIONs", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_RESOLUCION.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "SEC_EJEC_SIG_PAAC_CONSOLIDADO", foreignKey: "SEC_EJEC"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_PAAC_RESOLUCION, { as: "SEC_EJEC_SIG_PAAC_RESOLUCIONs", foreignKey: "SEC_EJEC"});
  SIG_PAAC_RESOLUCION.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "TIPO_CONSOL", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_PAAC_RESOLUCION, { as: "TIPO_CONSOL_SIG_PAAC_RESOLUCIONs", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_RESOLUCION.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "TIPO_GENERACION_SIG_PAAC_CONSOLIDADO", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_PAAC_RESOLUCION, { as: "TIPO_GENERACION_SIG_PAAC_RESOLUCIONs", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_SECUENCIA.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "ANO_EJE_SIG_PAAC_CONSOLIDADO", foreignKey: "ANO_EJE"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_PAAC_SECUENCIA, { as: "SIG_PAAC_SECUENCIa", foreignKey: "ANO_EJE"});
  SIG_PAAC_SECUENCIA.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "NRO_CONSOL", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_PAAC_SECUENCIA, { as: "NRO_CONSOL_SIG_PAAC_SECUENCIa", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_SECUENCIA.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "SEC_EJEC_SIG_PAAC_CONSOLIDADO", foreignKey: "SEC_EJEC"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_PAAC_SECUENCIA, { as: "SEC_EJEC_SIG_PAAC_SECUENCIa", foreignKey: "SEC_EJEC"});
  SIG_PAAC_SECUENCIA.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "TIPO_CONSOL", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_PAAC_SECUENCIA, { as: "TIPO_CONSOL_SIG_PAAC_SECUENCIa", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_SECUENCIA.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "TIPO_GENERACION_SIG_PAAC_CONSOLIDADO", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_PAAC_SECUENCIA, { as: "TIPO_GENERACION_SIG_PAAC_SECUENCIa", foreignKey: "TIPO_GENERACION"});
  SIG_SOLICITUD_COTIZACION.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "ANO_EJE_SIG_PAAC_CONSOLIDADO", foreignKey: "ANO_EJE"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_SOLICITUD_COTIZACION, { as: "SIG_SOLICITUD_COTIZACIONs", foreignKey: "ANO_EJE"});
  SIG_SOLICITUD_COTIZACION.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "NRO_CONSOL", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_SOLICITUD_COTIZACION, { as: "NRO_CONSOL_SIG_SOLICITUD_COTIZACIONs", foreignKey: "NRO_CONSOLID"});
  SIG_SOLICITUD_COTIZACION.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "SEC_EJEC_SIG_PAAC_CONSOLIDADO", foreignKey: "SEC_EJEC"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_SOLICITUD_COTIZACION, { as: "SEC_EJEC_SIG_SOLICITUD_COTIZACIONs", foreignKey: "SEC_EJEC"});
  SIG_SOLICITUD_COTIZACION.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "TIPO_CONSOL", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_SOLICITUD_COTIZACION, { as: "TIPO_CONSOL_SIG_SOLICITUD_COTIZACIONs", foreignKey: "TIPO_CONSOLID"});
  SIG_SOLICITUD_COTIZACION.belongsTo(SIG_PAAC_CONSOLIDADO, { as: "TIPO_GENERACION_SIG_PAAC_CONSOLIDADO", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_CONSOLIDADO.hasMany(SIG_SOLICITUD_COTIZACION, { as: "TIPO_GENERACION_SIG_SOLICITUD_COTIZACIONs", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_DET_SECUENCIA.belongsTo(SIG_PAAC_DET, { as: "ANO_EJE_SIG_PAAC_DET", foreignKey: "ANO_EJE"});
  SIG_PAAC_DET.hasMany(SIG_PAAC_DET_SECUENCIA, { as: "SIG_PAAC_DET_SECUENCIa", foreignKey: "ANO_EJE"});
  SIG_PAAC_DET_SECUENCIA.belongsTo(SIG_PAAC_DET, { as: "ANO_PROCESO_SIG_PAAC_DET", foreignKey: "ANO_PROCESO"});
  SIG_PAAC_DET.hasMany(SIG_PAAC_DET_SECUENCIA, { as: "ANO_PROCESO_SIG_PAAC_DET_SECUENCIa", foreignKey: "ANO_PROCESO"});
  SIG_PAAC_DET_SECUENCIA.belongsTo(SIG_PAAC_DET, { as: "NRO_CONSOL", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_DET.hasMany(SIG_PAAC_DET_SECUENCIA, { as: "NRO_CONSOL_SIG_PAAC_DET_SECUENCIa", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_DET_SECUENCIA.belongsTo(SIG_PAAC_DET, { as: "SEC_EJEC_SIG_PAAC_DET", foreignKey: "SEC_EJEC"});
  SIG_PAAC_DET.hasMany(SIG_PAAC_DET_SECUENCIA, { as: "SEC_EJEC_SIG_PAAC_DET_SECUENCIa", foreignKey: "SEC_EJEC"});
  SIG_PAAC_DET_SECUENCIA.belongsTo(SIG_PAAC_DET, { as: "TIPO_CONSOL", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_DET.hasMany(SIG_PAAC_DET_SECUENCIA, { as: "TIPO_CONSOL_SIG_PAAC_DET_SECUENCIa", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_DET_SECUENCIA.belongsTo(SIG_PAAC_DET, { as: "TIPO_GENERACION_SIG_PAAC_DET", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_DET.hasMany(SIG_PAAC_DET_SECUENCIA, { as: "TIPO_GENERACION_SIG_PAAC_DET_SECUENCIa", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_DET_DEPE.belongsTo(SIG_PAAC_DET_PPTAL, { as: "ANO_EJE_SIG_PAAC_DET_PPTAL", foreignKey: "ANO_EJE"});
  SIG_PAAC_DET_PPTAL.hasMany(SIG_PAAC_DET_DEPE, { as: "SIG_PAAC_DET_DEPEs", foreignKey: "ANO_EJE"});
  SIG_PAAC_DET_DEPE.belongsTo(SIG_PAAC_DET_PPTAL, { as: "ANO_PROCESO_SIG_PAAC_DET_PPTAL", foreignKey: "ANO_PROCESO"});
  SIG_PAAC_DET_PPTAL.hasMany(SIG_PAAC_DET_DEPE, { as: "ANO_PROCESO_SIG_PAAC_DET_DEPEs", foreignKey: "ANO_PROCESO"});
  SIG_PAAC_DET_DEPE.belongsTo(SIG_PAAC_DET_PPTAL, { as: "FASE_CERTIFICA_SIG_PAAC_DET_PPTAL", foreignKey: "FASE_CERTIFICA"});
  SIG_PAAC_DET_PPTAL.hasMany(SIG_PAAC_DET_DEPE, { as: "FASE_CERTIFICA_SIG_PAAC_DET_DEPEs", foreignKey: "FASE_CERTIFICA"});
  SIG_PAAC_DET_DEPE.belongsTo(SIG_PAAC_DET_PPTAL, { as: "NRO_CONSOL", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_DET_PPTAL.hasMany(SIG_PAAC_DET_DEPE, { as: "NRO_CONSOL_SIG_PAAC_DET_DEPEs", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_DET_DEPE.belongsTo(SIG_PAAC_DET_PPTAL, { as: "SEC_DET_PPTAL_SIG_PAAC_DET_PPTAL", foreignKey: "SEC_DET_PPTAL"});
  SIG_PAAC_DET_PPTAL.hasMany(SIG_PAAC_DET_DEPE, { as: "SEC_DET_PPTAL_SIG_PAAC_DET_DEPEs", foreignKey: "SEC_DET_PPTAL"});
  SIG_PAAC_DET_DEPE.belongsTo(SIG_PAAC_DET_PPTAL, { as: "SEC_EJEC_SIG_PAAC_DET_PPTAL", foreignKey: "SEC_EJEC"});
  SIG_PAAC_DET_PPTAL.hasMany(SIG_PAAC_DET_DEPE, { as: "SEC_EJEC_SIG_PAAC_DET_DEPEs", foreignKey: "SEC_EJEC"});
  SIG_PAAC_DET_DEPE.belongsTo(SIG_PAAC_DET_PPTAL, { as: "SEC_FASE_SIG_PAAC_DET_PPTAL", foreignKey: "SEC_FASE"});
  SIG_PAAC_DET_PPTAL.hasMany(SIG_PAAC_DET_DEPE, { as: "SEC_FASE_SIG_PAAC_DET_DEPEs", foreignKey: "SEC_FASE"});
  SIG_PAAC_DET_DEPE.belongsTo(SIG_PAAC_DET_PPTAL, { as: "TIPO_CONSOL", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_DET_PPTAL.hasMany(SIG_PAAC_DET_DEPE, { as: "TIPO_CONSOL_SIG_PAAC_DET_DEPEs", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_DET_DEPE.belongsTo(SIG_PAAC_DET_PPTAL, { as: "TIPO_GENERACION_SIG_PAAC_DET_PPTAL", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_DET_PPTAL.hasMany(SIG_PAAC_DET_DEPE, { as: "TIPO_GENERACION_SIG_PAAC_DET_DEPEs", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_DET_PPTAL.belongsTo(SIG_PAAC_DET_SECUENCIA, { as: "ANO_EJE_SIG_PAAC_DET_SECUENCIum", foreignKey: "ANO_EJE"});
  SIG_PAAC_DET_SECUENCIA.hasMany(SIG_PAAC_DET_PPTAL, { as: "SIG_PAAC_DET_PPTALs", foreignKey: "ANO_EJE"});
  SIG_PAAC_DET_PPTAL.belongsTo(SIG_PAAC_DET_SECUENCIA, { as: "ANO_PROCESO_SIG_PAAC_DET_SECUENCIum", foreignKey: "ANO_PROCESO"});
  SIG_PAAC_DET_SECUENCIA.hasMany(SIG_PAAC_DET_PPTAL, { as: "ANO_PROCESO_SIG_PAAC_DET_PPTALs", foreignKey: "ANO_PROCESO"});
  SIG_PAAC_DET_PPTAL.belongsTo(SIG_PAAC_DET_SECUENCIA, { as: "FASE_CERTIFICA_SIG_PAAC_DET_SECUENCIum", foreignKey: "FASE_CERTIFICA"});
  SIG_PAAC_DET_SECUENCIA.hasMany(SIG_PAAC_DET_PPTAL, { as: "FASE_CERTIFICA_SIG_PAAC_DET_PPTALs", foreignKey: "FASE_CERTIFICA"});
  SIG_PAAC_DET_PPTAL.belongsTo(SIG_PAAC_DET_SECUENCIA, { as: "NRO_CONSOL", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_DET_SECUENCIA.hasMany(SIG_PAAC_DET_PPTAL, { as: "NRO_CONSOL_SIG_PAAC_DET_PPTALs", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_DET_PPTAL.belongsTo(SIG_PAAC_DET_SECUENCIA, { as: "SEC_EJEC_SIG_PAAC_DET_SECUENCIum", foreignKey: "SEC_EJEC"});
  SIG_PAAC_DET_SECUENCIA.hasMany(SIG_PAAC_DET_PPTAL, { as: "SEC_EJEC_SIG_PAAC_DET_PPTALs", foreignKey: "SEC_EJEC"});
  SIG_PAAC_DET_PPTAL.belongsTo(SIG_PAAC_DET_SECUENCIA, { as: "SEC_FASE_SIG_PAAC_DET_SECUENCIum", foreignKey: "SEC_FASE"});
  SIG_PAAC_DET_SECUENCIA.hasMany(SIG_PAAC_DET_PPTAL, { as: "SEC_FASE_SIG_PAAC_DET_PPTALs", foreignKey: "SEC_FASE"});
  SIG_PAAC_DET_PPTAL.belongsTo(SIG_PAAC_DET_SECUENCIA, { as: "TIPO_CONSOL", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_DET_SECUENCIA.hasMany(SIG_PAAC_DET_PPTAL, { as: "TIPO_CONSOL_SIG_PAAC_DET_PPTALs", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_DET_PPTAL.belongsTo(SIG_PAAC_DET_SECUENCIA, { as: "TIPO_GENERACION_SIG_PAAC_DET_SECUENCIum", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_DET_SECUENCIA.hasMany(SIG_PAAC_DET_PPTAL, { as: "TIPO_GENERACION_SIG_PAAC_DET_PPTALs", foreignKey: "TIPO_GENERACION"});
  SIG_SOLICITUD_COTIZACION_ITEM.belongsTo(SIG_PAAC_ITEM, { as: "ANO_EJE_SIG_PAAC_ITEM", foreignKey: "ANO_EJE"});
  SIG_PAAC_ITEM.hasMany(SIG_SOLICITUD_COTIZACION_ITEM, { as: "SIG_SOLICITUD_COTIZACION_ITEMs", foreignKey: "ANO_EJE"});
  SIG_SOLICITUD_COTIZACION_ITEM.belongsTo(SIG_PAAC_ITEM, { as: "NRO_CONSOL", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_ITEM.hasMany(SIG_SOLICITUD_COTIZACION_ITEM, { as: "NRO_CONSOL_SIG_SOLICITUD_COTIZACION_ITEMs", foreignKey: "NRO_CONSOLID"});
  SIG_SOLICITUD_COTIZACION_ITEM.belongsTo(SIG_PAAC_ITEM, { as: "SEC_EJEC_SIG_PAAC_ITEM", foreignKey: "SEC_EJEC"});
  SIG_PAAC_ITEM.hasMany(SIG_SOLICITUD_COTIZACION_ITEM, { as: "SEC_EJEC_SIG_SOLICITUD_COTIZACION_ITEMs", foreignKey: "SEC_EJEC"});
  SIG_SOLICITUD_COTIZACION_ITEM.belongsTo(SIG_PAAC_ITEM, { as: "TIPO_CONSOL", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_ITEM.hasMany(SIG_SOLICITUD_COTIZACION_ITEM, { as: "TIPO_CONSOL_SIG_SOLICITUD_COTIZACION_ITEMs", foreignKey: "TIPO_CONSOLID"});
  SIG_SOLICITUD_COTIZACION_ITEM.belongsTo(SIG_PAAC_ITEM, { as: "TIPO_GENERACION_SIG_PAAC_ITEM", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_ITEM.hasMany(SIG_SOLICITUD_COTIZACION_ITEM, { as: "TIPO_GENERACION_SIG_SOLICITUD_COTIZACION_ITEMs", foreignKey: "TIPO_GENERACION"});
  SIG_SOLICITUD_COTIZACION_ITEM.belongsTo(SIG_PAAC_ITEM, { as: "SEC_CONSOL", foreignKey: "SEC_CONSOLID"});
  SIG_PAAC_ITEM.hasMany(SIG_SOLICITUD_COTIZACION_ITEM, { as: "SEC_CONSOL_SIG_SOLICITUD_COTIZACION_ITEMs", foreignKey: "SEC_CONSOLID"});
  SIG_SOLICITUD_COTIZACION_ITEM.belongsTo(SIG_PAAC_ITEM, { as: "SEC_RESUMEN_SIG_PAAC_ITEM", foreignKey: "SEC_RESUMEN"});
  SIG_PAAC_ITEM.hasMany(SIG_SOLICITUD_COTIZACION_ITEM, { as: "SEC_RESUMEN_SIG_SOLICITUD_COTIZACION_ITEMs", foreignKey: "SEC_RESUMEN"});
  SIG_SOLICITUD_COTIZACION_ITEM.belongsTo(SIG_PAAC_ITEM, { as: "TIPO_BIEN_SIG_PAAC_ITEM", foreignKey: "TIPO_BIEN"});
  SIG_PAAC_ITEM.hasMany(SIG_SOLICITUD_COTIZACION_ITEM, { as: "TIPO_BIEN_SIG_SOLICITUD_COTIZACION_ITEMs", foreignKey: "TIPO_BIEN"});
  SIG_PAAC_CENTRO_COSTO.belongsTo(SIG_PAAC_METAS, { as: "NRO_CONSOL", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_METAS.hasMany(SIG_PAAC_CENTRO_COSTO, { as: "SIG_PAAC_CENTRO_COSTOs", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_CENTRO_COSTO.belongsTo(SIG_PAAC_METAS, { as: "SEC_CONSOL", foreignKey: "SEC_CONSOLID"});
  SIG_PAAC_METAS.hasMany(SIG_PAAC_CENTRO_COSTO, { as: "SEC_CONSOL_SIG_PAAC_CENTRO_COSTOs", foreignKey: "SEC_CONSOLID"});
  SIG_PAAC_CENTRO_COSTO.belongsTo(SIG_PAAC_METAS, { as: "SEC_META_SIG_PAAC_META", foreignKey: "SEC_META"});
  SIG_PAAC_METAS.hasMany(SIG_PAAC_CENTRO_COSTO, { as: "SEC_META_SIG_PAAC_CENTRO_COSTOs", foreignKey: "SEC_META"});
  SIG_PAAC_CENTRO_COSTO.belongsTo(SIG_PAAC_METAS, { as: "SEC_RESUMEN_SIG_PAAC_META", foreignKey: "SEC_RESUMEN"});
  SIG_PAAC_METAS.hasMany(SIG_PAAC_CENTRO_COSTO, { as: "SEC_RESUMEN_SIG_PAAC_CENTRO_COSTOs", foreignKey: "SEC_RESUMEN"});
  SIG_PAAC_CENTRO_COSTO.belongsTo(SIG_PAAC_METAS, { as: "TIPO_BIEN_SIG_PAAC_META", foreignKey: "TIPO_BIEN"});
  SIG_PAAC_METAS.hasMany(SIG_PAAC_CENTRO_COSTO, { as: "TIPO_BIEN_SIG_PAAC_CENTRO_COSTOs", foreignKey: "TIPO_BIEN"});
  SIG_PAAC_CENTRO_COSTO.belongsTo(SIG_PAAC_METAS, { as: "TIPO_CONSOL", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_METAS.hasMany(SIG_PAAC_CENTRO_COSTO, { as: "TIPO_CONSOL_SIG_PAAC_CENTRO_COSTOs", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_CENTRO_COSTO.belongsTo(SIG_PAAC_METAS, { as: "TIPO_GENERACION_SIG_PAAC_META", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_METAS.hasMany(SIG_PAAC_CENTRO_COSTO, { as: "TIPO_GENERACION_SIG_PAAC_CENTRO_COSTOs", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_METAS.belongsTo(SIG_PAAC_METAS, { as: "ANO_EJE_SIG_PAAC_META", foreignKey: "ANO_EJE"});
  SIG_PAAC_METAS.hasMany(SIG_PAAC_METAS, { as: "SIG_PAAC_METa", foreignKey: "ANO_EJE"});
  SIG_PAAC_METAS.belongsTo(SIG_PAAC_METAS, { as: "sec_ejec_SIG_PAAC_META", foreignKey: "sec_ejec"});
  SIG_PAAC_METAS.hasMany(SIG_PAAC_METAS, { as: "sec_ejec_SIG_PAAC_METa", foreignKey: "sec_ejec"});
  SIG_PAAC_METAS.belongsTo(SIG_PAAC_METAS, { as: "NRO_CONSOL", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_METAS.hasMany(SIG_PAAC_METAS, { as: "NRO_CONSOL_SIG_PAAC_METa", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_METAS.belongsTo(SIG_PAAC_METAS, { as: "SEC_CONSOL", foreignKey: "SEC_CONSOLID"});
  SIG_PAAC_METAS.hasMany(SIG_PAAC_METAS, { as: "SEC_CONSOL_SIG_PAAC_METa", foreignKey: "SEC_CONSOLID"});
  SIG_PAAC_METAS.belongsTo(SIG_PAAC_METAS, { as: "SEC_RESUMEN_SIG_PAAC_META", foreignKey: "SEC_RESUMEN"});
  SIG_PAAC_METAS.hasMany(SIG_PAAC_METAS, { as: "SEC_RESUMEN_SIG_PAAC_METa", foreignKey: "SEC_RESUMEN"});
  SIG_PAAC_METAS.belongsTo(SIG_PAAC_METAS, { as: "TIPO_BIEN_SIG_PAAC_META", foreignKey: "TIPO_BIEN"});
  SIG_PAAC_METAS.hasMany(SIG_PAAC_METAS, { as: "TIPO_BIEN_SIG_PAAC_METa", foreignKey: "TIPO_BIEN"});
  SIG_PAAC_METAS.belongsTo(SIG_PAAC_METAS, { as: "TIPO_CONSOL", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_METAS.hasMany(SIG_PAAC_METAS, { as: "TIPO_CONSOL_SIG_PAAC_METa", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_METAS.belongsTo(SIG_PAAC_METAS, { as: "TIPO_GENERACION_SIG_PAAC_META", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_METAS.hasMany(SIG_PAAC_METAS, { as: "TIPO_GENERACION_SIG_PAAC_METa", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_METAS.belongsTo(SIG_PAAC_METAS, { as: "SEC_META_SIG_PAAC_META", foreignKey: "SEC_META"});
  SIG_PAAC_METAS.hasMany(SIG_PAAC_METAS, { as: "SEC_META_SIG_PAAC_METa", foreignKey: "SEC_META"});
  SIG_PAAC_DETALLE.belongsTo(SIG_PAAC_RESOLUCION, { as: "ANO_EJE_SIG_PAAC_RESOLUCION", foreignKey: "ANO_EJE"});
  SIG_PAAC_RESOLUCION.hasMany(SIG_PAAC_DETALLE, { as: "SIG_PAAC_DETALLEs", foreignKey: "ANO_EJE"});
  SIG_PAAC_DETALLE.belongsTo(SIG_PAAC_RESOLUCION, { as: "NRO_CONSOL", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_RESOLUCION.hasMany(SIG_PAAC_DETALLE, { as: "NRO_CONSOL_SIG_PAAC_DETALLEs", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_DETALLE.belongsTo(SIG_PAAC_RESOLUCION, { as: "SEC_EJEC_SIG_PAAC_RESOLUCION", foreignKey: "SEC_EJEC"});
  SIG_PAAC_RESOLUCION.hasMany(SIG_PAAC_DETALLE, { as: "SEC_EJEC_SIG_PAAC_DETALLEs", foreignKey: "SEC_EJEC"});
  SIG_PAAC_DETALLE.belongsTo(SIG_PAAC_RESOLUCION, { as: "SEC_RESOLUCION_SIG_PAAC_RESOLUCION", foreignKey: "SEC_RESOLUCION"});
  SIG_PAAC_RESOLUCION.hasMany(SIG_PAAC_DETALLE, { as: "SEC_RESOLUCION_SIG_PAAC_DETALLEs", foreignKey: "SEC_RESOLUCION"});
  SIG_PAAC_DETALLE.belongsTo(SIG_PAAC_RESOLUCION, { as: "TIPO_CONSOL", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_RESOLUCION.hasMany(SIG_PAAC_DETALLE, { as: "TIPO_CONSOL_SIG_PAAC_DETALLEs", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_DETALLE.belongsTo(SIG_PAAC_RESOLUCION, { as: "TIPO_GENERACION_SIG_PAAC_RESOLUCION", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_RESOLUCION.hasMany(SIG_PAAC_DETALLE, { as: "TIPO_GENERACION_SIG_PAAC_DETALLEs", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_FILTRO.belongsTo(SIG_PAAC_SECUENCIA, { as: "ANO_EJE_SIG_PAAC_SECUENCIum", foreignKey: "ANO_EJE"});
  SIG_PAAC_SECUENCIA.hasMany(SIG_PAAC_FILTRO, { as: "SIG_PAAC_FILTROs", foreignKey: "ANO_EJE"});
  SIG_PAAC_FILTRO.belongsTo(SIG_PAAC_SECUENCIA, { as: "NRO_CONSOL", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_SECUENCIA.hasMany(SIG_PAAC_FILTRO, { as: "NRO_CONSOL_SIG_PAAC_FILTROs", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_FILTRO.belongsTo(SIG_PAAC_SECUENCIA, { as: "SEC_CONSOL", foreignKey: "SEC_CONSOLID"});
  SIG_PAAC_SECUENCIA.hasMany(SIG_PAAC_FILTRO, { as: "SEC_CONSOL_SIG_PAAC_FILTROs", foreignKey: "SEC_CONSOLID"});
  SIG_PAAC_FILTRO.belongsTo(SIG_PAAC_SECUENCIA, { as: "SEC_EJEC_SIG_PAAC_SECUENCIum", foreignKey: "SEC_EJEC"});
  SIG_PAAC_SECUENCIA.hasMany(SIG_PAAC_FILTRO, { as: "SEC_EJEC_SIG_PAAC_FILTROs", foreignKey: "SEC_EJEC"});
  SIG_PAAC_FILTRO.belongsTo(SIG_PAAC_SECUENCIA, { as: "TIPO_BIEN_SIG_PAAC_SECUENCIum", foreignKey: "TIPO_BIEN"});
  SIG_PAAC_SECUENCIA.hasMany(SIG_PAAC_FILTRO, { as: "TIPO_BIEN_SIG_PAAC_FILTROs", foreignKey: "TIPO_BIEN"});
  SIG_PAAC_FILTRO.belongsTo(SIG_PAAC_SECUENCIA, { as: "TIPO_CONSOL", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_SECUENCIA.hasMany(SIG_PAAC_FILTRO, { as: "TIPO_CONSOL_SIG_PAAC_FILTROs", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_FILTRO.belongsTo(SIG_PAAC_SECUENCIA, { as: "TIPO_GENERACION_SIG_PAAC_SECUENCIum", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_SECUENCIA.hasMany(SIG_PAAC_FILTRO, { as: "TIPO_GENERACION_SIG_PAAC_FILTROs", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_ITEM.belongsTo(SIG_PAAC_SECUENCIA, { as: "SEC_EJEC_SIG_PAAC_SECUENCIum", foreignKey: "SEC_EJEC"});
  SIG_PAAC_SECUENCIA.hasMany(SIG_PAAC_ITEM, { as: "SIG_PAAC_ITEMs", foreignKey: "SEC_EJEC"});
  SIG_PAAC_ITEM.belongsTo(SIG_PAAC_SECUENCIA, { as: "TIPO_BIEN_SIG_PAAC_SECUENCIum", foreignKey: "TIPO_BIEN"});
  SIG_PAAC_SECUENCIA.hasMany(SIG_PAAC_ITEM, { as: "TIPO_BIEN_SIG_PAAC_ITEMs", foreignKey: "TIPO_BIEN"});
  SIG_PAAC_ITEM.belongsTo(SIG_PAAC_SECUENCIA, { as: "ANO_EJE_SIG_PAAC_SECUENCIum", foreignKey: "ANO_EJE"});
  SIG_PAAC_SECUENCIA.hasMany(SIG_PAAC_ITEM, { as: "ANO_EJE_SIG_PAAC_ITEMs", foreignKey: "ANO_EJE"});
  SIG_PAAC_ITEM.belongsTo(SIG_PAAC_SECUENCIA, { as: "NRO_CONSOL", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_SECUENCIA.hasMany(SIG_PAAC_ITEM, { as: "NRO_CONSOL_SIG_PAAC_ITEMs", foreignKey: "NRO_CONSOLID"});
  SIG_PAAC_ITEM.belongsTo(SIG_PAAC_SECUENCIA, { as: "SEC_CONSOL", foreignKey: "SEC_CONSOLID"});
  SIG_PAAC_SECUENCIA.hasMany(SIG_PAAC_ITEM, { as: "SEC_CONSOL_SIG_PAAC_ITEMs", foreignKey: "SEC_CONSOLID"});
  SIG_PAAC_ITEM.belongsTo(SIG_PAAC_SECUENCIA, { as: "TIPO_CONSOL", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_SECUENCIA.hasMany(SIG_PAAC_ITEM, { as: "TIPO_CONSOL_SIG_PAAC_ITEMs", foreignKey: "TIPO_CONSOLID"});
  SIG_PAAC_ITEM.belongsTo(SIG_PAAC_SECUENCIA, { as: "TIPO_GENERACION_SIG_PAAC_SECUENCIum", foreignKey: "TIPO_GENERACION"});
  SIG_PAAC_SECUENCIA.hasMany(SIG_PAAC_ITEM, { as: "TIPO_GENERACION_SIG_PAAC_ITEMs", foreignKey: "TIPO_GENERACION"});
  SIG_ASIGNACIONES.belongsTo(SIG_PATRIMONIO, { as: "SECUENCIA_SIG_PATRIMONIO", foreignKey: "SECUENCIA"});
  SIG_PATRIMONIO.hasMany(SIG_ASIGNACIONES, { as: "SIG_ASIGNACIONEs", foreignKey: "SECUENCIA"});
  SIG_ASIGNACIONES.belongsTo(SIG_PATRIMONIO, { as: "TIPO_MODALIDAD_SIG_PATRIMONIO", foreignKey: "TIPO_MODALIDAD"});
  SIG_PATRIMONIO.hasMany(SIG_ASIGNACIONES, { as: "TIPO_MODALIDAD_SIG_ASIGNACIONEs", foreignKey: "TIPO_MODALIDAD"});
  SIG_COMPONENTES_ACTIVO.belongsTo(SIG_PATRIMONIO, { as: "SEC_EJEC_SIG_PATRIMONIO", foreignKey: "SEC_EJEC"});
  SIG_PATRIMONIO.hasMany(SIG_COMPONENTES_ACTIVO, { as: "SIG_COMPONENTES_ACTIVOs", foreignKey: "SEC_EJEC"});
  SIG_COMPONENTES_ACTIVO.belongsTo(SIG_PATRIMONIO, { as: "SECUENCIA_SIG_PATRIMONIO", foreignKey: "SECUENCIA"});
  SIG_PATRIMONIO.hasMany(SIG_COMPONENTES_ACTIVO, { as: "SECUENCIA_SIG_COMPONENTES_ACTIVOs", foreignKey: "SECUENCIA"});
  SIG_COMPONENTES_ACTIVO.belongsTo(SIG_PATRIMONIO, { as: "TIPO_MODALIDAD_SIG_PATRIMONIO", foreignKey: "TIPO_MODALIDAD"});
  SIG_PATRIMONIO.hasMany(SIG_COMPONENTES_ACTIVO, { as: "TIPO_MODALIDAD_SIG_COMPONENTES_ACTIVOs", foreignKey: "TIPO_MODALIDAD"});
  SIG_DETALLE_ACTIVOS.belongsTo(SIG_PATRIMONIO, { as: "SEC_EJEC_SIG_PATRIMONIO", foreignKey: "SEC_EJEC"});
  SIG_PATRIMONIO.hasMany(SIG_DETALLE_ACTIVOS, { as: "SIG_DETALLE_ACTIVOs", foreignKey: "SEC_EJEC"});
  SIG_DETALLE_ACTIVOS.belongsTo(SIG_PATRIMONIO, { as: "SECUENCIA_SIG_PATRIMONIO", foreignKey: "SECUENCIA"});
  SIG_PATRIMONIO.hasMany(SIG_DETALLE_ACTIVOS, { as: "SECUENCIA_SIG_DETALLE_ACTIVOs", foreignKey: "SECUENCIA"});
  SIG_DETALLE_ACTIVOS.belongsTo(SIG_PATRIMONIO, { as: "TIPO_MODALIDAD_SIG_PATRIMONIO", foreignKey: "TIPO_MODALIDAD"});
  SIG_PATRIMONIO.hasMany(SIG_DETALLE_ACTIVOS, { as: "TIPO_MODALIDAD_SIG_DETALLE_ACTIVOs", foreignKey: "TIPO_MODALIDAD"});
  SIG_FALTANTES_INVENT_FISICO.belongsTo(SIG_PATRIMONIO, { as: "SEC_EJEC_SIG_PATRIMONIO", foreignKey: "SEC_EJEC"});
  SIG_PATRIMONIO.hasMany(SIG_FALTANTES_INVENT_FISICO, { as: "SIG_FALTANTES_INVENT_FISICOs", foreignKey: "SEC_EJEC"});
  SIG_FALTANTES_INVENT_FISICO.belongsTo(SIG_PATRIMONIO, { as: "SECUENCIA_SIG_PATRIMONIO", foreignKey: "SECUENCIA"});
  SIG_PATRIMONIO.hasMany(SIG_FALTANTES_INVENT_FISICO, { as: "SECUENCIA_SIG_FALTANTES_INVENT_FISICOs", foreignKey: "SECUENCIA"});
  SIG_FALTANTES_INVENT_FISICO.belongsTo(SIG_PATRIMONIO, { as: "TIPO_MODALIDAD_SIG_PATRIMONIO", foreignKey: "TIPO_MODALIDAD"});
  SIG_PATRIMONIO.hasMany(SIG_FALTANTES_INVENT_FISICO, { as: "TIPO_MODALIDAD_SIG_FALTANTES_INVENT_FISICOs", foreignKey: "TIPO_MODALIDAD"});
  SIG_MEJORAS.belongsTo(SIG_PATRIMONIO, { as: "SEC_EJEC_SIG_PATRIMONIO", foreignKey: "SEC_EJEC"});
  SIG_PATRIMONIO.hasMany(SIG_MEJORAS, { as: "SIG_MEJORAs", foreignKey: "SEC_EJEC"});
  SIG_MEJORAS.belongsTo(SIG_PATRIMONIO, { as: "SECUENCIA_SIG_PATRIMONIO", foreignKey: "SECUENCIA"});
  SIG_PATRIMONIO.hasMany(SIG_MEJORAS, { as: "SECUENCIA_SIG_MEJORAs", foreignKey: "SECUENCIA"});
  SIG_MEJORAS.belongsTo(SIG_PATRIMONIO, { as: "TIPO_MODALIDAD_SIG_PATRIMONIO", foreignKey: "TIPO_MODALIDAD"});
  SIG_PATRIMONIO.hasMany(SIG_MEJORAS, { as: "TIPO_MODALIDAD_SIG_MEJORAs", foreignKey: "TIPO_MODALIDAD"});
  SIG_MOVIMIENTO_CONTABLE.belongsTo(SIG_PATRIMONIO, { as: "SEC_EJEC_SIG_PATRIMONIO", foreignKey: "SEC_EJEC"});
  SIG_PATRIMONIO.hasMany(SIG_MOVIMIENTO_CONTABLE, { as: "SIG_MOVIMIENTO_CONTABLEs", foreignKey: "SEC_EJEC"});
  SIG_MOVIMIENTO_CONTABLE.belongsTo(SIG_PATRIMONIO, { as: "SECUENCIA_SIG_PATRIMONIO", foreignKey: "SECUENCIA"});
  SIG_PATRIMONIO.hasMany(SIG_MOVIMIENTO_CONTABLE, { as: "SECUENCIA_SIG_MOVIMIENTO_CONTABLEs", foreignKey: "SECUENCIA"});
  SIG_MOVIMIENTO_CONTABLE.belongsTo(SIG_PATRIMONIO, { as: "TIPO_MODALIDAD_SIG_PATRIMONIO", foreignKey: "TIPO_MODALIDAD"});
  SIG_PATRIMONIO.hasMany(SIG_MOVIMIENTO_CONTABLE, { as: "TIPO_MODALIDAD_SIG_MOVIMIENTO_CONTABLEs", foreignKey: "TIPO_MODALIDAD"});
  SIG_MOVIM_PATRIMONIO.belongsTo(SIG_PATRIMONIO, { as: "SEC_EJEC_SIG_PATRIMONIO", foreignKey: "SEC_EJEC"});
  SIG_PATRIMONIO.hasMany(SIG_MOVIM_PATRIMONIO, { as: "SIG_MOVIM_PATRIMONIOs", foreignKey: "SEC_EJEC"});
  SIG_MOVIM_PATRIMONIO.belongsTo(SIG_PATRIMONIO, { as: "SECUENCIA_SIG_PATRIMONIO", foreignKey: "SECUENCIA"});
  SIG_PATRIMONIO.hasMany(SIG_MOVIM_PATRIMONIO, { as: "SECUENCIA_SIG_MOVIM_PATRIMONIOs", foreignKey: "SECUENCIA"});
  SIG_MOVIM_PATRIMONIO.belongsTo(SIG_PATRIMONIO, { as: "TIPO_MODALIDAD_SIG_PATRIMONIO", foreignKey: "TIPO_MODALIDAD"});
  SIG_PATRIMONIO.hasMany(SIG_MOVIM_PATRIMONIO, { as: "TIPO_MODALIDAD_SIG_MOVIM_PATRIMONIOs", foreignKey: "TIPO_MODALIDAD"});
  SIG_PATRIMONIO_COMP.belongsTo(SIG_PATRIMONIO, { as: "SEC_EJEC_SIG_PATRIMONIO", foreignKey: "SEC_EJEC"});
  SIG_PATRIMONIO.hasMany(SIG_PATRIMONIO_COMP, { as: "SIG_PATRIMONIO_COMPs", foreignKey: "SEC_EJEC"});
  SIG_PATRIMONIO_COMP.belongsTo(SIG_PATRIMONIO, { as: "SECUENCIA_SIG_PATRIMONIO", foreignKey: "SECUENCIA"});
  SIG_PATRIMONIO.hasMany(SIG_PATRIMONIO_COMP, { as: "SECUENCIA_SIG_PATRIMONIO_COMPs", foreignKey: "SECUENCIA"});
  SIG_PATRIMONIO_COMP.belongsTo(SIG_PATRIMONIO, { as: "TIPO_MODALIDAD_SIG_PATRIMONIO", foreignKey: "TIPO_MODALIDAD"});
  SIG_PATRIMONIO.hasMany(SIG_PATRIMONIO_COMP, { as: "TIPO_MODALIDAD_SIG_PATRIMONIO_COMPs", foreignKey: "TIPO_MODALIDAD"});
  SIG_TASACION_ACTIVOS.belongsTo(SIG_PATRIMONIO, { as: "SEC_EJEC_SIG_PATRIMONIO", foreignKey: "SEC_EJEC"});
  SIG_PATRIMONIO.hasMany(SIG_TASACION_ACTIVOS, { as: "SIG_TASACION_ACTIVOs", foreignKey: "SEC_EJEC"});
  SIG_TASACION_ACTIVOS.belongsTo(SIG_PATRIMONIO, { as: "SECUENCIA_SIG_PATRIMONIO", foreignKey: "SECUENCIA"});
  SIG_PATRIMONIO.hasMany(SIG_TASACION_ACTIVOS, { as: "SECUENCIA_SIG_TASACION_ACTIVOs", foreignKey: "SECUENCIA"});
  SIG_TASACION_ACTIVOS.belongsTo(SIG_PATRIMONIO, { as: "TIPO_MODALIDAD_SIG_PATRIMONIO", foreignKey: "TIPO_MODALIDAD"});
  SIG_PATRIMONIO.hasMany(SIG_TASACION_ACTIVOS, { as: "TIPO_MODALIDAD_SIG_TASACION_ACTIVOs", foreignKey: "TIPO_MODALIDAD"});
  SIG_PATRIMONIO_AJUSTE_DET.belongsTo(SIG_PATRIMONIO_AJUSTE_CAB, { as: "ANO_EJEC_SIG_PATRIMONIO_AJUSTE_CAB", foreignKey: "ANO_EJEC"});
  SIG_PATRIMONIO_AJUSTE_CAB.hasMany(SIG_PATRIMONIO_AJUSTE_DET, { as: "SIG_PATRIMONIO_AJUSTE_DETs", foreignKey: "ANO_EJEC"});
  SIG_PATRIMONIO_AJUSTE_DET.belongsTo(SIG_PATRIMONIO_AJUSTE_CAB, { as: "COD_AJUSTE_SIG_PATRIMONIO_AJUSTE_CAB", foreignKey: "COD_AJUSTE"});
  SIG_PATRIMONIO_AJUSTE_CAB.hasMany(SIG_PATRIMONIO_AJUSTE_DET, { as: "COD_AJUSTE_SIG_PATRIMONIO_AJUSTE_DETs", foreignKey: "COD_AJUSTE"});
  SIG_PATRIMONIO_AJUSTE_DET.belongsTo(SIG_PATRIMONIO_AJUSTE_CAB, { as: "SEC_EJEC_SIG_PATRIMONIO_AJUSTE_CAB", foreignKey: "SEC_EJEC"});
  SIG_PATRIMONIO_AJUSTE_CAB.hasMany(SIG_PATRIMONIO_AJUSTE_DET, { as: "SEC_EJEC_SIG_PATRIMONIO_AJUSTE_DETs", foreignKey: "SEC_EJEC"});
  SIG_MOVIM_UNIDAD_PRODUCIDA.belongsTo(SIG_PATRIMONIO_COMP, { as: "SEC_EJEC_SIG_PATRIMONIO_COMP", foreignKey: "SEC_EJEC"});
  SIG_PATRIMONIO_COMP.hasMany(SIG_MOVIM_UNIDAD_PRODUCIDA, { as: "SIG_MOVIM_UNIDAD_PRODUCIDAs", foreignKey: "SEC_EJEC"});
  SIG_MOVIM_UNIDAD_PRODUCIDA.belongsTo(SIG_PATRIMONIO_COMP, { as: "SECUENCIA_SIG_PATRIMONIO_COMP", foreignKey: "SECUENCIA"});
  SIG_PATRIMONIO_COMP.hasMany(SIG_MOVIM_UNIDAD_PRODUCIDA, { as: "SECUENCIA_SIG_MOVIM_UNIDAD_PRODUCIDAs", foreignKey: "SECUENCIA"});
  SIG_MOVIM_UNIDAD_PRODUCIDA.belongsTo(SIG_PATRIMONIO_COMP, { as: "TIPO_MODALIDAD_SIG_PATRIMONIO_COMP", foreignKey: "TIPO_MODALIDAD"});
  SIG_PATRIMONIO_COMP.hasMany(SIG_MOVIM_UNIDAD_PRODUCIDA, { as: "TIPO_MODALIDAD_SIG_MOVIM_UNIDAD_PRODUCIDAs", foreignKey: "TIPO_MODALIDAD"});
  SIG_MOVIM_UNIDAD_PRODUCIDA.belongsTo(SIG_PATRIMONIO_COMP, { as: "SEC_COMPONENTE_SIG_PATRIMONIO_COMP", foreignKey: "SEC_COMPONENTE"});
  SIG_PATRIMONIO_COMP.hasMany(SIG_MOVIM_UNIDAD_PRODUCIDA, { as: "SEC_COMPONENTE_SIG_MOVIM_UNIDAD_PRODUCIDAs", foreignKey: "SEC_COMPONENTE"});
  SIG_INM_SEGUROS.belongsTo(SIG_PATRIMONIO_INM, { as: "SEC_EJEC_SIG_PATRIMONIO_INM", foreignKey: "SEC_EJEC"});
  SIG_PATRIMONIO_INM.hasMany(SIG_INM_SEGUROS, { as: "SIG_INM_SEGUROs", foreignKey: "SEC_EJEC"});
  SIG_INM_SEGUROS.belongsTo(SIG_PATRIMONIO_INM, { as: "SECUENCIA_SIG_PATRIMONIO_INM", foreignKey: "SECUENCIA"});
  SIG_PATRIMONIO_INM.hasMany(SIG_INM_SEGUROS, { as: "SECUENCIA_SIG_INM_SEGUROs", foreignKey: "SECUENCIA"});
  SIG_INM_UNIDAD_ACTIVO.belongsTo(SIG_PATRIMONIO_INM, { as: "SEC_EJEC_SIG_PATRIMONIO_INM", foreignKey: "SEC_EJEC"});
  SIG_PATRIMONIO_INM.hasMany(SIG_INM_UNIDAD_ACTIVO, { as: "SIG_INM_UNIDAD_ACTIVOs", foreignKey: "SEC_EJEC"});
  SIG_INM_UNIDAD_ACTIVO.belongsTo(SIG_PATRIMONIO_INM, { as: "SECUENCIA_SIG_PATRIMONIO_INM", foreignKey: "SECUENCIA"});
  SIG_PATRIMONIO_INM.hasMany(SIG_INM_UNIDAD_ACTIVO, { as: "SECUENCIA_SIG_INM_UNIDAD_ACTIVOs", foreignKey: "SECUENCIA"});
  SIG_INM_UNIDAD_ACTIVO_IF.belongsTo(SIG_PATRIMONIO_INM_IF, { as: "ANO_EJE_SIG_PATRIMONIO_INM_IF", foreignKey: "ANO_EJE"});
  SIG_PATRIMONIO_INM_IF.hasMany(SIG_INM_UNIDAD_ACTIVO_IF, { as: "SIG_INM_UNIDAD_ACTIVO_IFs", foreignKey: "ANO_EJE"});
  SIG_INM_UNIDAD_ACTIVO_IF.belongsTo(SIG_PATRIMONIO_INM_IF, { as: "NRO_INVENTARIO_SIG_PATRIMONIO_INM_IF", foreignKey: "NRO_INVENTARIO"});
  SIG_PATRIMONIO_INM_IF.hasMany(SIG_INM_UNIDAD_ACTIVO_IF, { as: "NRO_INVENTARIO_SIG_INM_UNIDAD_ACTIVO_IFs", foreignKey: "NRO_INVENTARIO"});
  SIG_INM_UNIDAD_ACTIVO_IF.belongsTo(SIG_PATRIMONIO_INM_IF, { as: "SEC_EJEC_SIG_PATRIMONIO_INM_IF", foreignKey: "SEC_EJEC"});
  SIG_PATRIMONIO_INM_IF.hasMany(SIG_INM_UNIDAD_ACTIVO_IF, { as: "SEC_EJEC_SIG_INM_UNIDAD_ACTIVO_IFs", foreignKey: "SEC_EJEC"});
  SIG_INM_UNIDAD_ACTIVO_IF.belongsTo(SIG_PATRIMONIO_INM_IF, { as: "SECUENCIA_SIG_PATRIMONIO_INM_IF", foreignKey: "SECUENCIA"});
  SIG_PATRIMONIO_INM_IF.hasMany(SIG_INM_UNIDAD_ACTIVO_IF, { as: "SECUENCIA_SIG_INM_UNIDAD_ACTIVO_IFs", foreignKey: "SECUENCIA"});
  SIG_DETALLE_PEDIDOS.belongsTo(SIG_PEDIDOS, { as: "TIPO_BIEN_SIG_PEDIDO", foreignKey: "TIPO_BIEN"});
  SIG_PEDIDOS.hasMany(SIG_DETALLE_PEDIDOS, { as: "SIG_DETALLE_PEDIDOs", foreignKey: "TIPO_BIEN"});
  SIG_DETALLE_PEDIDOS.belongsTo(SIG_PEDIDOS, { as: "NRO_PEDIDO_SIG_PEDIDO", foreignKey: "NRO_PEDIDO"});
  SIG_PEDIDOS.hasMany(SIG_DETALLE_PEDIDOS, { as: "NRO_PEDIDO_SIG_DETALLE_PEDIDOs", foreignKey: "NRO_PEDIDO"});
  SIG_DETALLE_PEDIDOS.belongsTo(SIG_PEDIDOS, { as: "TIPO_PEDIDO_SIG_PEDIDO", foreignKey: "TIPO_PEDIDO"});
  SIG_PEDIDOS.hasMany(SIG_DETALLE_PEDIDOS, { as: "TIPO_PEDIDO_SIG_DETALLE_PEDIDOs", foreignKey: "TIPO_PEDIDO"});
  SIG_PEI_META_ACCION_EST.belongsTo(SIG_PEI_ACCION_EST, { as: "SEC_AE_SIG_PEI_ACCION_EST", foreignKey: "SEC_AE"});
  SIG_PEI_ACCION_EST.hasMany(SIG_PEI_META_ACCION_EST, { as: "SIG_PEI_META_ACCION_ESTs", foreignKey: "SEC_AE"});
  SIG_PEI_META_ACCION_EST.belongsTo(SIG_PEI_ACCION_EST, { as: "SEC_EJEC_SIG_PEI_ACCION_EST", foreignKey: "SEC_EJEC"});
  SIG_PEI_ACCION_EST.hasMany(SIG_PEI_META_ACCION_EST, { as: "SEC_EJEC_SIG_PEI_META_ACCION_ESTs", foreignKey: "SEC_EJEC"});
  SIG_PEI_META_ACCION_EST.belongsTo(SIG_PEI_ACCION_EST, { as: "SEC_OE_SIG_PEI_ACCION_EST", foreignKey: "SEC_OE"});
  SIG_PEI_ACCION_EST.hasMany(SIG_PEI_META_ACCION_EST, { as: "SEC_OE_SIG_PEI_META_ACCION_ESTs", foreignKey: "SEC_OE"});
  SIG_PEI_META_ACCION_EST.belongsTo(SIG_PEI_ACCION_EST, { as: "SECUENCIA_SIG_PEI_ACCION_EST", foreignKey: "SECUENCIA"});
  SIG_PEI_ACCION_EST.hasMany(SIG_PEI_META_ACCION_EST, { as: "SECUENCIA_SIG_PEI_META_ACCION_ESTs", foreignKey: "SECUENCIA"});
  SIG_PEI_OBJETIVO_EST.belongsTo(SIG_PEI_GENERAL, { as: "SEC_EJEC_SIG_PEI_GENERAL", foreignKey: "SEC_EJEC"});
  SIG_PEI_GENERAL.hasMany(SIG_PEI_OBJETIVO_EST, { as: "SIG_PEI_OBJETIVO_ESTs", foreignKey: "SEC_EJEC"});
  SIG_PEI_OBJETIVO_EST.belongsTo(SIG_PEI_GENERAL, { as: "SECUENCIA_SIG_PEI_GENERAL", foreignKey: "SECUENCIA"});
  SIG_PEI_GENERAL.hasMany(SIG_PEI_OBJETIVO_EST, { as: "SECUENCIA_SIG_PEI_OBJETIVO_ESTs", foreignKey: "SECUENCIA"});
  SIG_PEI_META_ANUAL.belongsTo(SIG_PEI_IND_OBJETIVO_EST, { as: "SEC_DET_OE_IND_SIG_PEI_IND_OBJETIVO_EST", foreignKey: "SEC_DET_OE_IND"});
  SIG_PEI_IND_OBJETIVO_EST.hasMany(SIG_PEI_META_ANUAL, { as: "SIG_PEI_META_ANUALs", foreignKey: "SEC_DET_OE_IND"});
  SIG_PEI_META_ANUAL.belongsTo(SIG_PEI_IND_OBJETIVO_EST, { as: "SEC_EJEC_SIG_PEI_IND_OBJETIVO_EST", foreignKey: "SEC_EJEC"});
  SIG_PEI_IND_OBJETIVO_EST.hasMany(SIG_PEI_META_ANUAL, { as: "SEC_EJEC_SIG_PEI_META_ANUALs", foreignKey: "SEC_EJEC"});
  SIG_PEI_META_ANUAL.belongsTo(SIG_PEI_IND_OBJETIVO_EST, { as: "SEC_OE_SIG_PEI_IND_OBJETIVO_EST", foreignKey: "SEC_OE"});
  SIG_PEI_IND_OBJETIVO_EST.hasMany(SIG_PEI_META_ANUAL, { as: "SEC_OE_SIG_PEI_META_ANUALs", foreignKey: "SEC_OE"});
  SIG_PEI_META_ANUAL.belongsTo(SIG_PEI_IND_OBJETIVO_EST, { as: "SECUENCIA_SIG_PEI_IND_OBJETIVO_EST", foreignKey: "SECUENCIA"});
  SIG_PEI_IND_OBJETIVO_EST.hasMany(SIG_PEI_META_ANUAL, { as: "SECUENCIA_SIG_PEI_META_ANUALs", foreignKey: "SECUENCIA"});
  SIG_POI_ACCION_EST_CENTRO.belongsTo(SIG_PEI_META_ACCION_EST, { as: "SEC_AE_SIG_PEI_META_ACCION_EST", foreignKey: "SEC_AE"});
  SIG_PEI_META_ACCION_EST.hasMany(SIG_POI_ACCION_EST_CENTRO, { as: "SIG_POI_ACCION_EST_CENTROs", foreignKey: "SEC_AE"});
  SIG_POI_ACCION_EST_CENTRO.belongsTo(SIG_PEI_META_ACCION_EST, { as: "SEC_EJEC_SIG_PEI_META_ACCION_EST", foreignKey: "SEC_EJEC"});
  SIG_PEI_META_ACCION_EST.hasMany(SIG_POI_ACCION_EST_CENTRO, { as: "SEC_EJEC_SIG_POI_ACCION_EST_CENTROs", foreignKey: "SEC_EJEC"});
  SIG_POI_ACCION_EST_CENTRO.belongsTo(SIG_PEI_META_ACCION_EST, { as: "SEC_META_SIG_PEI_META_ACCION_EST", foreignKey: "SEC_META"});
  SIG_PEI_META_ACCION_EST.hasMany(SIG_POI_ACCION_EST_CENTRO, { as: "SEC_META_SIG_POI_ACCION_EST_CENTROs", foreignKey: "SEC_META"});
  SIG_POI_ACCION_EST_CENTRO.belongsTo(SIG_PEI_META_ACCION_EST, { as: "SEC_OE_SIG_PEI_META_ACCION_EST", foreignKey: "SEC_OE"});
  SIG_PEI_META_ACCION_EST.hasMany(SIG_POI_ACCION_EST_CENTRO, { as: "SEC_OE_SIG_POI_ACCION_EST_CENTROs", foreignKey: "SEC_OE"});
  SIG_POI_ACCION_EST_CENTRO.belongsTo(SIG_PEI_META_ACCION_EST, { as: "SECUENCIA_SIG_PEI_META_ACCION_EST", foreignKey: "SECUENCIA"});
  SIG_PEI_META_ACCION_EST.hasMany(SIG_POI_ACCION_EST_CENTRO, { as: "SECUENCIA_SIG_POI_ACCION_EST_CENTROs", foreignKey: "SECUENCIA"});
  SIG_PEI_ACCION_EST.belongsTo(SIG_PEI_OBJETIVO_EST, { as: "SEC_EJEC_SIG_PEI_OBJETIVO_EST", foreignKey: "SEC_EJEC"});
  SIG_PEI_OBJETIVO_EST.hasMany(SIG_PEI_ACCION_EST, { as: "SIG_PEI_ACCION_ESTs", foreignKey: "SEC_EJEC"});
  SIG_PEI_ACCION_EST.belongsTo(SIG_PEI_OBJETIVO_EST, { as: "SEC_OE_SIG_PEI_OBJETIVO_EST", foreignKey: "SEC_OE"});
  SIG_PEI_OBJETIVO_EST.hasMany(SIG_PEI_ACCION_EST, { as: "SEC_OE_SIG_PEI_ACCION_ESTs", foreignKey: "SEC_OE"});
  SIG_PEI_ACCION_EST.belongsTo(SIG_PEI_OBJETIVO_EST, { as: "SECUENCIA_SIG_PEI_OBJETIVO_EST", foreignKey: "SECUENCIA"});
  SIG_PEI_OBJETIVO_EST.hasMany(SIG_PEI_ACCION_EST, { as: "SECUENCIA_SIG_PEI_ACCION_ESTs", foreignKey: "SECUENCIA"});
  SIG_PEI_CAT_DETA_OBJETIVO_EST.belongsTo(SIG_PEI_OBJETIVO_EST, { as: "SEC_EJEC_SIG_PEI_OBJETIVO_EST", foreignKey: "SEC_EJEC"});
  SIG_PEI_OBJETIVO_EST.hasMany(SIG_PEI_CAT_DETA_OBJETIVO_EST, { as: "SIG_PEI_CAT_DETA_OBJETIVO_ESTs", foreignKey: "SEC_EJEC"});
  SIG_PEI_CAT_DETA_OBJETIVO_EST.belongsTo(SIG_PEI_OBJETIVO_EST, { as: "SEC_OE_SIG_PEI_OBJETIVO_EST", foreignKey: "SEC_OE"});
  SIG_PEI_OBJETIVO_EST.hasMany(SIG_PEI_CAT_DETA_OBJETIVO_EST, { as: "SEC_OE_SIG_PEI_CAT_DETA_OBJETIVO_ESTs", foreignKey: "SEC_OE"});
  SIG_PEI_CAT_DETA_OBJETIVO_EST.belongsTo(SIG_PEI_OBJETIVO_EST, { as: "SECUENCIA_SIG_PEI_OBJETIVO_EST", foreignKey: "SECUENCIA"});
  SIG_PEI_OBJETIVO_EST.hasMany(SIG_PEI_CAT_DETA_OBJETIVO_EST, { as: "SECUENCIA_SIG_PEI_CAT_DETA_OBJETIVO_ESTs", foreignKey: "SECUENCIA"});
  SIG_PEI_IND_OBJETIVO_EST.belongsTo(SIG_PEI_OBJETIVO_EST, { as: "SEC_EJEC_SIG_PEI_OBJETIVO_EST", foreignKey: "SEC_EJEC"});
  SIG_PEI_OBJETIVO_EST.hasMany(SIG_PEI_IND_OBJETIVO_EST, { as: "SIG_PEI_IND_OBJETIVO_ESTs", foreignKey: "SEC_EJEC"});
  SIG_PEI_IND_OBJETIVO_EST.belongsTo(SIG_PEI_OBJETIVO_EST, { as: "SEC_OE_SIG_PEI_OBJETIVO_EST", foreignKey: "SEC_OE"});
  SIG_PEI_OBJETIVO_EST.hasMany(SIG_PEI_IND_OBJETIVO_EST, { as: "SEC_OE_SIG_PEI_IND_OBJETIVO_ESTs", foreignKey: "SEC_OE"});
  SIG_PEI_IND_OBJETIVO_EST.belongsTo(SIG_PEI_OBJETIVO_EST, { as: "SECUENCIA_SIG_PEI_OBJETIVO_EST", foreignKey: "SECUENCIA"});
  SIG_PEI_OBJETIVO_EST.hasMany(SIG_PEI_IND_OBJETIVO_EST, { as: "SECUENCIA_SIG_PEI_IND_OBJETIVO_ESTs", foreignKey: "SECUENCIA"});
  SIG_PLANILLA_SNP_DETALLE.belongsTo(SIG_PLANILLA_SNP, { as: "ANO_EJE_SIG_PLANILLA_SNP", foreignKey: "ANO_EJE"});
  SIG_PLANILLA_SNP.hasMany(SIG_PLANILLA_SNP_DETALLE, { as: "SIG_PLANILLA_SNP_DETALLEs", foreignKey: "ANO_EJE"});
  SIG_PLANILLA_SNP_DETALLE.belongsTo(SIG_PLANILLA_SNP, { as: "SEC_EJEC_SIG_PLANILLA_SNP", foreignKey: "SEC_EJEC"});
  SIG_PLANILLA_SNP.hasMany(SIG_PLANILLA_SNP_DETALLE, { as: "SEC_EJEC_SIG_PLANILLA_SNP_DETALLEs", foreignKey: "SEC_EJEC"});
  SIG_PLANILLA_SNP_DETALLE.belongsTo(SIG_PLANILLA_SNP, { as: "SEC_PLANILLA_SIG_PLANILLA_SNP", foreignKey: "SEC_PLANILLA"});
  SIG_PLANILLA_SNP.hasMany(SIG_PLANILLA_SNP_DETALLE, { as: "SEC_PLANILLA_SIG_PLANILLA_SNP_DETALLEs", foreignKey: "SEC_PLANILLA"});
  SIG_PLANILLA_SNP_DETALLE.belongsTo(SIG_PLANILLA_SNP, { as: "TIPO_PLANILLA_SIG_PLANILLA_SNP", foreignKey: "TIPO_PLANILLA"});
  SIG_PLANILLA_SNP.hasMany(SIG_PLANILLA_SNP_DETALLE, { as: "TIPO_PLANILLA_SIG_PLANILLA_SNP_DETALLEs", foreignKey: "TIPO_PLANILLA"});
  SIG_PLANILLA_SNP_DESC.belongsTo(SIG_PLANILLA_SNP_DETALLE, { as: "ANO_EJE_SIG_PLANILLA_SNP_DETALLE", foreignKey: "ANO_EJE"});
  SIG_PLANILLA_SNP_DETALLE.hasMany(SIG_PLANILLA_SNP_DESC, { as: "SIG_PLANILLA_SNP_DESCs", foreignKey: "ANO_EJE"});
  SIG_PLANILLA_SNP_DESC.belongsTo(SIG_PLANILLA_SNP_DETALLE, { as: "SEC_EJEC_SIG_PLANILLA_SNP_DETALLE", foreignKey: "SEC_EJEC"});
  SIG_PLANILLA_SNP_DETALLE.hasMany(SIG_PLANILLA_SNP_DESC, { as: "SEC_EJEC_SIG_PLANILLA_SNP_DESCs", foreignKey: "SEC_EJEC"});
  SIG_PLANILLA_SNP_DESC.belongsTo(SIG_PLANILLA_SNP_DETALLE, { as: "SEC_PLANILLA_SIG_PLANILLA_SNP_DETALLE", foreignKey: "SEC_PLANILLA"});
  SIG_PLANILLA_SNP_DETALLE.hasMany(SIG_PLANILLA_SNP_DESC, { as: "SEC_PLANILLA_SIG_PLANILLA_SNP_DESCs", foreignKey: "SEC_PLANILLA"});
  SIG_PLANILLA_SNP_DESC.belongsTo(SIG_PLANILLA_SNP_DETALLE, { as: "SEC_PLANILLA_DET_SIG_PLANILLA_SNP_DETALLE", foreignKey: "SEC_PLANILLA_DET"});
  SIG_PLANILLA_SNP_DETALLE.hasMany(SIG_PLANILLA_SNP_DESC, { as: "SEC_PLANILLA_DET_SIG_PLANILLA_SNP_DESCs", foreignKey: "SEC_PLANILLA_DET"});
  SIG_PLANILLA_SNP_DESC.belongsTo(SIG_PLANILLA_SNP_DETALLE, { as: "TIPO_PLANILLA_SIG_PLANILLA_SNP_DETALLE", foreignKey: "TIPO_PLANILLA"});
  SIG_PLANILLA_SNP_DETALLE.hasMany(SIG_PLANILLA_SNP_DESC, { as: "TIPO_PLANILLA_SIG_PLANILLA_SNP_DESCs", foreignKey: "TIPO_PLANILLA"});
  SIG_CONTRATO_NOTAS.belongsTo(SIG_PLANTILLA_GRUPO_NOTA, { as: "SEC_EJEC_SIG_PLANTILLA_GRUPO_NOTum", foreignKey: "SEC_EJEC"});
  SIG_PLANTILLA_GRUPO_NOTA.hasMany(SIG_CONTRATO_NOTAS, { as: "SIG_CONTRATO_NOTa", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_NOTAS.belongsTo(SIG_PLANTILLA_GRUPO_NOTA, { as: "SEC_GRUPO_SIG_PLANTILLA_GRUPO_NOTum", foreignKey: "SEC_GRUPO"});
  SIG_PLANTILLA_GRUPO_NOTA.hasMany(SIG_CONTRATO_NOTAS, { as: "SEC_GRUPO_SIG_CONTRATO_NOTa", foreignKey: "SEC_GRUPO"});
  SIG_CONTRATO_NOTAS.belongsTo(SIG_PLANTILLA_GRUPO_NOTA, { as: "SEC_PLANTILLA_SIG_PLANTILLA_GRUPO_NOTum", foreignKey: "SEC_PLANTILLA"});
  SIG_PLANTILLA_GRUPO_NOTA.hasMany(SIG_CONTRATO_NOTAS, { as: "SEC_PLANTILLA_SIG_CONTRATO_NOTa", foreignKey: "SEC_PLANTILLA"});
  SIG_PROY_PLANILLA_PASAJE.belongsTo(SIG_PLANTILLA_GRUPO_NOTA, { as: "SEC_EJEC_SIG_PLANTILLA_GRUPO_NOTum", foreignKey: "SEC_EJEC"});
  SIG_PLANTILLA_GRUPO_NOTA.hasMany(SIG_PROY_PLANILLA_PASAJE, { as: "SIG_PROY_PLANILLA_PASAJEs", foreignKey: "SEC_EJEC"});
  SIG_PROY_PLANILLA_PASAJE.belongsTo(SIG_PLANTILLA_GRUPO_NOTA, { as: "SEC_GRUPO_DJ_SIG_PLANTILLA_GRUPO_NOTum", foreignKey: "SEC_GRUPO_DJ"});
  SIG_PLANTILLA_GRUPO_NOTA.hasMany(SIG_PROY_PLANILLA_PASAJE, { as: "SEC_GRUPO_DJ_SIG_PROY_PLANILLA_PASAJEs", foreignKey: "SEC_GRUPO_DJ"});
  SIG_PROY_PLANILLA_PASAJE.belongsTo(SIG_PLANTILLA_GRUPO_NOTA, { as: "SEC_PLANTILLA_DJ_SIG_PLANTILLA_GRUPO_NOTum", foreignKey: "SEC_PLANTILLA_DJ"});
  SIG_PLANTILLA_GRUPO_NOTA.hasMany(SIG_PROY_PLANILLA_PASAJE, { as: "SEC_PLANTILLA_DJ_SIG_PROY_PLANILLA_PASAJEs", foreignKey: "SEC_PLANTILLA_DJ"});
  SIG_PROY_PLANILLA_PASAJE.belongsTo(SIG_PLANTILLA_GRUPO_NOTA, { as: "SEC_GRUPO_PVGV_SIG_PLANTILLA_GRUPO_NOTum", foreignKey: "SEC_GRUPO_PVGV"});
  SIG_PLANTILLA_GRUPO_NOTA.hasMany(SIG_PROY_PLANILLA_PASAJE, { as: "SEC_GRUPO_PVGV_SIG_PROY_PLANILLA_PASAJEs", foreignKey: "SEC_GRUPO_PVGV"});
  SIG_PROY_PLANILLA_PASAJE.belongsTo(SIG_PLANTILLA_GRUPO_NOTA, { as: "SEC_PLANTILLA_PVGV_SIG_PLANTILLA_GRUPO_NOTum", foreignKey: "SEC_PLANTILLA_PVGV"});
  SIG_PLANTILLA_GRUPO_NOTA.hasMany(SIG_PROY_PLANILLA_PASAJE, { as: "SEC_PLANTILLA_PVGV_SIG_PROY_PLANILLA_PASAJEs", foreignKey: "SEC_PLANTILLA_PVGV"});
  SIG_POI_ASIGNA_CENTRO_COSTO.belongsTo(SIG_POI_ACCION_EST_CENTRO, { as: "ANO_EJE_SIG_POI_ACCION_EST_CENTRO", foreignKey: "ANO_EJE"});
  SIG_POI_ACCION_EST_CENTRO.hasMany(SIG_POI_ASIGNA_CENTRO_COSTO, { as: "SIG_POI_ASIGNA_CENTRO_COSTOs", foreignKey: "ANO_EJE"});
  SIG_POI_ASIGNA_CENTRO_COSTO.belongsTo(SIG_POI_ACCION_EST_CENTRO, { as: "SEC_ASIGNA_SIG_POI_ACCION_EST_CENTRO", foreignKey: "SEC_ASIGNA"});
  SIG_POI_ACCION_EST_CENTRO.hasMany(SIG_POI_ASIGNA_CENTRO_COSTO, { as: "SEC_ASIGNA_SIG_POI_ASIGNA_CENTRO_COSTOs", foreignKey: "SEC_ASIGNA"});
  SIG_POI_ASIGNA_CENTRO_COSTO.belongsTo(SIG_POI_ACCION_EST_CENTRO, { as: "SEC_EJEC_SIG_POI_ACCION_EST_CENTRO", foreignKey: "SEC_EJEC"});
  SIG_POI_ACCION_EST_CENTRO.hasMany(SIG_POI_ASIGNA_CENTRO_COSTO, { as: "SEC_EJEC_SIG_POI_ASIGNA_CENTRO_COSTOs", foreignKey: "SEC_EJEC"});
  SIG_POI_ASIGNA_TAREA.belongsTo(SIG_POI_ACCION_EST_CENTRO, { as: "ANO_EJE_SIG_POI_ACCION_EST_CENTRO", foreignKey: "ANO_EJE"});
  SIG_POI_ACCION_EST_CENTRO.hasMany(SIG_POI_ASIGNA_TAREA, { as: "SIG_POI_ASIGNA_TAREAs", foreignKey: "ANO_EJE"});
  SIG_POI_ASIGNA_TAREA.belongsTo(SIG_POI_ACCION_EST_CENTRO, { as: "SEC_ASIGNA_SIG_POI_ACCION_EST_CENTRO", foreignKey: "SEC_ASIGNA"});
  SIG_POI_ACCION_EST_CENTRO.hasMany(SIG_POI_ASIGNA_TAREA, { as: "SEC_ASIGNA_SIG_POI_ASIGNA_TAREAs", foreignKey: "SEC_ASIGNA"});
  SIG_POI_ASIGNA_TAREA.belongsTo(SIG_POI_ACCION_EST_CENTRO, { as: "SEC_EJEC_SIG_POI_ACCION_EST_CENTRO", foreignKey: "SEC_EJEC"});
  SIG_POI_ACCION_EST_CENTRO.hasMany(SIG_POI_ASIGNA_TAREA, { as: "SEC_EJEC_SIG_POI_ASIGNA_TAREAs", foreignKey: "SEC_EJEC"});
  SIG_POI_META_ASIGNA_CENTRO.belongsTo(SIG_POI_ASIGNA_CENTRO_COSTO, { as: "ANO_EJE_SIG_POI_ASIGNA_CENTRO_COSTO", foreignKey: "ANO_EJE"});
  SIG_POI_ASIGNA_CENTRO_COSTO.hasMany(SIG_POI_META_ASIGNA_CENTRO, { as: "SIG_POI_META_ASIGNA_CENTROs", foreignKey: "ANO_EJE"});
  SIG_POI_META_ASIGNA_CENTRO.belongsTo(SIG_POI_ASIGNA_CENTRO_COSTO, { as: "SEC_ACT_POI_SIG_POI_ASIGNA_CENTRO_COSTO", foreignKey: "SEC_ACT_POI"});
  SIG_POI_ASIGNA_CENTRO_COSTO.hasMany(SIG_POI_META_ASIGNA_CENTRO, { as: "SEC_ACT_POI_SIG_POI_META_ASIGNA_CENTROs", foreignKey: "SEC_ACT_POI"});
  SIG_POI_META_ASIGNA_CENTRO.belongsTo(SIG_POI_ASIGNA_CENTRO_COSTO, { as: "SEC_ASIGNA_SIG_POI_ASIGNA_CENTRO_COSTO", foreignKey: "SEC_ASIGNA"});
  SIG_POI_ASIGNA_CENTRO_COSTO.hasMany(SIG_POI_META_ASIGNA_CENTRO, { as: "SEC_ASIGNA_SIG_POI_META_ASIGNA_CENTROs", foreignKey: "SEC_ASIGNA"});
  SIG_POI_META_ASIGNA_CENTRO.belongsTo(SIG_POI_ASIGNA_CENTRO_COSTO, { as: "SEC_EJEC_SIG_POI_ASIGNA_CENTRO_COSTO", foreignKey: "SEC_EJEC"});
  SIG_POI_ASIGNA_CENTRO_COSTO.hasMany(SIG_POI_META_ASIGNA_CENTRO, { as: "SEC_EJEC_SIG_POI_META_ASIGNA_CENTROs", foreignKey: "SEC_EJEC"});
  SIG_PPAAC_SECUENCIA.belongsTo(SIG_PPAAC_CONSOLIDADO, { as: "ANO_EJE_SIG_PPAAC_CONSOLIDADO", foreignKey: "ANO_EJE"});
  SIG_PPAAC_CONSOLIDADO.hasMany(SIG_PPAAC_SECUENCIA, { as: "SIG_PPAAC_SECUENCIa", foreignKey: "ANO_EJE"});
  SIG_PPAAC_SECUENCIA.belongsTo(SIG_PPAAC_CONSOLIDADO, { as: "NRO_CONSOL", foreignKey: "NRO_CONSOLID"});
  SIG_PPAAC_CONSOLIDADO.hasMany(SIG_PPAAC_SECUENCIA, { as: "NRO_CONSOL_SIG_PPAAC_SECUENCIa", foreignKey: "NRO_CONSOLID"});
  SIG_PPAAC_SECUENCIA.belongsTo(SIG_PPAAC_CONSOLIDADO, { as: "SEC_EJEC_SIG_PPAAC_CONSOLIDADO", foreignKey: "SEC_EJEC"});
  SIG_PPAAC_CONSOLIDADO.hasMany(SIG_PPAAC_SECUENCIA, { as: "SEC_EJEC_SIG_PPAAC_SECUENCIa", foreignKey: "SEC_EJEC"});
  SIG_PPAAC_SECUENCIA.belongsTo(SIG_PPAAC_CONSOLIDADO, { as: "TIPO_CONSOL", foreignKey: "TIPO_CONSOLID"});
  SIG_PPAAC_CONSOLIDADO.hasMany(SIG_PPAAC_SECUENCIA, { as: "TIPO_CONSOL_SIG_PPAAC_SECUENCIa", foreignKey: "TIPO_CONSOLID"});
  SIG_PPAAC_SECUENCIA.belongsTo(SIG_PPAAC_CONSOLIDADO, { as: "TIPO_GENERACION_SIG_PPAAC_CONSOLIDADO", foreignKey: "TIPO_GENERACION"});
  SIG_PPAAC_CONSOLIDADO.hasMany(SIG_PPAAC_SECUENCIA, { as: "TIPO_GENERACION_SIG_PPAAC_SECUENCIa", foreignKey: "TIPO_GENERACION"});
  SIG_PPAAC_CENTRO_COSTO.belongsTo(SIG_PPAAC_METAS, { as: "ANO_EJE_SIG_PPAAC_META", foreignKey: "ANO_EJE"});
  SIG_PPAAC_METAS.hasMany(SIG_PPAAC_CENTRO_COSTO, { as: "SIG_PPAAC_CENTRO_COSTOs", foreignKey: "ANO_EJE"});
  SIG_PPAAC_CENTRO_COSTO.belongsTo(SIG_PPAAC_METAS, { as: "SEC_EJEC_SIG_PPAAC_META", foreignKey: "SEC_EJEC"});
  SIG_PPAAC_METAS.hasMany(SIG_PPAAC_CENTRO_COSTO, { as: "SEC_EJEC_SIG_PPAAC_CENTRO_COSTOs", foreignKey: "SEC_EJEC"});
  SIG_PPAAC_CENTRO_COSTO.belongsTo(SIG_PPAAC_METAS, { as: "NRO_CONSOL", foreignKey: "NRO_CONSOLID"});
  SIG_PPAAC_METAS.hasMany(SIG_PPAAC_CENTRO_COSTO, { as: "NRO_CONSOL_SIG_PPAAC_CENTRO_COSTOs", foreignKey: "NRO_CONSOLID"});
  SIG_PPAAC_CENTRO_COSTO.belongsTo(SIG_PPAAC_METAS, { as: "SEC_CONSOL", foreignKey: "SEC_CONSOLID"});
  SIG_PPAAC_METAS.hasMany(SIG_PPAAC_CENTRO_COSTO, { as: "SEC_CONSOL_SIG_PPAAC_CENTRO_COSTOs", foreignKey: "SEC_CONSOLID"});
  SIG_PPAAC_CENTRO_COSTO.belongsTo(SIG_PPAAC_METAS, { as: "SEC_META_SIG_PPAAC_META", foreignKey: "SEC_META"});
  SIG_PPAAC_METAS.hasMany(SIG_PPAAC_CENTRO_COSTO, { as: "SEC_META_SIG_PPAAC_CENTRO_COSTOs", foreignKey: "SEC_META"});
  SIG_PPAAC_CENTRO_COSTO.belongsTo(SIG_PPAAC_METAS, { as: "SEC_RESUMEN_SIG_PPAAC_META", foreignKey: "SEC_RESUMEN"});
  SIG_PPAAC_METAS.hasMany(SIG_PPAAC_CENTRO_COSTO, { as: "SEC_RESUMEN_SIG_PPAAC_CENTRO_COSTOs", foreignKey: "SEC_RESUMEN"});
  SIG_PPAAC_CENTRO_COSTO.belongsTo(SIG_PPAAC_METAS, { as: "TIPO_BIEN_SIG_PPAAC_META", foreignKey: "TIPO_BIEN"});
  SIG_PPAAC_METAS.hasMany(SIG_PPAAC_CENTRO_COSTO, { as: "TIPO_BIEN_SIG_PPAAC_CENTRO_COSTOs", foreignKey: "TIPO_BIEN"});
  SIG_PPAAC_CENTRO_COSTO.belongsTo(SIG_PPAAC_METAS, { as: "TIPO_CONSOL", foreignKey: "TIPO_CONSOLID"});
  SIG_PPAAC_METAS.hasMany(SIG_PPAAC_CENTRO_COSTO, { as: "TIPO_CONSOL_SIG_PPAAC_CENTRO_COSTOs", foreignKey: "TIPO_CONSOLID"});
  SIG_PPAAC_CENTRO_COSTO.belongsTo(SIG_PPAAC_METAS, { as: "TIPO_GENERACION_SIG_PPAAC_META", foreignKey: "TIPO_GENERACION"});
  SIG_PPAAC_METAS.hasMany(SIG_PPAAC_CENTRO_COSTO, { as: "TIPO_GENERACION_SIG_PPAAC_CENTRO_COSTOs", foreignKey: "TIPO_GENERACION"});
  SIG_PPAAC_METAS.belongsTo(SIG_PPAAC_METAS, { as: "ANO_EJE_SIG_PPAAC_META", foreignKey: "ANO_EJE"});
  SIG_PPAAC_METAS.hasMany(SIG_PPAAC_METAS, { as: "SIG_PPAAC_METa", foreignKey: "ANO_EJE"});
  SIG_PPAAC_METAS.belongsTo(SIG_PPAAC_METAS, { as: "NRO_CONSOL", foreignKey: "NRO_CONSOLID"});
  SIG_PPAAC_METAS.hasMany(SIG_PPAAC_METAS, { as: "NRO_CONSOL_SIG_PPAAC_METa", foreignKey: "NRO_CONSOLID"});
  SIG_PPAAC_METAS.belongsTo(SIG_PPAAC_METAS, { as: "SEC_CONSOL", foreignKey: "SEC_CONSOLID"});
  SIG_PPAAC_METAS.hasMany(SIG_PPAAC_METAS, { as: "SEC_CONSOL_SIG_PPAAC_METa", foreignKey: "SEC_CONSOLID"});
  SIG_PPAAC_METAS.belongsTo(SIG_PPAAC_METAS, { as: "SEC_EJEC_SIG_PPAAC_META", foreignKey: "SEC_EJEC"});
  SIG_PPAAC_METAS.hasMany(SIG_PPAAC_METAS, { as: "SEC_EJEC_SIG_PPAAC_METa", foreignKey: "SEC_EJEC"});
  SIG_PPAAC_METAS.belongsTo(SIG_PPAAC_METAS, { as: "SEC_RESUMEN_SIG_PPAAC_META", foreignKey: "SEC_RESUMEN"});
  SIG_PPAAC_METAS.hasMany(SIG_PPAAC_METAS, { as: "SEC_RESUMEN_SIG_PPAAC_METa", foreignKey: "SEC_RESUMEN"});
  SIG_PPAAC_METAS.belongsTo(SIG_PPAAC_METAS, { as: "TIPO_BIEN_SIG_PPAAC_META", foreignKey: "TIPO_BIEN"});
  SIG_PPAAC_METAS.hasMany(SIG_PPAAC_METAS, { as: "TIPO_BIEN_SIG_PPAAC_METa", foreignKey: "TIPO_BIEN"});
  SIG_PPAAC_METAS.belongsTo(SIG_PPAAC_METAS, { as: "TIPO_CONSOL", foreignKey: "TIPO_CONSOLID"});
  SIG_PPAAC_METAS.hasMany(SIG_PPAAC_METAS, { as: "TIPO_CONSOL_SIG_PPAAC_METa", foreignKey: "TIPO_CONSOLID"});
  SIG_PPAAC_METAS.belongsTo(SIG_PPAAC_METAS, { as: "TIPO_GENERACION_SIG_PPAAC_META", foreignKey: "TIPO_GENERACION"});
  SIG_PPAAC_METAS.hasMany(SIG_PPAAC_METAS, { as: "TIPO_GENERACION_SIG_PPAAC_METa", foreignKey: "TIPO_GENERACION"});
  SIG_PPAAC_METAS.belongsTo(SIG_PPAAC_METAS, { as: "SEC_META_SIG_PPAAC_META", foreignKey: "SEC_META"});
  SIG_PPAAC_METAS.hasMany(SIG_PPAAC_METAS, { as: "SEC_META_SIG_PPAAC_METa", foreignKey: "SEC_META"});
  SIG_PPAAC_ITEM.belongsTo(SIG_PPAAC_SECUENCIA, { as: "SEC_EJEC_SIG_PPAAC_SECUENCIum", foreignKey: "SEC_EJEC"});
  SIG_PPAAC_SECUENCIA.hasMany(SIG_PPAAC_ITEM, { as: "SIG_PPAAC_ITEMs", foreignKey: "SEC_EJEC"});
  SIG_PPAAC_ITEM.belongsTo(SIG_PPAAC_SECUENCIA, { as: "TIPO_BIEN_SIG_PPAAC_SECUENCIum", foreignKey: "TIPO_BIEN"});
  SIG_PPAAC_SECUENCIA.hasMany(SIG_PPAAC_ITEM, { as: "TIPO_BIEN_SIG_PPAAC_ITEMs", foreignKey: "TIPO_BIEN"});
  SIG_PPAAC_ITEM.belongsTo(SIG_PPAAC_SECUENCIA, { as: "ANO_EJE_SIG_PPAAC_SECUENCIum", foreignKey: "ANO_EJE"});
  SIG_PPAAC_SECUENCIA.hasMany(SIG_PPAAC_ITEM, { as: "ANO_EJE_SIG_PPAAC_ITEMs", foreignKey: "ANO_EJE"});
  SIG_PPAAC_ITEM.belongsTo(SIG_PPAAC_SECUENCIA, { as: "NRO_CONSOL", foreignKey: "NRO_CONSOLID"});
  SIG_PPAAC_SECUENCIA.hasMany(SIG_PPAAC_ITEM, { as: "NRO_CONSOL_SIG_PPAAC_ITEMs", foreignKey: "NRO_CONSOLID"});
  SIG_PPAAC_ITEM.belongsTo(SIG_PPAAC_SECUENCIA, { as: "SEC_CONSOL", foreignKey: "SEC_CONSOLID"});
  SIG_PPAAC_SECUENCIA.hasMany(SIG_PPAAC_ITEM, { as: "SEC_CONSOL_SIG_PPAAC_ITEMs", foreignKey: "SEC_CONSOLID"});
  SIG_PPAAC_ITEM.belongsTo(SIG_PPAAC_SECUENCIA, { as: "TIPO_CONSOL", foreignKey: "TIPO_CONSOLID"});
  SIG_PPAAC_SECUENCIA.hasMany(SIG_PPAAC_ITEM, { as: "TIPO_CONSOL_SIG_PPAAC_ITEMs", foreignKey: "TIPO_CONSOLID"});
  SIG_PPAAC_ITEM.belongsTo(SIG_PPAAC_SECUENCIA, { as: "TIPO_GENERACION_SIG_PPAAC_SECUENCIum", foreignKey: "TIPO_GENERACION"});
  SIG_PPAAC_SECUENCIA.hasMany(SIG_PPAAC_ITEM, { as: "TIPO_GENERACION_SIG_PPAAC_ITEMs", foreignKey: "TIPO_GENERACION"});
  SIG_PPR_KIT_ITEMS.belongsTo(SIG_PPR_CATEGORIA, { as: "CATEGORIA_SIG_PPR_CATEGORIum", foreignKey: "CATEGORIA"});
  SIG_PPR_CATEGORIA.hasMany(SIG_PPR_KIT_ITEMS, { as: "SIG_PPR_KIT_ITEMs", foreignKey: "CATEGORIA"});
  SIG_PPR_KIT_ITEMS.belongsTo(SIG_PPR_CATEGORIA, { as: "SECTOR_AMBITO_SIG_PPR_CATEGORIum", foreignKey: "SECTOR_AMBITO"});
  SIG_PPR_CATEGORIA.hasMany(SIG_PPR_KIT_ITEMS, { as: "SECTOR_AMBITO_SIG_PPR_KIT_ITEMs", foreignKey: "SECTOR_AMBITO"});
  SIG_PPR_UGEL.belongsTo(SIG_PPR_DRE, { as: "ID_DRE_SIG_PPR_DRE", foreignKey: "ID_DRE"});
  SIG_PPR_DRE.hasMany(SIG_PPR_UGEL, { as: "SIG_PPR_UGELs", foreignKey: "ID_DRE"});
  SIG_PPR_NIVEL.belongsTo(SIG_PPR_NIVEL_DESC, { as: "FUNCION_SIG_PPR_NIVEL_DESC", foreignKey: "FUNCION"});
  SIG_PPR_NIVEL_DESC.hasMany(SIG_PPR_NIVEL, { as: "SIG_PPR_NIVELs", foreignKey: "FUNCION"});
  SIG_PPR_NIVEL.belongsTo(SIG_PPR_NIVEL_DESC, { as: "NIVEL_SIG_PPR_NIVEL_DESC", foreignKey: "NIVEL"});
  SIG_PPR_NIVEL_DESC.hasMany(SIG_PPR_NIVEL, { as: "NIVEL_SIG_PPR_NIVELs", foreignKey: "NIVEL"});
  SIG_PROCESO_SECUENCIA.belongsTo(SIG_PROCESO_DE_SELECCION, { as: "ANO_EJE_SIG_PROCESO_DE_SELECCION", foreignKey: "ANO_EJE"});
  SIG_PROCESO_DE_SELECCION.hasMany(SIG_PROCESO_SECUENCIA, { as: "SIG_PROCESO_SECUENCIa", foreignKey: "ANO_EJE"});
  SIG_PROCESO_SECUENCIA.belongsTo(SIG_PROCESO_DE_SELECCION, { as: "PROCESO_SIG_PROCESO_DE_SELECCION", foreignKey: "PROCESO"});
  SIG_PROCESO_DE_SELECCION.hasMany(SIG_PROCESO_SECUENCIA, { as: "PROCESO_SIG_PROCESO_SECUENCIa", foreignKey: "PROCESO"});
  SIG_PROCESO_SECUENCIA.belongsTo(SIG_PROCESO_DE_SELECCION, { as: "SEC_EJEC_SIG_PROCESO_DE_SELECCION", foreignKey: "SEC_EJEC"});
  SIG_PROCESO_DE_SELECCION.hasMany(SIG_PROCESO_SECUENCIA, { as: "SEC_EJEC_SIG_PROCESO_SECUENCIa", foreignKey: "SEC_EJEC"});
  SIG_PROCESO_SECUENCIA.belongsTo(SIG_PROCESO_DE_SELECCION, { as: "TIPO_GENERACION_SIG_PROCESO_DE_SELECCION", foreignKey: "TIPO_GENERACION"});
  SIG_PROCESO_DE_SELECCION.hasMany(SIG_PROCESO_SECUENCIA, { as: "TIPO_GENERACION_SIG_PROCESO_SECUENCIa", foreignKey: "TIPO_GENERACION"});
  SIG_CONVOCATORIA.belongsTo(SIG_PROCESO_SECUENCIA, { as: "ANO_EJE_SIG_PROCESO_SECUENCIum", foreignKey: "ANO_EJE"});
  SIG_PROCESO_SECUENCIA.hasMany(SIG_CONVOCATORIA, { as: "SIG_CONVOCATORIa", foreignKey: "ANO_EJE"});
  SIG_CONVOCATORIA.belongsTo(SIG_PROCESO_SECUENCIA, { as: "PROCESO_SIG_PROCESO_SECUENCIum", foreignKey: "PROCESO"});
  SIG_PROCESO_SECUENCIA.hasMany(SIG_CONVOCATORIA, { as: "PROCESO_SIG_CONVOCATORIa", foreignKey: "PROCESO"});
  SIG_CONVOCATORIA.belongsTo(SIG_PROCESO_SECUENCIA, { as: "SEC_EJEC_SIG_PROCESO_SECUENCIum", foreignKey: "SEC_EJEC"});
  SIG_PROCESO_SECUENCIA.hasMany(SIG_CONVOCATORIA, { as: "SEC_EJEC_SIG_CONVOCATORIa", foreignKey: "SEC_EJEC"});
  SIG_CONVOCATORIA.belongsTo(SIG_PROCESO_SECUENCIA, { as: "SEC_PROCESO_SIG_PROCESO_SECUENCIum", foreignKey: "SEC_PROCESO"});
  SIG_PROCESO_SECUENCIA.hasMany(SIG_CONVOCATORIA, { as: "SEC_PROCESO_SIG_CONVOCATORIa", foreignKey: "SEC_PROCESO"});
  SIG_CONVOCATORIA.belongsTo(SIG_PROCESO_SECUENCIA, { as: "TIPO_GENERACION_SIG_PROCESO_SECUENCIum", foreignKey: "TIPO_GENERACION"});
  SIG_PROCESO_SECUENCIA.hasMany(SIG_CONVOCATORIA, { as: "TIPO_GENERACION_SIG_CONVOCATORIa", foreignKey: "TIPO_GENERACION"});
  SIG_PROCESO_COMITE.belongsTo(SIG_PROCESO_SECUENCIA, { as: "ANO_EJE_SIG_PROCESO_SECUENCIum", foreignKey: "ANO_EJE"});
  SIG_PROCESO_SECUENCIA.hasMany(SIG_PROCESO_COMITE, { as: "SIG_PROCESO_COMITEs", foreignKey: "ANO_EJE"});
  SIG_PROCESO_COMITE.belongsTo(SIG_PROCESO_SECUENCIA, { as: "SEC_EJEC_SIG_PROCESO_SECUENCIum", foreignKey: "SEC_EJEC"});
  SIG_PROCESO_SECUENCIA.hasMany(SIG_PROCESO_COMITE, { as: "SEC_EJEC_SIG_PROCESO_COMITEs", foreignKey: "SEC_EJEC"});
  SIG_PROCESO_COMITE.belongsTo(SIG_PROCESO_SECUENCIA, { as: "PROCESO_SIG_PROCESO_SECUENCIum", foreignKey: "PROCESO"});
  SIG_PROCESO_SECUENCIA.hasMany(SIG_PROCESO_COMITE, { as: "PROCESO_SIG_PROCESO_COMITEs", foreignKey: "PROCESO"});
  SIG_PROCESO_COMITE.belongsTo(SIG_PROCESO_SECUENCIA, { as: "SEC_PROCESO_SIG_PROCESO_SECUENCIum", foreignKey: "SEC_PROCESO"});
  SIG_PROCESO_SECUENCIA.hasMany(SIG_PROCESO_COMITE, { as: "SEC_PROCESO_SIG_PROCESO_COMITEs", foreignKey: "SEC_PROCESO"});
  SIG_PROCESO_COMITE.belongsTo(SIG_PROCESO_SECUENCIA, { as: "TIPO_GENERACION_SIG_PROCESO_SECUENCIum", foreignKey: "TIPO_GENERACION"});
  SIG_PROCESO_SECUENCIA.hasMany(SIG_PROCESO_COMITE, { as: "TIPO_GENERACION_SIG_PROCESO_COMITEs", foreignKey: "TIPO_GENERACION"});
  SIG_PROPUESTA_ITEM_DETALLE.belongsTo(SIG_PROPUESTA_ITEM, { as: "ANO_EJE_SIG_PROPUESTA_ITEM", foreignKey: "ANO_EJE"});
  SIG_PROPUESTA_ITEM.hasMany(SIG_PROPUESTA_ITEM_DETALLE, { as: "SIG_PROPUESTA_ITEM_DETALLEs", foreignKey: "ANO_EJE"});
  SIG_PROPUESTA_ITEM_DETALLE.belongsTo(SIG_PROPUESTA_ITEM, { as: "CONVOCATORIA_SIG_PROPUESTA_ITEM", foreignKey: "CONVOCATORIA"});
  SIG_PROPUESTA_ITEM.hasMany(SIG_PROPUESTA_ITEM_DETALLE, { as: "CONVOCATORIA_SIG_PROPUESTA_ITEM_DETALLEs", foreignKey: "CONVOCATORIA"});
  SIG_PROPUESTA_ITEM_DETALLE.belongsTo(SIG_PROPUESTA_ITEM, { as: "NRO_ITEM_SIG_PROPUESTA_ITEM", foreignKey: "NRO_ITEM"});
  SIG_PROPUESTA_ITEM.hasMany(SIG_PROPUESTA_ITEM_DETALLE, { as: "NRO_ITEM_SIG_PROPUESTA_ITEM_DETALLEs", foreignKey: "NRO_ITEM"});
  SIG_PROPUESTA_ITEM_DETALLE.belongsTo(SIG_PROPUESTA_ITEM, { as: "NRO_LOTE_SIG_PROPUESTA_ITEM", foreignKey: "NRO_LOTE"});
  SIG_PROPUESTA_ITEM.hasMany(SIG_PROPUESTA_ITEM_DETALLE, { as: "NRO_LOTE_SIG_PROPUESTA_ITEM_DETALLEs", foreignKey: "NRO_LOTE"});
  SIG_PROPUESTA_ITEM_DETALLE.belongsTo(SIG_PROPUESTA_ITEM, { as: "NRO_PROPUESTA_SIG_PROPUESTA_ITEM", foreignKey: "NRO_PROPUESTA"});
  SIG_PROPUESTA_ITEM.hasMany(SIG_PROPUESTA_ITEM_DETALLE, { as: "NRO_PROPUESTA_SIG_PROPUESTA_ITEM_DETALLEs", foreignKey: "NRO_PROPUESTA"});
  SIG_PROPUESTA_ITEM_DETALLE.belongsTo(SIG_PROPUESTA_ITEM, { as: "PROCESO_SIG_PROPUESTA_ITEM", foreignKey: "PROCESO"});
  SIG_PROPUESTA_ITEM.hasMany(SIG_PROPUESTA_ITEM_DETALLE, { as: "PROCESO_SIG_PROPUESTA_ITEM_DETALLEs", foreignKey: "PROCESO"});
  SIG_PROPUESTA_ITEM_DETALLE.belongsTo(SIG_PROPUESTA_ITEM, { as: "PROVEEDOR_SIG_PROPUESTA_ITEM", foreignKey: "PROVEEDOR"});
  SIG_PROPUESTA_ITEM.hasMany(SIG_PROPUESTA_ITEM_DETALLE, { as: "PROVEEDOR_SIG_PROPUESTA_ITEM_DETALLEs", foreignKey: "PROVEEDOR"});
  SIG_PROPUESTA_ITEM_DETALLE.belongsTo(SIG_PROPUESTA_ITEM, { as: "SEC_CONVOCATORIA_SIG_PROPUESTA_ITEM", foreignKey: "SEC_CONVOCATORIA"});
  SIG_PROPUESTA_ITEM.hasMany(SIG_PROPUESTA_ITEM_DETALLE, { as: "SEC_CONVOCATORIA_SIG_PROPUESTA_ITEM_DETALLEs", foreignKey: "SEC_CONVOCATORIA"});
  SIG_PROPUESTA_ITEM_DETALLE.belongsTo(SIG_PROPUESTA_ITEM, { as: "SEC_EJEC_SIG_PROPUESTA_ITEM", foreignKey: "SEC_EJEC"});
  SIG_PROPUESTA_ITEM.hasMany(SIG_PROPUESTA_ITEM_DETALLE, { as: "SEC_EJEC_SIG_PROPUESTA_ITEM_DETALLEs", foreignKey: "SEC_EJEC"});
  SIG_PROPUESTA_ITEM_DETALLE.belongsTo(SIG_PROPUESTA_ITEM, { as: "SEC_PROCESO_SIG_PROPUESTA_ITEM", foreignKey: "SEC_PROCESO"});
  SIG_PROPUESTA_ITEM.hasMany(SIG_PROPUESTA_ITEM_DETALLE, { as: "SEC_PROCESO_SIG_PROPUESTA_ITEM_DETALLEs", foreignKey: "SEC_PROCESO"});
  SIG_PROPUESTA_ITEM_DETALLE.belongsTo(SIG_PROPUESTA_ITEM, { as: "TIPO_GENERACION_SIG_PROPUESTA_ITEM", foreignKey: "TIPO_GENERACION"});
  SIG_PROPUESTA_ITEM.hasMany(SIG_PROPUESTA_ITEM_DETALLE, { as: "TIPO_GENERACION_SIG_PROPUESTA_ITEM_DETALLEs", foreignKey: "TIPO_GENERACION"});
  SIG_PROPUESTA_ITEM.belongsTo(SIG_PROPUESTA_LOTE, { as: "SEC_EJEC_SIG_PROPUESTA_LOTE", foreignKey: "SEC_EJEC"});
  SIG_PROPUESTA_LOTE.hasMany(SIG_PROPUESTA_ITEM, { as: "SIG_PROPUESTA_ITEMs", foreignKey: "SEC_EJEC"});
  SIG_PROPUESTA_ITEM.belongsTo(SIG_PROPUESTA_LOTE, { as: "ANO_EJE_SIG_PROPUESTA_LOTE", foreignKey: "ANO_EJE"});
  SIG_PROPUESTA_LOTE.hasMany(SIG_PROPUESTA_ITEM, { as: "ANO_EJE_SIG_PROPUESTA_ITEMs", foreignKey: "ANO_EJE"});
  SIG_PROPUESTA_ITEM.belongsTo(SIG_PROPUESTA_LOTE, { as: "CONVOCATORIA_SIG_PROPUESTA_LOTE", foreignKey: "CONVOCATORIA"});
  SIG_PROPUESTA_LOTE.hasMany(SIG_PROPUESTA_ITEM, { as: "CONVOCATORIA_SIG_PROPUESTA_ITEMs", foreignKey: "CONVOCATORIA"});
  SIG_PROPUESTA_ITEM.belongsTo(SIG_PROPUESTA_LOTE, { as: "PROCESO_SIG_PROPUESTA_LOTE", foreignKey: "PROCESO"});
  SIG_PROPUESTA_LOTE.hasMany(SIG_PROPUESTA_ITEM, { as: "PROCESO_SIG_PROPUESTA_ITEMs", foreignKey: "PROCESO"});
  SIG_PROPUESTA_ITEM.belongsTo(SIG_PROPUESTA_LOTE, { as: "SEC_PROCESO_SIG_PROPUESTA_LOTE", foreignKey: "SEC_PROCESO"});
  SIG_PROPUESTA_LOTE.hasMany(SIG_PROPUESTA_ITEM, { as: "SEC_PROCESO_SIG_PROPUESTA_ITEMs", foreignKey: "SEC_PROCESO"});
  SIG_PROPUESTA_ITEM.belongsTo(SIG_PROPUESTA_LOTE, { as: "TIPO_GENERACION_SIG_PROPUESTA_LOTE", foreignKey: "TIPO_GENERACION"});
  SIG_PROPUESTA_LOTE.hasMany(SIG_PROPUESTA_ITEM, { as: "TIPO_GENERACION_SIG_PROPUESTA_ITEMs", foreignKey: "TIPO_GENERACION"});
  SIG_PROPUESTA_ITEM.belongsTo(SIG_PROPUESTA_LOTE, { as: "NRO_LOTE_SIG_PROPUESTA_LOTE", foreignKey: "NRO_LOTE"});
  SIG_PROPUESTA_LOTE.hasMany(SIG_PROPUESTA_ITEM, { as: "NRO_LOTE_SIG_PROPUESTA_ITEMs", foreignKey: "NRO_LOTE"});
  SIG_PROPUESTA_ITEM.belongsTo(SIG_PROPUESTA_LOTE, { as: "NRO_PROPUESTA_SIG_PROPUESTA_LOTE", foreignKey: "NRO_PROPUESTA"});
  SIG_PROPUESTA_LOTE.hasMany(SIG_PROPUESTA_ITEM, { as: "NRO_PROPUESTA_SIG_PROPUESTA_ITEMs", foreignKey: "NRO_PROPUESTA"});
  SIG_PROPUESTA_ITEM.belongsTo(SIG_PROPUESTA_LOTE, { as: "PROVEEDOR_SIG_PROPUESTA_LOTE", foreignKey: "PROVEEDOR"});
  SIG_PROPUESTA_LOTE.hasMany(SIG_PROPUESTA_ITEM, { as: "PROVEEDOR_SIG_PROPUESTA_ITEMs", foreignKey: "PROVEEDOR"});
  SIG_PROPUESTA_ITEM.belongsTo(SIG_PROPUESTA_LOTE, { as: "SEC_CONVOCATORIA_SIG_PROPUESTA_LOTE", foreignKey: "SEC_CONVOCATORIA"});
  SIG_PROPUESTA_LOTE.hasMany(SIG_PROPUESTA_ITEM, { as: "SEC_CONVOCATORIA_SIG_PROPUESTA_ITEMs", foreignKey: "SEC_CONVOCATORIA"});
  SIG_PROPUESTA_LOTE_FACTOR.belongsTo(SIG_PROPUESTA_LOTE, { as: "ANO_EJE_SIG_PROPUESTA_LOTE", foreignKey: "ANO_EJE"});
  SIG_PROPUESTA_LOTE.hasMany(SIG_PROPUESTA_LOTE_FACTOR, { as: "SIG_PROPUESTA_LOTE_FACTORs", foreignKey: "ANO_EJE"});
  SIG_PROPUESTA_LOTE_FACTOR.belongsTo(SIG_PROPUESTA_LOTE, { as: "CONVOCATORIA_SIG_PROPUESTA_LOTE", foreignKey: "CONVOCATORIA"});
  SIG_PROPUESTA_LOTE.hasMany(SIG_PROPUESTA_LOTE_FACTOR, { as: "CONVOCATORIA_SIG_PROPUESTA_LOTE_FACTORs", foreignKey: "CONVOCATORIA"});
  SIG_PROPUESTA_LOTE_FACTOR.belongsTo(SIG_PROPUESTA_LOTE, { as: "NRO_LOTE_SIG_PROPUESTA_LOTE", foreignKey: "NRO_LOTE"});
  SIG_PROPUESTA_LOTE.hasMany(SIG_PROPUESTA_LOTE_FACTOR, { as: "NRO_LOTE_SIG_PROPUESTA_LOTE_FACTORs", foreignKey: "NRO_LOTE"});
  SIG_PROPUESTA_LOTE_FACTOR.belongsTo(SIG_PROPUESTA_LOTE, { as: "NRO_PROPUESTA_SIG_PROPUESTA_LOTE", foreignKey: "NRO_PROPUESTA"});
  SIG_PROPUESTA_LOTE.hasMany(SIG_PROPUESTA_LOTE_FACTOR, { as: "NRO_PROPUESTA_SIG_PROPUESTA_LOTE_FACTORs", foreignKey: "NRO_PROPUESTA"});
  SIG_PROPUESTA_LOTE_FACTOR.belongsTo(SIG_PROPUESTA_LOTE, { as: "PROCESO_SIG_PROPUESTA_LOTE", foreignKey: "PROCESO"});
  SIG_PROPUESTA_LOTE.hasMany(SIG_PROPUESTA_LOTE_FACTOR, { as: "PROCESO_SIG_PROPUESTA_LOTE_FACTORs", foreignKey: "PROCESO"});
  SIG_PROPUESTA_LOTE_FACTOR.belongsTo(SIG_PROPUESTA_LOTE, { as: "PROVEEDOR_SIG_PROPUESTA_LOTE", foreignKey: "PROVEEDOR"});
  SIG_PROPUESTA_LOTE.hasMany(SIG_PROPUESTA_LOTE_FACTOR, { as: "PROVEEDOR_SIG_PROPUESTA_LOTE_FACTORs", foreignKey: "PROVEEDOR"});
  SIG_PROPUESTA_LOTE_FACTOR.belongsTo(SIG_PROPUESTA_LOTE, { as: "SEC_CONVOCATORIA_SIG_PROPUESTA_LOTE", foreignKey: "SEC_CONVOCATORIA"});
  SIG_PROPUESTA_LOTE.hasMany(SIG_PROPUESTA_LOTE_FACTOR, { as: "SEC_CONVOCATORIA_SIG_PROPUESTA_LOTE_FACTORs", foreignKey: "SEC_CONVOCATORIA"});
  SIG_PROPUESTA_LOTE_FACTOR.belongsTo(SIG_PROPUESTA_LOTE, { as: "SEC_EJEC_SIG_PROPUESTA_LOTE", foreignKey: "SEC_EJEC"});
  SIG_PROPUESTA_LOTE.hasMany(SIG_PROPUESTA_LOTE_FACTOR, { as: "SEC_EJEC_SIG_PROPUESTA_LOTE_FACTORs", foreignKey: "SEC_EJEC"});
  SIG_PROPUESTA_LOTE_FACTOR.belongsTo(SIG_PROPUESTA_LOTE, { as: "SEC_PROCESO_SIG_PROPUESTA_LOTE", foreignKey: "SEC_PROCESO"});
  SIG_PROPUESTA_LOTE.hasMany(SIG_PROPUESTA_LOTE_FACTOR, { as: "SEC_PROCESO_SIG_PROPUESTA_LOTE_FACTORs", foreignKey: "SEC_PROCESO"});
  SIG_PROPUESTA_LOTE_FACTOR.belongsTo(SIG_PROPUESTA_LOTE, { as: "TIPO_GENERACION_SIG_PROPUESTA_LOTE", foreignKey: "TIPO_GENERACION"});
  SIG_PROPUESTA_LOTE.hasMany(SIG_PROPUESTA_LOTE_FACTOR, { as: "TIPO_GENERACION_SIG_PROPUESTA_LOTE_FACTORs", foreignKey: "TIPO_GENERACION"});
  SIG_PROPUESTA_LOTE.belongsTo(SIG_PROPUESTA_PROVEEDOR, { as: "ANO_EJE_SIG_PROPUESTA_PROVEEDOR", foreignKey: "ANO_EJE"});
  SIG_PROPUESTA_PROVEEDOR.hasMany(SIG_PROPUESTA_LOTE, { as: "SIG_PROPUESTA_LOTEs", foreignKey: "ANO_EJE"});
  SIG_PROPUESTA_LOTE.belongsTo(SIG_PROPUESTA_PROVEEDOR, { as: "CONVOCATORIA_SIG_PROPUESTA_PROVEEDOR", foreignKey: "CONVOCATORIA"});
  SIG_PROPUESTA_PROVEEDOR.hasMany(SIG_PROPUESTA_LOTE, { as: "CONVOCATORIA_SIG_PROPUESTA_LOTEs", foreignKey: "CONVOCATORIA"});
  SIG_PROPUESTA_LOTE.belongsTo(SIG_PROPUESTA_PROVEEDOR, { as: "PROCESO_SIG_PROPUESTA_PROVEEDOR", foreignKey: "PROCESO"});
  SIG_PROPUESTA_PROVEEDOR.hasMany(SIG_PROPUESTA_LOTE, { as: "PROCESO_SIG_PROPUESTA_LOTEs", foreignKey: "PROCESO"});
  SIG_PROPUESTA_LOTE.belongsTo(SIG_PROPUESTA_PROVEEDOR, { as: "SEC_EJEC_SIG_PROPUESTA_PROVEEDOR", foreignKey: "SEC_EJEC"});
  SIG_PROPUESTA_PROVEEDOR.hasMany(SIG_PROPUESTA_LOTE, { as: "SEC_EJEC_SIG_PROPUESTA_LOTEs", foreignKey: "SEC_EJEC"});
  SIG_PROPUESTA_LOTE.belongsTo(SIG_PROPUESTA_PROVEEDOR, { as: "SEC_PROCESO_SIG_PROPUESTA_PROVEEDOR", foreignKey: "SEC_PROCESO"});
  SIG_PROPUESTA_PROVEEDOR.hasMany(SIG_PROPUESTA_LOTE, { as: "SEC_PROCESO_SIG_PROPUESTA_LOTEs", foreignKey: "SEC_PROCESO"});
  SIG_PROPUESTA_LOTE.belongsTo(SIG_PROPUESTA_PROVEEDOR, { as: "TIPO_GENERACION_SIG_PROPUESTA_PROVEEDOR", foreignKey: "TIPO_GENERACION"});
  SIG_PROPUESTA_PROVEEDOR.hasMany(SIG_PROPUESTA_LOTE, { as: "TIPO_GENERACION_SIG_PROPUESTA_LOTEs", foreignKey: "TIPO_GENERACION"});
  SIG_PROPUESTA_LOTE.belongsTo(SIG_PROPUESTA_PROVEEDOR, { as: "PROVEEDOR_SIG_PROPUESTA_PROVEEDOR", foreignKey: "PROVEEDOR"});
  SIG_PROPUESTA_PROVEEDOR.hasMany(SIG_PROPUESTA_LOTE, { as: "PROVEEDOR_SIG_PROPUESTA_LOTEs", foreignKey: "PROVEEDOR"});
  SIG_PROPUESTA_REQUISITOS.belongsTo(SIG_PROPUESTA_PROVEEDOR, { as: "ANO_EJE_SIG_PROPUESTA_PROVEEDOR", foreignKey: "ANO_EJE"});
  SIG_PROPUESTA_PROVEEDOR.hasMany(SIG_PROPUESTA_REQUISITOS, { as: "SIG_PROPUESTA_REQUISITOs", foreignKey: "ANO_EJE"});
  SIG_PROPUESTA_REQUISITOS.belongsTo(SIG_PROPUESTA_PROVEEDOR, { as: "CONVOCATORIA_SIG_PROPUESTA_PROVEEDOR", foreignKey: "CONVOCATORIA"});
  SIG_PROPUESTA_PROVEEDOR.hasMany(SIG_PROPUESTA_REQUISITOS, { as: "CONVOCATORIA_SIG_PROPUESTA_REQUISITOs", foreignKey: "CONVOCATORIA"});
  SIG_PROPUESTA_REQUISITOS.belongsTo(SIG_PROPUESTA_PROVEEDOR, { as: "PROCESO_SIG_PROPUESTA_PROVEEDOR", foreignKey: "PROCESO"});
  SIG_PROPUESTA_PROVEEDOR.hasMany(SIG_PROPUESTA_REQUISITOS, { as: "PROCESO_SIG_PROPUESTA_REQUISITOs", foreignKey: "PROCESO"});
  SIG_PROPUESTA_REQUISITOS.belongsTo(SIG_PROPUESTA_PROVEEDOR, { as: "SEC_EJEC_SIG_PROPUESTA_PROVEEDOR", foreignKey: "SEC_EJEC"});
  SIG_PROPUESTA_PROVEEDOR.hasMany(SIG_PROPUESTA_REQUISITOS, { as: "SEC_EJEC_SIG_PROPUESTA_REQUISITOs", foreignKey: "SEC_EJEC"});
  SIG_PROPUESTA_REQUISITOS.belongsTo(SIG_PROPUESTA_PROVEEDOR, { as: "SEC_PROCESO_SIG_PROPUESTA_PROVEEDOR", foreignKey: "SEC_PROCESO"});
  SIG_PROPUESTA_PROVEEDOR.hasMany(SIG_PROPUESTA_REQUISITOS, { as: "SEC_PROCESO_SIG_PROPUESTA_REQUISITOs", foreignKey: "SEC_PROCESO"});
  SIG_PROPUESTA_REQUISITOS.belongsTo(SIG_PROPUESTA_PROVEEDOR, { as: "TIPO_GENERACION_SIG_PROPUESTA_PROVEEDOR", foreignKey: "TIPO_GENERACION"});
  SIG_PROPUESTA_PROVEEDOR.hasMany(SIG_PROPUESTA_REQUISITOS, { as: "TIPO_GENERACION_SIG_PROPUESTA_REQUISITOs", foreignKey: "TIPO_GENERACION"});
  SIG_PROPUESTA_REQUISITOS.belongsTo(SIG_PROPUESTA_PROVEEDOR, { as: "PROVEEDOR_SIG_PROPUESTA_PROVEEDOR", foreignKey: "PROVEEDOR"});
  SIG_PROPUESTA_PROVEEDOR.hasMany(SIG_PROPUESTA_REQUISITOS, { as: "PROVEEDOR_SIG_PROPUESTA_REQUISITOs", foreignKey: "PROVEEDOR"});
  SIG_PROY_DETALLE_BSERV_CUADRO.belongsTo(SIG_PROY_CUADRO_ADQUISICION, { as: "ANO_EJE_SIG_PROY_CUADRO_ADQUISICION", foreignKey: "ANO_EJE"});
  SIG_PROY_CUADRO_ADQUISICION.hasMany(SIG_PROY_DETALLE_BSERV_CUADRO, { as: "SIG_PROY_DETALLE_BSERV_CUADROs", foreignKey: "ANO_EJE"});
  SIG_PROY_DETALLE_BSERV_CUADRO.belongsTo(SIG_PROY_CUADRO_ADQUISICION, { as: "SEC_CUADRO_SIG_PROY_CUADRO_ADQUISICION", foreignKey: "SEC_CUADRO"});
  SIG_PROY_CUADRO_ADQUISICION.hasMany(SIG_PROY_DETALLE_BSERV_CUADRO, { as: "SEC_CUADRO_SIG_PROY_DETALLE_BSERV_CUADROs", foreignKey: "SEC_CUADRO"});
  SIG_PROY_DETALLE_BSERV_CUADRO.belongsTo(SIG_PROY_CUADRO_ADQUISICION, { as: "SEC_EJEC_SIG_PROY_CUADRO_ADQUISICION", foreignKey: "SEC_EJEC"});
  SIG_PROY_CUADRO_ADQUISICION.hasMany(SIG_PROY_DETALLE_BSERV_CUADRO, { as: "SEC_EJEC_SIG_PROY_DETALLE_BSERV_CUADROs", foreignKey: "SEC_EJEC"});
  SIG_PROY_DETALLE_BSERV_CUADRO.belongsTo(SIG_PROY_CUADRO_ADQUISICION, { as: "TIPO_BIEN_SIG_PROY_CUADRO_ADQUISICION", foreignKey: "TIPO_BIEN"});
  SIG_PROY_CUADRO_ADQUISICION.hasMany(SIG_PROY_DETALLE_BSERV_CUADRO, { as: "TIPO_BIEN_SIG_PROY_DETALLE_BSERV_CUADROs", foreignKey: "TIPO_BIEN"});
  SIG_PROY_DETALLE_METAS_CUADRO.belongsTo(SIG_PROY_DETALLE_BSERV_CUADRO, { as: "ANO_EJE_SIG_PROY_DETALLE_BSERV_CUADRO", foreignKey: "ANO_EJE"});
  SIG_PROY_DETALLE_BSERV_CUADRO.hasMany(SIG_PROY_DETALLE_METAS_CUADRO, { as: "SIG_PROY_DETALLE_METAS_CUADROs", foreignKey: "ANO_EJE"});
  SIG_PROY_DETALLE_METAS_CUADRO.belongsTo(SIG_PROY_DETALLE_BSERV_CUADRO, { as: "SEC_CUADRO_SIG_PROY_DETALLE_BSERV_CUADRO", foreignKey: "SEC_CUADRO"});
  SIG_PROY_DETALLE_BSERV_CUADRO.hasMany(SIG_PROY_DETALLE_METAS_CUADRO, { as: "SEC_CUADRO_SIG_PROY_DETALLE_METAS_CUADROs", foreignKey: "SEC_CUADRO"});
  SIG_PROY_DETALLE_METAS_CUADRO.belongsTo(SIG_PROY_DETALLE_BSERV_CUADRO, { as: "sec_ejec_SIG_PROY_DETALLE_BSERV_CUADRO", foreignKey: "sec_ejec"});
  SIG_PROY_DETALLE_BSERV_CUADRO.hasMany(SIG_PROY_DETALLE_METAS_CUADRO, { as: "sec_ejec_SIG_PROY_DETALLE_METAS_CUADROs", foreignKey: "sec_ejec"});
  SIG_PROY_DETALLE_METAS_CUADRO.belongsTo(SIG_PROY_DETALLE_BSERV_CUADRO, { as: "SECUENCIA_SIG_PROY_DETALLE_BSERV_CUADRO", foreignKey: "SECUENCIA"});
  SIG_PROY_DETALLE_BSERV_CUADRO.hasMany(SIG_PROY_DETALLE_METAS_CUADRO, { as: "SECUENCIA_SIG_PROY_DETALLE_METAS_CUADROs", foreignKey: "SECUENCIA"});
  SIG_PROY_DETALLE_METAS_CUADRO.belongsTo(SIG_PROY_DETALLE_BSERV_CUADRO, { as: "TIPO_BIEN_SIG_PROY_DETALLE_BSERV_CUADRO", foreignKey: "TIPO_BIEN"});
  SIG_PROY_DETALLE_BSERV_CUADRO.hasMany(SIG_PROY_DETALLE_METAS_CUADRO, { as: "TIPO_BIEN_SIG_PROY_DETALLE_METAS_CUADROs", foreignKey: "TIPO_BIEN"});
  SIG_PROY_DEPEN_META_CUADRO.belongsTo(SIG_PROY_DETALLE_METAS_CUADRO, { as: "ANO_EJE_SIG_PROY_DETALLE_METAS_CUADRO", foreignKey: "ANO_EJE"});
  SIG_PROY_DETALLE_METAS_CUADRO.hasMany(SIG_PROY_DEPEN_META_CUADRO, { as: "SIG_PROY_DEPEN_META_CUADROs", foreignKey: "ANO_EJE"});
  SIG_PROY_DEPEN_META_CUADRO.belongsTo(SIG_PROY_DETALLE_METAS_CUADRO, { as: "SEC_CUADRO_SIG_PROY_DETALLE_METAS_CUADRO", foreignKey: "SEC_CUADRO"});
  SIG_PROY_DETALLE_METAS_CUADRO.hasMany(SIG_PROY_DEPEN_META_CUADRO, { as: "SEC_CUADRO_SIG_PROY_DEPEN_META_CUADROs", foreignKey: "SEC_CUADRO"});
  SIG_PROY_DEPEN_META_CUADRO.belongsTo(SIG_PROY_DETALLE_METAS_CUADRO, { as: "SEC_EJEC_SIG_PROY_DETALLE_METAS_CUADRO", foreignKey: "SEC_EJEC"});
  SIG_PROY_DETALLE_METAS_CUADRO.hasMany(SIG_PROY_DEPEN_META_CUADRO, { as: "SEC_EJEC_SIG_PROY_DEPEN_META_CUADROs", foreignKey: "SEC_EJEC"});
  SIG_PROY_DEPEN_META_CUADRO.belongsTo(SIG_PROY_DETALLE_METAS_CUADRO, { as: "SEC_META_SIG_PROY_DETALLE_METAS_CUADRO", foreignKey: "SEC_META"});
  SIG_PROY_DETALLE_METAS_CUADRO.hasMany(SIG_PROY_DEPEN_META_CUADRO, { as: "SEC_META_SIG_PROY_DEPEN_META_CUADROs", foreignKey: "SEC_META"});
  SIG_PROY_DEPEN_META_CUADRO.belongsTo(SIG_PROY_DETALLE_METAS_CUADRO, { as: "SECUENCIA_SIG_PROY_DETALLE_METAS_CUADRO", foreignKey: "SECUENCIA"});
  SIG_PROY_DETALLE_METAS_CUADRO.hasMany(SIG_PROY_DEPEN_META_CUADRO, { as: "SECUENCIA_SIG_PROY_DEPEN_META_CUADROs", foreignKey: "SECUENCIA"});
  SIG_PROY_DEPEN_META_CUADRO.belongsTo(SIG_PROY_DETALLE_METAS_CUADRO, { as: "TIPO_BIEN_SIG_PROY_DETALLE_METAS_CUADRO", foreignKey: "TIPO_BIEN"});
  SIG_PROY_DETALLE_METAS_CUADRO.hasMany(SIG_PROY_DEPEN_META_CUADRO, { as: "TIPO_BIEN_SIG_PROY_DEPEN_META_CUADROs", foreignKey: "TIPO_BIEN"});
  SIG_PROY_DOC_RENDIDO.belongsTo(SIG_PROY_PLANILLA_PASAJE, { as: "ANO_EJEC2_SIG_PROY_PLANILLA_PASAJE", foreignKey: "ANO_EJEC2"});
  SIG_PROY_PLANILLA_PASAJE.hasMany(SIG_PROY_DOC_RENDIDO, { as: "SIG_PROY_DOC_RENDIDOs", foreignKey: "ANO_EJEC2"});
  SIG_PROY_DOC_RENDIDO.belongsTo(SIG_PROY_PLANILLA_PASAJE, { as: "SEC_EJEC2_SIG_PROY_PLANILLA_PASAJE", foreignKey: "SEC_EJEC2"});
  SIG_PROY_PLANILLA_PASAJE.hasMany(SIG_PROY_DOC_RENDIDO, { as: "SEC_EJEC2_SIG_PROY_DOC_RENDIDOs", foreignKey: "SEC_EJEC2"});
  SIG_PROY_DOC_RENDIDO.belongsTo(SIG_PROY_PLANILLA_PASAJE, { as: "SEC_ITEM_PLA_PAS_SIG_PROY_PLANILLA_PASAJE", foreignKey: "SEC_ITEM_PLA_PAS"});
  SIG_PROY_PLANILLA_PASAJE.hasMany(SIG_PROY_DOC_RENDIDO, { as: "SEC_ITEM_PLA_PAS_SIG_PROY_DOC_RENDIDOs", foreignKey: "SEC_ITEM_PLA_PAS"});
  SIG_PROY_PLANILLA_VIATICO.belongsTo(SIG_PROY_PLANILLA_PASAJE, { as: "ANO_EJEC_SIG_PROY_PLANILLA_PASAJE", foreignKey: "ANO_EJEC"});
  SIG_PROY_PLANILLA_PASAJE.hasMany(SIG_PROY_PLANILLA_VIATICO, { as: "SIG_PROY_PLANILLA_VIATICOs", foreignKey: "ANO_EJEC"});
  SIG_PROY_PLANILLA_VIATICO.belongsTo(SIG_PROY_PLANILLA_PASAJE, { as: "SEC_EJEC_SIG_PROY_PLANILLA_PASAJE", foreignKey: "SEC_EJEC"});
  SIG_PROY_PLANILLA_PASAJE.hasMany(SIG_PROY_PLANILLA_VIATICO, { as: "SEC_EJEC_SIG_PROY_PLANILLA_VIATICOs", foreignKey: "SEC_EJEC"});
  SIG_PROY_PLANILLA_VIATICO.belongsTo(SIG_PROY_PLANILLA_PASAJE, { as: "SEC_ITEM_PLA_PAS_SIG_PROY_PLANILLA_PASAJE", foreignKey: "SEC_ITEM_PLA_PAS"});
  SIG_PROY_PLANILLA_PASAJE.hasMany(SIG_PROY_PLANILLA_VIATICO, { as: "SEC_ITEM_PLA_PAS_SIG_PROY_PLANILLA_VIATICOs", foreignKey: "SEC_ITEM_PLA_PAS"});
  SIG_PROY_PLAN_PAS_DESTINO.belongsTo(SIG_PROY_PLANILLA_PASAJE, { as: "ANO_EJEC_SIG_PROY_PLANILLA_PASAJE", foreignKey: "ANO_EJEC"});
  SIG_PROY_PLANILLA_PASAJE.hasMany(SIG_PROY_PLAN_PAS_DESTINO, { as: "SIG_PROY_PLAN_PAS_DESTINOs", foreignKey: "ANO_EJEC"});
  SIG_PROY_PLAN_PAS_DESTINO.belongsTo(SIG_PROY_PLANILLA_PASAJE, { as: "SEC_EJEC_SIG_PROY_PLANILLA_PASAJE", foreignKey: "SEC_EJEC"});
  SIG_PROY_PLANILLA_PASAJE.hasMany(SIG_PROY_PLAN_PAS_DESTINO, { as: "SEC_EJEC_SIG_PROY_PLAN_PAS_DESTINOs", foreignKey: "SEC_EJEC"});
  SIG_PROY_PLAN_PAS_DESTINO.belongsTo(SIG_PROY_PLANILLA_PASAJE, { as: "SEC_ITEM_PLA_PAS_SIG_PROY_PLANILLA_PASAJE", foreignKey: "SEC_ITEM_PLA_PAS"});
  SIG_PROY_PLANILLA_PASAJE.hasMany(SIG_PROY_PLAN_PAS_DESTINO, { as: "SEC_ITEM_PLA_PAS_SIG_PROY_PLAN_PAS_DESTINOs", foreignKey: "SEC_ITEM_PLA_PAS"});
  SIG_PROY_PLAN_PAS_PPTA.belongsTo(SIG_PROY_PLANILLA_PASAJE, { as: "ANO_EJEC_SIG_PROY_PLANILLA_PASAJE", foreignKey: "ANO_EJEC"});
  SIG_PROY_PLANILLA_PASAJE.hasMany(SIG_PROY_PLAN_PAS_PPTA, { as: "SIG_PROY_PLAN_PAS_PPTa", foreignKey: "ANO_EJEC"});
  SIG_PROY_PLAN_PAS_PPTA.belongsTo(SIG_PROY_PLANILLA_PASAJE, { as: "SEC_EJEC_SIG_PROY_PLANILLA_PASAJE", foreignKey: "SEC_EJEC"});
  SIG_PROY_PLANILLA_PASAJE.hasMany(SIG_PROY_PLAN_PAS_PPTA, { as: "SEC_EJEC_SIG_PROY_PLAN_PAS_PPTa", foreignKey: "SEC_EJEC"});
  SIG_PROY_PLAN_PAS_PPTA.belongsTo(SIG_PROY_PLANILLA_PASAJE, { as: "SEC_ITEM_PLA_PAS_SIG_PROY_PLANILLA_PASAJE", foreignKey: "SEC_ITEM_PLA_PAS"});
  SIG_PROY_PLANILLA_PASAJE.hasMany(SIG_PROY_PLAN_PAS_PPTA, { as: "SEC_ITEM_PLA_PAS_SIG_PROY_PLAN_PAS_PPTa", foreignKey: "SEC_ITEM_PLA_PAS"});
  SIG_PROY_PLAN_PAS_RUTA.belongsTo(SIG_PROY_PLAN_PAS_DESTINO, { as: "ANO_EJEC_SIG_PROY_PLAN_PAS_DESTINO", foreignKey: "ANO_EJEC"});
  SIG_PROY_PLAN_PAS_DESTINO.hasMany(SIG_PROY_PLAN_PAS_RUTA, { as: "SIG_PROY_PLAN_PAS_RUTa", foreignKey: "ANO_EJEC"});
  SIG_PROY_PLAN_PAS_RUTA.belongsTo(SIG_PROY_PLAN_PAS_DESTINO, { as: "SEC_EJEC_SIG_PROY_PLAN_PAS_DESTINO", foreignKey: "SEC_EJEC"});
  SIG_PROY_PLAN_PAS_DESTINO.hasMany(SIG_PROY_PLAN_PAS_RUTA, { as: "SEC_EJEC_SIG_PROY_PLAN_PAS_RUTa", foreignKey: "SEC_EJEC"});
  SIG_PROY_PLAN_PAS_RUTA.belongsTo(SIG_PROY_PLAN_PAS_DESTINO, { as: "SEC_ITEM_DESTINO_SIG_PROY_PLAN_PAS_DESTINO", foreignKey: "SEC_ITEM_DESTINO"});
  SIG_PROY_PLAN_PAS_DESTINO.hasMany(SIG_PROY_PLAN_PAS_RUTA, { as: "SEC_ITEM_DESTINO_SIG_PROY_PLAN_PAS_RUTa", foreignKey: "SEC_ITEM_DESTINO"});
  SIG_PROY_PLAN_PAS_RUTA.belongsTo(SIG_PROY_PLAN_PAS_DESTINO, { as: "SEC_ITEM_PLA_PAS_SIG_PROY_PLAN_PAS_DESTINO", foreignKey: "SEC_ITEM_PLA_PAS"});
  SIG_PROY_PLAN_PAS_DESTINO.hasMany(SIG_PROY_PLAN_PAS_RUTA, { as: "SEC_ITEM_PLA_PAS_SIG_PROY_PLAN_PAS_RUTa", foreignKey: "SEC_ITEM_PLA_PAS"});
  SIG_PROY_PLAN_PAS_RUTA.belongsTo(SIG_PROY_PLAN_PAS_DESTINO, { as: "TIPO_OPCION_SIG_PROY_PLAN_PAS_DESTINO", foreignKey: "TIPO_OPCION"});
  SIG_PROY_PLAN_PAS_DESTINO.hasMany(SIG_PROY_PLAN_PAS_RUTA, { as: "TIPO_OPCION_SIG_PROY_PLAN_PAS_RUTa", foreignKey: "TIPO_OPCION"});
  SIG_REQ_ENTRADA_ALMACEN_DET.belongsTo(SIG_REQ_ENTRADA_ALMACEN, { as: "ANO_EJE_SIG_REQ_ENTRADA_ALMACEN", foreignKey: "ANO_EJE"});
  SIG_REQ_ENTRADA_ALMACEN.hasMany(SIG_REQ_ENTRADA_ALMACEN_DET, { as: "SIG_REQ_ENTRADA_ALMACEN_DETs", foreignKey: "ANO_EJE"});
  SIG_REQ_ENTRADA_ALMACEN_DET.belongsTo(SIG_REQ_ENTRADA_ALMACEN, { as: "NRO_REQUERIM_SIG_REQ_ENTRADA_ALMACEN", foreignKey: "NRO_REQUERIM"});
  SIG_REQ_ENTRADA_ALMACEN.hasMany(SIG_REQ_ENTRADA_ALMACEN_DET, { as: "NRO_REQUERIM_SIG_REQ_ENTRADA_ALMACEN_DETs", foreignKey: "NRO_REQUERIM"});
  SIG_REQ_ENTRADA_ALMACEN_DET.belongsTo(SIG_REQ_ENTRADA_ALMACEN, { as: "SEC_EJEC_SIG_REQ_ENTRADA_ALMACEN", foreignKey: "SEC_EJEC"});
  SIG_REQ_ENTRADA_ALMACEN.hasMany(SIG_REQ_ENTRADA_ALMACEN_DET, { as: "SEC_EJEC_SIG_REQ_ENTRADA_ALMACEN_DETs", foreignKey: "SEC_EJEC"});
  SIG_DETALLE_ITEM_ALMACEN.belongsTo(SIG_SECUENCIA_MOV_ALMACEN, { as: "ALMACEN_SIG_SECUENCIA_MOV_ALMACEN", foreignKey: "ALMACEN"});
  SIG_SECUENCIA_MOV_ALMACEN.hasMany(SIG_DETALLE_ITEM_ALMACEN, { as: "SIG_DETALLE_ITEM_ALMACENs", foreignKey: "ALMACEN"});
  SIG_DETALLE_ITEM_ALMACEN.belongsTo(SIG_SECUENCIA_MOV_ALMACEN, { as: "ANO_EJE_SIG_SECUENCIA_MOV_ALMACEN", foreignKey: "ANO_EJE"});
  SIG_SECUENCIA_MOV_ALMACEN.hasMany(SIG_DETALLE_ITEM_ALMACEN, { as: "ANO_EJE_SIG_DETALLE_ITEM_ALMACENs", foreignKey: "ANO_EJE"});
  SIG_DETALLE_ITEM_ALMACEN.belongsTo(SIG_SECUENCIA_MOV_ALMACEN, { as: "NRO_MOVIMTO_SIG_SECUENCIA_MOV_ALMACEN", foreignKey: "NRO_MOVIMTO"});
  SIG_SECUENCIA_MOV_ALMACEN.hasMany(SIG_DETALLE_ITEM_ALMACEN, { as: "NRO_MOVIMTO_SIG_DETALLE_ITEM_ALMACENs", foreignKey: "NRO_MOVIMTO"});
  SIG_DETALLE_ITEM_ALMACEN.belongsTo(SIG_SECUENCIA_MOV_ALMACEN, { as: "SEC_ALMACEN_SIG_SECUENCIA_MOV_ALMACEN", foreignKey: "SEC_ALMACEN"});
  SIG_SECUENCIA_MOV_ALMACEN.hasMany(SIG_DETALLE_ITEM_ALMACEN, { as: "SEC_ALMACEN_SIG_DETALLE_ITEM_ALMACENs", foreignKey: "SEC_ALMACEN"});
  SIG_DETALLE_ITEM_ALMACEN.belongsTo(SIG_SECUENCIA_MOV_ALMACEN, { as: "sec_ejec_SIG_SECUENCIA_MOV_ALMACEN", foreignKey: "sec_ejec"});
  SIG_SECUENCIA_MOV_ALMACEN.hasMany(SIG_DETALLE_ITEM_ALMACEN, { as: "sec_ejec_SIG_DETALLE_ITEM_ALMACENs", foreignKey: "sec_ejec"});
  SIG_DETALLE_ITEM_ALMACEN.belongsTo(SIG_SECUENCIA_MOV_ALMACEN, { as: "SECUENCIA_SIG_SECUENCIA_MOV_ALMACEN", foreignKey: "SECUENCIA"});
  SIG_SECUENCIA_MOV_ALMACEN.hasMany(SIG_DETALLE_ITEM_ALMACEN, { as: "SECUENCIA_SIG_DETALLE_ITEM_ALMACENs", foreignKey: "SECUENCIA"});
  SIG_DETALLE_ITEM_ALMACEN.belongsTo(SIG_SECUENCIA_MOV_ALMACEN, { as: "TIPO_MOVIMTO_SIG_SECUENCIA_MOV_ALMACEN", foreignKey: "TIPO_MOVIMTO"});
  SIG_SECUENCIA_MOV_ALMACEN.hasMany(SIG_DETALLE_ITEM_ALMACEN, { as: "TIPO_MOVIMTO_SIG_DETALLE_ITEM_ALMACENs", foreignKey: "TIPO_MOVIMTO"});
  SIG_DETALLE_ITEM_ALMACEN.belongsTo(SIG_SECUENCIA_MOV_ALMACEN, { as: "TIPO_PPTO_SIG_SECUENCIA_MOV_ALMACEN", foreignKey: "TIPO_PPTO"});
  SIG_SECUENCIA_MOV_ALMACEN.hasMany(SIG_DETALLE_ITEM_ALMACEN, { as: "TIPO_PPTO_SIG_DETALLE_ITEM_ALMACENs", foreignKey: "TIPO_PPTO"});
  SIG_DETALLE_ITEM_ALMACEN.belongsTo(SIG_SECUENCIA_MOV_ALMACEN, { as: "TIPO_TRANSAC_SIG_SECUENCIA_MOV_ALMACEN", foreignKey: "TIPO_TRANSAC"});
  SIG_SECUENCIA_MOV_ALMACEN.hasMany(SIG_DETALLE_ITEM_ALMACEN, { as: "TIPO_TRANSAC_SIG_DETALLE_ITEM_ALMACENs", foreignKey: "TIPO_TRANSAC"});
  SIG_DETALLE_MOVIM_ALMACEN.belongsTo(SIG_SECUENCIA_MOV_ALMACEN, { as: "sec_ejec_SIG_SECUENCIA_MOV_ALMACEN", foreignKey: "sec_ejec"});
  SIG_SECUENCIA_MOV_ALMACEN.hasMany(SIG_DETALLE_MOVIM_ALMACEN, { as: "SIG_DETALLE_MOVIM_ALMACENs", foreignKey: "sec_ejec"});
  SIG_DETALLE_MOVIM_ALMACEN.belongsTo(SIG_SECUENCIA_MOV_ALMACEN, { as: "ANO_EJE_SIG_SECUENCIA_MOV_ALMACEN", foreignKey: "ANO_EJE"});
  SIG_SECUENCIA_MOV_ALMACEN.hasMany(SIG_DETALLE_MOVIM_ALMACEN, { as: "ANO_EJE_SIG_DETALLE_MOVIM_ALMACENs", foreignKey: "ANO_EJE"});
  SIG_DETALLE_MOVIM_ALMACEN.belongsTo(SIG_SECUENCIA_MOV_ALMACEN, { as: "ALMACEN_SIG_SECUENCIA_MOV_ALMACEN", foreignKey: "ALMACEN"});
  SIG_SECUENCIA_MOV_ALMACEN.hasMany(SIG_DETALLE_MOVIM_ALMACEN, { as: "ALMACEN_SIG_DETALLE_MOVIM_ALMACENs", foreignKey: "ALMACEN"});
  SIG_DETALLE_MOVIM_ALMACEN.belongsTo(SIG_SECUENCIA_MOV_ALMACEN, { as: "NRO_MOVIMTO_SIG_SECUENCIA_MOV_ALMACEN", foreignKey: "NRO_MOVIMTO"});
  SIG_SECUENCIA_MOV_ALMACEN.hasMany(SIG_DETALLE_MOVIM_ALMACEN, { as: "NRO_MOVIMTO_SIG_DETALLE_MOVIM_ALMACENs", foreignKey: "NRO_MOVIMTO"});
  SIG_DETALLE_MOVIM_ALMACEN.belongsTo(SIG_SECUENCIA_MOV_ALMACEN, { as: "SEC_ALMACEN_SIG_SECUENCIA_MOV_ALMACEN", foreignKey: "SEC_ALMACEN"});
  SIG_SECUENCIA_MOV_ALMACEN.hasMany(SIG_DETALLE_MOVIM_ALMACEN, { as: "SEC_ALMACEN_SIG_DETALLE_MOVIM_ALMACENs", foreignKey: "SEC_ALMACEN"});
  SIG_DETALLE_MOVIM_ALMACEN.belongsTo(SIG_SECUENCIA_MOV_ALMACEN, { as: "SECUENCIA_SIG_SECUENCIA_MOV_ALMACEN", foreignKey: "SECUENCIA"});
  SIG_SECUENCIA_MOV_ALMACEN.hasMany(SIG_DETALLE_MOVIM_ALMACEN, { as: "SECUENCIA_SIG_DETALLE_MOVIM_ALMACENs", foreignKey: "SECUENCIA"});
  SIG_DETALLE_MOVIM_ALMACEN.belongsTo(SIG_SECUENCIA_MOV_ALMACEN, { as: "TIPO_MOVIMTO_SIG_SECUENCIA_MOV_ALMACEN", foreignKey: "TIPO_MOVIMTO"});
  SIG_SECUENCIA_MOV_ALMACEN.hasMany(SIG_DETALLE_MOVIM_ALMACEN, { as: "TIPO_MOVIMTO_SIG_DETALLE_MOVIM_ALMACENs", foreignKey: "TIPO_MOVIMTO"});
  SIG_DETALLE_MOVIM_ALMACEN.belongsTo(SIG_SECUENCIA_MOV_ALMACEN, { as: "TIPO_PPTO_SIG_SECUENCIA_MOV_ALMACEN", foreignKey: "TIPO_PPTO"});
  SIG_SECUENCIA_MOV_ALMACEN.hasMany(SIG_DETALLE_MOVIM_ALMACEN, { as: "TIPO_PPTO_SIG_DETALLE_MOVIM_ALMACENs", foreignKey: "TIPO_PPTO"});
  SIG_DETALLE_MOVIM_ALMACEN.belongsTo(SIG_SECUENCIA_MOV_ALMACEN, { as: "TIPO_TRANSAC_SIG_SECUENCIA_MOV_ALMACEN", foreignKey: "TIPO_TRANSAC"});
  SIG_SECUENCIA_MOV_ALMACEN.hasMany(SIG_DETALLE_MOVIM_ALMACEN, { as: "TIPO_TRANSAC_SIG_DETALLE_MOVIM_ALMACENs", foreignKey: "TIPO_TRANSAC"});
  SIG_DETALLE_ITEM_CONFOR_SERV.belongsTo(SIG_SECUENCIA_MOV_CONFOR_SERV, { as: "ANO_EJE_SIG_SECUENCIA_MOV_CONFOR_SERV", foreignKey: "ANO_EJE"});
  SIG_SECUENCIA_MOV_CONFOR_SERV.hasMany(SIG_DETALLE_ITEM_CONFOR_SERV, { as: "SIG_DETALLE_ITEM_CONFOR_SERVs", foreignKey: "ANO_EJE"});
  SIG_DETALLE_ITEM_CONFOR_SERV.belongsTo(SIG_SECUENCIA_MOV_CONFOR_SERV, { as: "NRO_MOVIMTO_SIG_SECUENCIA_MOV_CONFOR_SERV", foreignKey: "NRO_MOVIMTO"});
  SIG_SECUENCIA_MOV_CONFOR_SERV.hasMany(SIG_DETALLE_ITEM_CONFOR_SERV, { as: "NRO_MOVIMTO_SIG_DETALLE_ITEM_CONFOR_SERVs", foreignKey: "NRO_MOVIMTO"});
  SIG_DETALLE_ITEM_CONFOR_SERV.belongsTo(SIG_SECUENCIA_MOV_CONFOR_SERV, { as: "SEC_EJEC_SIG_SECUENCIA_MOV_CONFOR_SERV", foreignKey: "SEC_EJEC"});
  SIG_SECUENCIA_MOV_CONFOR_SERV.hasMany(SIG_DETALLE_ITEM_CONFOR_SERV, { as: "SEC_EJEC_SIG_DETALLE_ITEM_CONFOR_SERVs", foreignKey: "SEC_EJEC"});
  SIG_DETALLE_ITEM_CONFOR_SERV.belongsTo(SIG_SECUENCIA_MOV_CONFOR_SERV, { as: "SECUENCIA_SIG_SECUENCIA_MOV_CONFOR_SERV", foreignKey: "SECUENCIA"});
  SIG_SECUENCIA_MOV_CONFOR_SERV.hasMany(SIG_DETALLE_ITEM_CONFOR_SERV, { as: "SECUENCIA_SIG_DETALLE_ITEM_CONFOR_SERVs", foreignKey: "SECUENCIA"});
  SIG_DETALLE_ITEM_CONFOR_SERV.belongsTo(SIG_SECUENCIA_MOV_CONFOR_SERV, { as: "TIPO_MOVIMTO_SIG_SECUENCIA_MOV_CONFOR_SERV", foreignKey: "TIPO_MOVIMTO"});
  SIG_SECUENCIA_MOV_CONFOR_SERV.hasMany(SIG_DETALLE_ITEM_CONFOR_SERV, { as: "TIPO_MOVIMTO_SIG_DETALLE_ITEM_CONFOR_SERVs", foreignKey: "TIPO_MOVIMTO"});
  SIG_DETALLE_ITEM_CONFOR_SERV.belongsTo(SIG_SECUENCIA_MOV_CONFOR_SERV, { as: "TIPO_PPTO_SIG_SECUENCIA_MOV_CONFOR_SERV", foreignKey: "TIPO_PPTO"});
  SIG_SECUENCIA_MOV_CONFOR_SERV.hasMany(SIG_DETALLE_ITEM_CONFOR_SERV, { as: "TIPO_PPTO_SIG_DETALLE_ITEM_CONFOR_SERVs", foreignKey: "TIPO_PPTO"});
  SIG_DETALLE_ITEM_CONFOR_SERV.belongsTo(SIG_SECUENCIA_MOV_CONFOR_SERV, { as: "TIPO_TRANSAC_SIG_SECUENCIA_MOV_CONFOR_SERV", foreignKey: "TIPO_TRANSAC"});
  SIG_SECUENCIA_MOV_CONFOR_SERV.hasMany(SIG_DETALLE_ITEM_CONFOR_SERV, { as: "TIPO_TRANSAC_SIG_DETALLE_ITEM_CONFOR_SERVs", foreignKey: "TIPO_TRANSAC"});
  SIG_DETALLE_MOVIM_CONFOR_SERV.belongsTo(SIG_SECUENCIA_MOV_CONFOR_SERV, { as: "SEC_EJEC_SIG_SECUENCIA_MOV_CONFOR_SERV", foreignKey: "SEC_EJEC"});
  SIG_SECUENCIA_MOV_CONFOR_SERV.hasMany(SIG_DETALLE_MOVIM_CONFOR_SERV, { as: "SIG_DETALLE_MOVIM_CONFOR_SERVs", foreignKey: "SEC_EJEC"});
  SIG_DETALLE_MOVIM_CONFOR_SERV.belongsTo(SIG_SECUENCIA_MOV_CONFOR_SERV, { as: "ANO_EJE_SIG_SECUENCIA_MOV_CONFOR_SERV", foreignKey: "ANO_EJE"});
  SIG_SECUENCIA_MOV_CONFOR_SERV.hasMany(SIG_DETALLE_MOVIM_CONFOR_SERV, { as: "ANO_EJE_SIG_DETALLE_MOVIM_CONFOR_SERVs", foreignKey: "ANO_EJE"});
  SIG_DETALLE_MOVIM_CONFOR_SERV.belongsTo(SIG_SECUENCIA_MOV_CONFOR_SERV, { as: "NRO_MOVIMTO_SIG_SECUENCIA_MOV_CONFOR_SERV", foreignKey: "NRO_MOVIMTO"});
  SIG_SECUENCIA_MOV_CONFOR_SERV.hasMany(SIG_DETALLE_MOVIM_CONFOR_SERV, { as: "NRO_MOVIMTO_SIG_DETALLE_MOVIM_CONFOR_SERVs", foreignKey: "NRO_MOVIMTO"});
  SIG_DETALLE_MOVIM_CONFOR_SERV.belongsTo(SIG_SECUENCIA_MOV_CONFOR_SERV, { as: "SECUENCIA_SIG_SECUENCIA_MOV_CONFOR_SERV", foreignKey: "SECUENCIA"});
  SIG_SECUENCIA_MOV_CONFOR_SERV.hasMany(SIG_DETALLE_MOVIM_CONFOR_SERV, { as: "SECUENCIA_SIG_DETALLE_MOVIM_CONFOR_SERVs", foreignKey: "SECUENCIA"});
  SIG_DETALLE_MOVIM_CONFOR_SERV.belongsTo(SIG_SECUENCIA_MOV_CONFOR_SERV, { as: "TIPO_MOVIMTO_SIG_SECUENCIA_MOV_CONFOR_SERV", foreignKey: "TIPO_MOVIMTO"});
  SIG_SECUENCIA_MOV_CONFOR_SERV.hasMany(SIG_DETALLE_MOVIM_CONFOR_SERV, { as: "TIPO_MOVIMTO_SIG_DETALLE_MOVIM_CONFOR_SERVs", foreignKey: "TIPO_MOVIMTO"});
  SIG_DETALLE_MOVIM_CONFOR_SERV.belongsTo(SIG_SECUENCIA_MOV_CONFOR_SERV, { as: "TIPO_PPTO_SIG_SECUENCIA_MOV_CONFOR_SERV", foreignKey: "TIPO_PPTO"});
  SIG_SECUENCIA_MOV_CONFOR_SERV.hasMany(SIG_DETALLE_MOVIM_CONFOR_SERV, { as: "TIPO_PPTO_SIG_DETALLE_MOVIM_CONFOR_SERVs", foreignKey: "TIPO_PPTO"});
  SIG_DETALLE_MOVIM_CONFOR_SERV.belongsTo(SIG_SECUENCIA_MOV_CONFOR_SERV, { as: "TIPO_TRANSAC_SIG_SECUENCIA_MOV_CONFOR_SERV", foreignKey: "TIPO_TRANSAC"});
  SIG_SECUENCIA_MOV_CONFOR_SERV.hasMany(SIG_DETALLE_MOVIM_CONFOR_SERV, { as: "TIPO_TRANSAC_SIG_DETALLE_MOVIM_CONFOR_SERVs", foreignKey: "TIPO_TRANSAC"});
  SIG_SEGUIMIENTO_ESTADO.belongsTo(SIG_SEGUIMIENTO, { as: "ANO_EJE_SIG_SEGUIMIENTO", foreignKey: "ANO_EJE"});
  SIG_SEGUIMIENTO.hasMany(SIG_SEGUIMIENTO_ESTADO, { as: "SIG_SEGUIMIENTO_ESTADOs", foreignKey: "ANO_EJE"});
  SIG_SEGUIMIENTO_ESTADO.belongsTo(SIG_SEGUIMIENTO, { as: "NRO_ORIGEN_SIG_SEGUIMIENTO", foreignKey: "NRO_ORIGEN"});
  SIG_SEGUIMIENTO.hasMany(SIG_SEGUIMIENTO_ESTADO, { as: "NRO_ORIGEN_SIG_SEGUIMIENTO_ESTADOs", foreignKey: "NRO_ORIGEN"});
  SIG_SEGUIMIENTO_ESTADO.belongsTo(SIG_SEGUIMIENTO, { as: "SEC_EJEC_SIG_SEGUIMIENTO", foreignKey: "SEC_EJEC"});
  SIG_SEGUIMIENTO.hasMany(SIG_SEGUIMIENTO_ESTADO, { as: "SEC_EJEC_SIG_SEGUIMIENTO_ESTADOs", foreignKey: "SEC_EJEC"});
  SIG_SEGUIMIENTO_ESTADO.belongsTo(SIG_SEGUIMIENTO, { as: "TIPO_TRANSACCION_SIG_SEGUIMIENTO", foreignKey: "TIPO_TRANSACCION"});
  SIG_SEGUIMIENTO.hasMany(SIG_SEGUIMIENTO_ESTADO, { as: "TIPO_TRANSACCION_SIG_SEGUIMIENTO_ESTADOs", foreignKey: "TIPO_TRANSACCION"});
  SIG_SEGUIMIENTO_SECUENCIA.belongsTo(SIG_SEGUIMIENTO, { as: "ANO_EJE_SIG_SEGUIMIENTO", foreignKey: "ANO_EJE"});
  SIG_SEGUIMIENTO.hasMany(SIG_SEGUIMIENTO_SECUENCIA, { as: "SIG_SEGUIMIENTO_SECUENCIa", foreignKey: "ANO_EJE"});
  SIG_SEGUIMIENTO_SECUENCIA.belongsTo(SIG_SEGUIMIENTO, { as: "NRO_ORIGEN_SIG_SEGUIMIENTO", foreignKey: "NRO_ORIGEN"});
  SIG_SEGUIMIENTO.hasMany(SIG_SEGUIMIENTO_SECUENCIA, { as: "NRO_ORIGEN_SIG_SEGUIMIENTO_SECUENCIa", foreignKey: "NRO_ORIGEN"});
  SIG_SEGUIMIENTO_SECUENCIA.belongsTo(SIG_SEGUIMIENTO, { as: "SEC_EJEC_SIG_SEGUIMIENTO", foreignKey: "SEC_EJEC"});
  SIG_SEGUIMIENTO.hasMany(SIG_SEGUIMIENTO_SECUENCIA, { as: "SEC_EJEC_SIG_SEGUIMIENTO_SECUENCIa", foreignKey: "SEC_EJEC"});
  SIG_SEGUIMIENTO_SECUENCIA.belongsTo(SIG_SEGUIMIENTO, { as: "TIPO_TRANSACCION_SIG_SEGUIMIENTO", foreignKey: "TIPO_TRANSACCION"});
  SIG_SEGUIMIENTO.hasMany(SIG_SEGUIMIENTO_SECUENCIA, { as: "TIPO_TRANSACCION_SIG_SEGUIMIENTO_SECUENCIa", foreignKey: "TIPO_TRANSACCION"});
  SIG_SOLICITUD_COTIZACION_ITEM.belongsTo(SIG_SOLICITUD_COTIZACION, { as: "NRO_SOLICITUD_SIG_SOLICITUD_COTIZACION", foreignKey: "NRO_SOLICITUD"});
  SIG_SOLICITUD_COTIZACION.hasMany(SIG_SOLICITUD_COTIZACION_ITEM, { as: "SIG_SOLICITUD_COTIZACION_ITEMs", foreignKey: "NRO_SOLICITUD"});
  SIG_SOLICITUD_ESPECIFICACIONES.belongsTo(SIG_SOLICITUD_COTIZACION, { as: "ANO_EJE_SIG_SOLICITUD_COTIZACION", foreignKey: "ANO_EJE"});
  SIG_SOLICITUD_COTIZACION.hasMany(SIG_SOLICITUD_ESPECIFICACIONES, { as: "SIG_SOLICITUD_ESPECIFICACIONEs", foreignKey: "ANO_EJE"});
  SIG_SOLICITUD_ESPECIFICACIONES.belongsTo(SIG_SOLICITUD_COTIZACION, { as: "NRO_CONSOL", foreignKey: "NRO_CONSOLID"});
  SIG_SOLICITUD_COTIZACION.hasMany(SIG_SOLICITUD_ESPECIFICACIONES, { as: "NRO_CONSOL_SIG_SOLICITUD_ESPECIFICACIONEs", foreignKey: "NRO_CONSOLID"});
  SIG_SOLICITUD_ESPECIFICACIONES.belongsTo(SIG_SOLICITUD_COTIZACION, { as: "NRO_SOLICITUD_SIG_SOLICITUD_COTIZACION", foreignKey: "NRO_SOLICITUD"});
  SIG_SOLICITUD_COTIZACION.hasMany(SIG_SOLICITUD_ESPECIFICACIONES, { as: "NRO_SOLICITUD_SIG_SOLICITUD_ESPECIFICACIONEs", foreignKey: "NRO_SOLICITUD"});
  SIG_SOLICITUD_ESPECIFICACIONES.belongsTo(SIG_SOLICITUD_COTIZACION, { as: "TIPO_CONSOL", foreignKey: "TIPO_CONSOLID"});
  SIG_SOLICITUD_COTIZACION.hasMany(SIG_SOLICITUD_ESPECIFICACIONES, { as: "TIPO_CONSOL_SIG_SOLICITUD_ESPECIFICACIONEs", foreignKey: "TIPO_CONSOLID"});
  SIG_SOLICITUD_ESPECIFICACIONES.belongsTo(SIG_SOLICITUD_COTIZACION, { as: "TIPO_GENERACION_SIG_SOLICITUD_COTIZACION", foreignKey: "TIPO_GENERACION"});
  SIG_SOLICITUD_COTIZACION.hasMany(SIG_SOLICITUD_ESPECIFICACIONES, { as: "TIPO_GENERACION_SIG_SOLICITUD_ESPECIFICACIONEs", foreignKey: "TIPO_GENERACION"});
  SIG_DOCUMENTO_ESTADO.belongsTo(SIG_SOLICITUD_GRUPO, { as: "SEC_EJEC_SIG_SOLICITUD_GRUPO", foreignKey: "SEC_EJEC"});
  SIG_SOLICITUD_GRUPO.hasMany(SIG_DOCUMENTO_ESTADO, { as: "SIG_DOCUMENTO_ESTADOs", foreignKey: "SEC_EJEC"});
  SIG_DOCUMENTO_ESTADO.belongsTo(SIG_SOLICITUD_GRUPO, { as: "SOL_GRU_ANNO_EJEC_SIG_SOLICITUD_GRUPO", foreignKey: "SOL_GRU_ANNO_EJEC"});
  SIG_SOLICITUD_GRUPO.hasMany(SIG_DOCUMENTO_ESTADO, { as: "SOL_GRU_ANNO_EJEC_SIG_DOCUMENTO_ESTADOs", foreignKey: "SOL_GRU_ANNO_EJEC"});
  SIG_DOCUMENTO_ESTADO.belongsTo(SIG_SOLICITUD_GRUPO, { as: "SOL_GRU_SEC_SIG_SOLICITUD_GRUPO", foreignKey: "SOL_GRU_SEC"});
  SIG_SOLICITUD_GRUPO.hasMany(SIG_DOCUMENTO_ESTADO, { as: "SOL_GRU_SEC_SIG_DOCUMENTO_ESTADOs", foreignKey: "SOL_GRU_SEC"});
  SIG_SOLICITUD_GRUPO_DET.belongsTo(SIG_SOLICITUD_GRUPO, { as: "ANNO_EJEC_SIG_SOLICITUD_GRUPO", foreignKey: "ANNO_EJEC"});
  SIG_SOLICITUD_GRUPO.hasMany(SIG_SOLICITUD_GRUPO_DET, { as: "SIG_SOLICITUD_GRUPO_DETs", foreignKey: "ANNO_EJEC"});
  SIG_SOLICITUD_GRUPO_DET.belongsTo(SIG_SOLICITUD_GRUPO, { as: "SEC_SOL_GRU_SIG_SOLICITUD_GRUPO", foreignKey: "SEC_SOL_GRU"});
  SIG_SOLICITUD_GRUPO.hasMany(SIG_SOLICITUD_GRUPO_DET, { as: "SEC_SOL_GRU_SIG_SOLICITUD_GRUPO_DETs", foreignKey: "SEC_SOL_GRU"});
  SIG_CONTRATO_MOVITEM_PPTAL.belongsTo(SIG_SOLICITUD_MODIFICACION, { as: "SEC_EJEC_SIG_SOLICITUD_MODIFICACION", foreignKey: "SEC_EJEC"});
  SIG_SOLICITUD_MODIFICACION.hasMany(SIG_CONTRATO_MOVITEM_PPTAL, { as: "SIG_CONTRATO_MOVITEM_PPTALs", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_MOVITEM_PPTAL.belongsTo(SIG_SOLICITUD_MODIFICACION, { as: "CENTRO_COSTO_SIG_SOLICITUD_MODIFICACION", foreignKey: "CENTRO_COSTO"});
  SIG_SOLICITUD_MODIFICACION.hasMany(SIG_CONTRATO_MOVITEM_PPTAL, { as: "CENTRO_COSTO_SIG_CONTRATO_MOVITEM_PPTALs", foreignKey: "CENTRO_COSTO"});
  SIG_CONTRATO_MOVITEM_PPTAL.belongsTo(SIG_SOLICITUD_MODIFICACION, { as: "ANNO_EJEC_SMD_SIG_SOLICITUD_MODIFICACION", foreignKey: "ANNO_EJEC_SMD"});
  SIG_SOLICITUD_MODIFICACION.hasMany(SIG_CONTRATO_MOVITEM_PPTAL, { as: "ANNO_EJEC_SMD_SIG_CONTRATO_MOVITEM_PPTALs", foreignKey: "ANNO_EJEC_SMD"});
  SIG_CONTRATO_MOVITEM_PPTAL.belongsTo(SIG_SOLICITUD_MODIFICACION, { as: "SEC_SOL_MOD_SMD_SIG_SOLICITUD_MODIFICACION", foreignKey: "SEC_SOL_MOD_SMD"});
  SIG_SOLICITUD_MODIFICACION.hasMany(SIG_CONTRATO_MOVITEM_PPTAL, { as: "SEC_SOL_MOD_SMD_SIG_CONTRATO_MOVITEM_PPTALs", foreignKey: "SEC_SOL_MOD_SMD"});
  SIG_DOCUMENTO_ESTADO.belongsTo(SIG_SOLICITUD_MODIFICACION, { as: "SEC_SOL_MOD_SIG_SOLICITUD_MODIFICACION", foreignKey: "SEC_SOL_MOD"});
  SIG_SOLICITUD_MODIFICACION.hasMany(SIG_DOCUMENTO_ESTADO, { as: "SIG_DOCUMENTO_ESTADOs", foreignKey: "SEC_SOL_MOD"});
  SIG_DOCUMENTO_ESTADO.belongsTo(SIG_SOLICITUD_MODIFICACION, { as: "SOL_ANNO_EJEC_SIG_SOLICITUD_MODIFICACION", foreignKey: "SOL_ANNO_EJEC"});
  SIG_SOLICITUD_MODIFICACION.hasMany(SIG_DOCUMENTO_ESTADO, { as: "SOL_ANNO_EJEC_SIG_DOCUMENTO_ESTADOs", foreignKey: "SOL_ANNO_EJEC"});
  SIG_DOCUMENTO_ESTADO.belongsTo(SIG_SOLICITUD_MODIFICACION, { as: "SOL_CC_SIG_SOLICITUD_MODIFICACION", foreignKey: "SOL_CC"});
  SIG_SOLICITUD_MODIFICACION.hasMany(SIG_DOCUMENTO_ESTADO, { as: "SOL_CC_SIG_DOCUMENTO_ESTADOs", foreignKey: "SOL_CC"});
  SIG_SOLICITUD_GRUPO_DET.belongsTo(SIG_SOLICITUD_MODIFICACION, { as: "SEC_EJEC_SIG_SOLICITUD_MODIFICACION", foreignKey: "SEC_EJEC"});
  SIG_SOLICITUD_MODIFICACION.hasMany(SIG_SOLICITUD_GRUPO_DET, { as: "SIG_SOLICITUD_GRUPO_DETs", foreignKey: "SEC_EJEC"});
  SIG_SOLICITUD_GRUPO_DET.belongsTo(SIG_SOLICITUD_MODIFICACION, { as: "SEC_SOL_MOD_SIG_SOLICITUD_MODIFICACION", foreignKey: "SEC_SOL_MOD"});
  SIG_SOLICITUD_MODIFICACION.hasMany(SIG_SOLICITUD_GRUPO_DET, { as: "SEC_SOL_MOD_SIG_SOLICITUD_GRUPO_DETs", foreignKey: "SEC_SOL_MOD"});
  SIG_SOLICITUD_GRUPO_DET.belongsTo(SIG_SOLICITUD_MODIFICACION, { as: "SOL_ANNO_EJEC_SIG_SOLICITUD_MODIFICACION", foreignKey: "SOL_ANNO_EJEC"});
  SIG_SOLICITUD_MODIFICACION.hasMany(SIG_SOLICITUD_GRUPO_DET, { as: "SOL_ANNO_EJEC_SIG_SOLICITUD_GRUPO_DETs", foreignKey: "SOL_ANNO_EJEC"});
  SIG_SOLICITUD_GRUPO_DET.belongsTo(SIG_SOLICITUD_MODIFICACION, { as: "SOL_CC_SIG_SOLICITUD_MODIFICACION", foreignKey: "SOL_CC"});
  SIG_SOLICITUD_MODIFICACION.hasMany(SIG_SOLICITUD_GRUPO_DET, { as: "SOL_CC_SIG_SOLICITUD_GRUPO_DETs", foreignKey: "SOL_CC"});
  SIG_SOLICITUD_MODIFICACION_DET.belongsTo(SIG_SOLICITUD_MODIFICACION, { as: "SEC_SOL_MOD_SIG_SOLICITUD_MODIFICACION", foreignKey: "SEC_SOL_MOD"});
  SIG_SOLICITUD_MODIFICACION.hasMany(SIG_SOLICITUD_MODIFICACION_DET, { as: "SIG_SOLICITUD_MODIFICACION_DETs", foreignKey: "SEC_SOL_MOD"});
  SIG_TES_ARQUEO_CAJA_OBS.belongsTo(SIG_TES_ARQUEO_CAJA, { as: "ANO_EJE_SIG_TES_ARQUEO_CAJA", foreignKey: "ANO_EJE"});
  SIG_TES_ARQUEO_CAJA.hasMany(SIG_TES_ARQUEO_CAJA_OBS, { as: "SIG_TES_ARQUEO_CAJA_OBs", foreignKey: "ANO_EJE"});
  SIG_TES_ARQUEO_CAJA_OBS.belongsTo(SIG_TES_ARQUEO_CAJA, { as: "SEC_ARQUEO_SIG_TES_ARQUEO_CAJA", foreignKey: "SEC_ARQUEO"});
  SIG_TES_ARQUEO_CAJA.hasMany(SIG_TES_ARQUEO_CAJA_OBS, { as: "SEC_ARQUEO_SIG_TES_ARQUEO_CAJA_OBs", foreignKey: "SEC_ARQUEO"});
  SIG_TES_ARQUEO_CAJA_OBS.belongsTo(SIG_TES_ARQUEO_CAJA, { as: "SEC_EJEC_SIG_TES_ARQUEO_CAJA", foreignKey: "SEC_EJEC"});
  SIG_TES_ARQUEO_CAJA.hasMany(SIG_TES_ARQUEO_CAJA_OBS, { as: "SEC_EJEC_SIG_TES_ARQUEO_CAJA_OBs", foreignKey: "SEC_EJEC"});
  SIG_TES_CAJA_DETALLE.belongsTo(SIG_TES_CAJA, { as: "COD_CAJA_SIG_TES_CAJA", foreignKey: "COD_CAJA"});
  SIG_TES_CAJA.hasMany(SIG_TES_CAJA_DETALLE, { as: "SIG_TES_CAJA_DETALLEs", foreignKey: "COD_CAJA"});
  SIG_TES_CAJA_DETALLE.belongsTo(SIG_TES_CAJA, { as: "SEC_EJEC_SIG_TES_CAJA", foreignKey: "SEC_EJEC"});
  SIG_TES_CAJA.hasMany(SIG_TES_CAJA_DETALLE, { as: "SEC_EJEC_SIG_TES_CAJA_DETALLEs", foreignKey: "SEC_EJEC"});
  SIG_USUARIO_CAJA.belongsTo(SIG_TES_CAJA, { as: "COD_CAJA_SIG_TES_CAJA", foreignKey: "COD_CAJA"});
  SIG_TES_CAJA.hasMany(SIG_USUARIO_CAJA, { as: "SIG_USUARIO_CAJAs", foreignKey: "COD_CAJA"});
  SIG_USUARIO_CAJA.belongsTo(SIG_TES_CAJA, { as: "SEC_EJEC_SIG_TES_CAJA", foreignKey: "SEC_EJEC"});
  SIG_TES_CAJA.hasMany(SIG_USUARIO_CAJA, { as: "SEC_EJEC_SIG_USUARIO_CAJAs", foreignKey: "SEC_EJEC"});
  SIG_USUARIO_CAJA_CHICA.belongsTo(SIG_TES_CAJA_CHICA, { as: "ANO_EJE_SIG_TES_CAJA_CHICA", foreignKey: "ANO_EJE"});
  SIG_TES_CAJA_CHICA.hasMany(SIG_USUARIO_CAJA_CHICA, { as: "SIG_USUARIO_CAJA_CHICAs", foreignKey: "ANO_EJE"});
  SIG_USUARIO_CAJA_CHICA.belongsTo(SIG_TES_CAJA_CHICA, { as: "SEC_CAJA_SIG_TES_CAJA_CHICA", foreignKey: "SEC_CAJA"});
  SIG_TES_CAJA_CHICA.hasMany(SIG_USUARIO_CAJA_CHICA, { as: "SEC_CAJA_SIG_USUARIO_CAJA_CHICAs", foreignKey: "SEC_CAJA"});
  SIG_USUARIO_CAJA_CHICA.belongsTo(SIG_TES_CAJA_CHICA, { as: "SEC_EJEC_SIG_TES_CAJA_CHICA", foreignKey: "SEC_EJEC"});
  SIG_TES_CAJA_CHICA.hasMany(SIG_USUARIO_CAJA_CHICA, { as: "SEC_EJEC_SIG_USUARIO_CAJA_CHICAs", foreignKey: "SEC_EJEC"});
  SIG_TES_CAJA_CHICA_MOVIL.belongsTo(SIG_TES_CAJA_CHICA_MOV, { as: "ANO_EJE_SIG_TES_CAJA_CHICA_MOV", foreignKey: "ANO_EJE"});
  SIG_TES_CAJA_CHICA_MOV.hasMany(SIG_TES_CAJA_CHICA_MOVIL, { as: "SIG_TES_CAJA_CHICA_MOVILs", foreignKey: "ANO_EJE"});
  SIG_TES_CAJA_CHICA_MOVIL.belongsTo(SIG_TES_CAJA_CHICA_MOV, { as: "SEC_CAJA_SIG_TES_CAJA_CHICA_MOV", foreignKey: "SEC_CAJA"});
  SIG_TES_CAJA_CHICA_MOV.hasMany(SIG_TES_CAJA_CHICA_MOVIL, { as: "SEC_CAJA_SIG_TES_CAJA_CHICA_MOVILs", foreignKey: "SEC_CAJA"});
  SIG_TES_CAJA_CHICA_MOVIL.belongsTo(SIG_TES_CAJA_CHICA_MOV, { as: "SEC_EJEC_SIG_TES_CAJA_CHICA_MOV", foreignKey: "SEC_EJEC"});
  SIG_TES_CAJA_CHICA_MOV.hasMany(SIG_TES_CAJA_CHICA_MOVIL, { as: "SEC_EJEC_SIG_TES_CAJA_CHICA_MOVILs", foreignKey: "SEC_EJEC"});
  SIG_TES_CAJA_CHICA_MOVIL.belongsTo(SIG_TES_CAJA_CHICA_MOV, { as: "SEC_MOVIMTO_SIG_TES_CAJA_CHICA_MOV", foreignKey: "SEC_MOVIMTO"});
  SIG_TES_CAJA_CHICA_MOV.hasMany(SIG_TES_CAJA_CHICA_MOVIL, { as: "SEC_MOVIMTO_SIG_TES_CAJA_CHICA_MOVILs", foreignKey: "SEC_MOVIMTO"});
  SIG_TES_CAJA_CHICA_PPTAL.belongsTo(SIG_TES_CAJA_CHICA_MOV, { as: "ANO_EJE_SIG_TES_CAJA_CHICA_MOV", foreignKey: "ANO_EJE"});
  SIG_TES_CAJA_CHICA_MOV.hasMany(SIG_TES_CAJA_CHICA_PPTAL, { as: "SIG_TES_CAJA_CHICA_PPTALs", foreignKey: "ANO_EJE"});
  SIG_TES_CAJA_CHICA_PPTAL.belongsTo(SIG_TES_CAJA_CHICA_MOV, { as: "SEC_CAJA_SIG_TES_CAJA_CHICA_MOV", foreignKey: "SEC_CAJA"});
  SIG_TES_CAJA_CHICA_MOV.hasMany(SIG_TES_CAJA_CHICA_PPTAL, { as: "SEC_CAJA_SIG_TES_CAJA_CHICA_PPTALs", foreignKey: "SEC_CAJA"});
  SIG_TES_CAJA_CHICA_PPTAL.belongsTo(SIG_TES_CAJA_CHICA_MOV, { as: "SEC_EJEC_SIG_TES_CAJA_CHICA_MOV", foreignKey: "SEC_EJEC"});
  SIG_TES_CAJA_CHICA_MOV.hasMany(SIG_TES_CAJA_CHICA_PPTAL, { as: "SEC_EJEC_SIG_TES_CAJA_CHICA_PPTALs", foreignKey: "SEC_EJEC"});
  SIG_TES_CAJA_CHICA_PPTAL.belongsTo(SIG_TES_CAJA_CHICA_MOV, { as: "SEC_MOVIMTO_SIG_TES_CAJA_CHICA_MOV", foreignKey: "SEC_MOVIMTO"});
  SIG_TES_CAJA_CHICA_MOV.hasMany(SIG_TES_CAJA_CHICA_PPTAL, { as: "SEC_MOVIMTO_SIG_TES_CAJA_CHICA_PPTALs", foreignKey: "SEC_MOVIMTO"});
  SIG_TES_CAJA_CHICA_SALDO.belongsTo(SIG_TES_CAJA_CHICA_SALDO, { as: "ANO_EJE_SIG_TES_CAJA_CHICA_SALDO", foreignKey: "ANO_EJE"});
  SIG_TES_CAJA_CHICA_SALDO.hasMany(SIG_TES_CAJA_CHICA_SALDO, { as: "SIG_TES_CAJA_CHICA_SALDOs", foreignKey: "ANO_EJE"});
  SIG_TES_CAJA_CHICA_SALDO.belongsTo(SIG_TES_CAJA_CHICA_SALDO, { as: "CLASIFICADOR_SIG_TES_CAJA_CHICA_SALDO", foreignKey: "CLASIFICADOR"});
  SIG_TES_CAJA_CHICA_SALDO.hasMany(SIG_TES_CAJA_CHICA_SALDO, { as: "CLASIFICADOR_SIG_TES_CAJA_CHICA_SALDOs", foreignKey: "CLASIFICADOR"});
  SIG_TES_CAJA_CHICA_SALDO.belongsTo(SIG_TES_CAJA_CHICA_SALDO, { as: "FUENTE_FINANC_SIG_TES_CAJA_CHICA_SALDO", foreignKey: "FUENTE_FINANC"});
  SIG_TES_CAJA_CHICA_SALDO.hasMany(SIG_TES_CAJA_CHICA_SALDO, { as: "FUENTE_FINANC_SIG_TES_CAJA_CHICA_SALDOs", foreignKey: "FUENTE_FINANC"});
  SIG_TES_CAJA_CHICA_SALDO.belongsTo(SIG_TES_CAJA_CHICA_SALDO, { as: "ORIGEN_SIG_TES_CAJA_CHICA_SALDO", foreignKey: "ORIGEN"});
  SIG_TES_CAJA_CHICA_SALDO.hasMany(SIG_TES_CAJA_CHICA_SALDO, { as: "ORIGEN_SIG_TES_CAJA_CHICA_SALDOs", foreignKey: "ORIGEN"});
  SIG_TES_CAJA_CHICA_SALDO.belongsTo(SIG_TES_CAJA_CHICA_SALDO, { as: "SEC_CAJA_SIG_TES_CAJA_CHICA_SALDO", foreignKey: "SEC_CAJA"});
  SIG_TES_CAJA_CHICA_SALDO.hasMany(SIG_TES_CAJA_CHICA_SALDO, { as: "SEC_CAJA_SIG_TES_CAJA_CHICA_SALDOs", foreignKey: "SEC_CAJA"});
  SIG_TES_CAJA_CHICA_SALDO.belongsTo(SIG_TES_CAJA_CHICA_SALDO, { as: "SEC_EJEC_SIG_TES_CAJA_CHICA_SALDO", foreignKey: "SEC_EJEC"});
  SIG_TES_CAJA_CHICA_SALDO.hasMany(SIG_TES_CAJA_CHICA_SALDO, { as: "SEC_EJEC_SIG_TES_CAJA_CHICA_SALDOs", foreignKey: "SEC_EJEC"});
  SIG_TES_CAJA_CHICA_SALDO.belongsTo(SIG_TES_CAJA_CHICA_SALDO, { as: "SEC_FUNC_SIG_TES_CAJA_CHICA_SALDO", foreignKey: "SEC_FUNC"});
  SIG_TES_CAJA_CHICA_SALDO.hasMany(SIG_TES_CAJA_CHICA_SALDO, { as: "SEC_FUNC_SIG_TES_CAJA_CHICA_SALDOs", foreignKey: "SEC_FUNC"});
  SIG_TES_INTERFASE_SECU.belongsTo(SIG_TES_INTERFASE_CAB, { as: "ANO_EJE_SIG_TES_INTERFASE_CAB", foreignKey: "ANO_EJE"});
  SIG_TES_INTERFASE_CAB.hasMany(SIG_TES_INTERFASE_SECU, { as: "SIG_TES_INTERFASE_SECUs", foreignKey: "ANO_EJE"});
  SIG_TES_INTERFASE_SECU.belongsTo(SIG_TES_INTERFASE_CAB, { as: "SEC_DOCUMENTO_SIG_TES_INTERFASE_CAB", foreignKey: "SEC_DOCUMENTO"});
  SIG_TES_INTERFASE_CAB.hasMany(SIG_TES_INTERFASE_SECU, { as: "SEC_DOCUMENTO_SIG_TES_INTERFASE_SECUs", foreignKey: "SEC_DOCUMENTO"});
  SIG_TES_INTERFASE_SECU.belongsTo(SIG_TES_INTERFASE_CAB, { as: "SEC_EJEC_SIG_TES_INTERFASE_CAB", foreignKey: "SEC_EJEC"});
  SIG_TES_INTERFASE_CAB.hasMany(SIG_TES_INTERFASE_SECU, { as: "SEC_EJEC_SIG_TES_INTERFASE_SECUs", foreignKey: "SEC_EJEC"});
  SIG_TES_INTERFASE_PPTO.belongsTo(SIG_TES_INTERFASE_SECU, { as: "ANO_EJE_SIG_TES_INTERFASE_SECU", foreignKey: "ANO_EJE"});
  SIG_TES_INTERFASE_SECU.hasMany(SIG_TES_INTERFASE_PPTO, { as: "SIG_TES_INTERFASE_PPTOs", foreignKey: "ANO_EJE"});
  SIG_TES_INTERFASE_PPTO.belongsTo(SIG_TES_INTERFASE_SECU, { as: "SEC_DOCUMENTO_SIG_TES_INTERFASE_SECU", foreignKey: "SEC_DOCUMENTO"});
  SIG_TES_INTERFASE_SECU.hasMany(SIG_TES_INTERFASE_PPTO, { as: "SEC_DOCUMENTO_SIG_TES_INTERFASE_PPTOs", foreignKey: "SEC_DOCUMENTO"});
  SIG_TES_INTERFASE_PPTO.belongsTo(SIG_TES_INTERFASE_SECU, { as: "SEC_EJEC_SIG_TES_INTERFASE_SECU", foreignKey: "SEC_EJEC"});
  SIG_TES_INTERFASE_SECU.hasMany(SIG_TES_INTERFASE_PPTO, { as: "SEC_EJEC_SIG_TES_INTERFASE_PPTOs", foreignKey: "SEC_EJEC"});
  SIG_TES_INTERFASE_PPTO.belongsTo(SIG_TES_INTERFASE_SECU, { as: "SEC_INTERFASE_SIG_TES_INTERFASE_SECU", foreignKey: "SEC_INTERFASE"});
  SIG_TES_INTERFASE_SECU.hasMany(SIG_TES_INTERFASE_PPTO, { as: "SEC_INTERFASE_SIG_TES_INTERFASE_PPTOs", foreignKey: "SEC_INTERFASE"});
  SIG_TES_RECIBO_INGRESO_DET.belongsTo(SIG_TES_RECIBO_INGRESO, { as: "ANO_EJE_SIG_TES_RECIBO_INGRESO", foreignKey: "ANO_EJE"});
  SIG_TES_RECIBO_INGRESO.hasMany(SIG_TES_RECIBO_INGRESO_DET, { as: "SIG_TES_RECIBO_INGRESO_DETs", foreignKey: "ANO_EJE"});
  SIG_TES_RECIBO_INGRESO_DET.belongsTo(SIG_TES_RECIBO_INGRESO, { as: "SEC_EJEC_SIG_TES_RECIBO_INGRESO", foreignKey: "SEC_EJEC"});
  SIG_TES_RECIBO_INGRESO.hasMany(SIG_TES_RECIBO_INGRESO_DET, { as: "SEC_EJEC_SIG_TES_RECIBO_INGRESO_DETs", foreignKey: "SEC_EJEC"});
  SIG_TES_RECIBO_INGRESO_DET.belongsTo(SIG_TES_RECIBO_INGRESO, { as: "SEC_RECIBO_SIG_TES_RECIBO_INGRESO", foreignKey: "SEC_RECIBO"});
  SIG_TES_RECIBO_INGRESO.hasMany(SIG_TES_RECIBO_INGRESO_DET, { as: "SEC_RECIBO_SIG_TES_RECIBO_INGRESO_DETs", foreignKey: "SEC_RECIBO"});
  SIG_CONSTRUCCIONES_DET.belongsTo(SIG_TIPO_CONSTRUCCION, { as: "COD_TIPO_CONSTRUC_SIG_TIPO_CONSTRUCCION", foreignKey: "COD_TIPO_CONSTRUC"});
  SIG_TIPO_CONSTRUCCION.hasMany(SIG_CONSTRUCCIONES_DET, { as: "SIG_CONSTRUCCIONES_DETs", foreignKey: "COD_TIPO_CONSTRUC"});
  SIG_CUENTA_CONSTRUCCION.belongsTo(SIG_TIPO_CONSTRUCCION, { as: "COD_TIPO_CONSTRUC_SIG_TIPO_CONSTRUCCION", foreignKey: "COD_TIPO_CONSTRUC"});
  SIG_TIPO_CONSTRUCCION.hasMany(SIG_CUENTA_CONSTRUCCION, { as: "SIG_CUENTA_CONSTRUCCIONs", foreignKey: "COD_TIPO_CONSTRUC"});
  SIG_CONSTRUCCIONES_DET.belongsTo(SIG_TIPO_INMUEBLE, { as: "CODIGO_TIPO_INM_SIG_TIPO_INMUEBLE", foreignKey: "CODIGO_TIPO_INM"});
  SIG_TIPO_INMUEBLE.hasMany(SIG_CONSTRUCCIONES_DET, { as: "SIG_CONSTRUCCIONES_DETs", foreignKey: "CODIGO_TIPO_INM"});
  SIG_CUENTA_CONSTRUCCION.belongsTo(SIG_TIPO_INMUEBLE, { as: "CODIGO_TIPO_INM_SIG_TIPO_INMUEBLE", foreignKey: "CODIGO_TIPO_INM"});
  SIG_TIPO_INMUEBLE.hasMany(SIG_CUENTA_CONSTRUCCION, { as: "SIG_CUENTA_CONSTRUCCIONs", foreignKey: "CODIGO_TIPO_INM"});
  SIG_TIPO_INM_UNID_ACT.belongsTo(SIG_TIPO_INMUEBLE, { as: "CODIGO_TIPO_INM_SIG_TIPO_INMUEBLE", foreignKey: "CODIGO_TIPO_INM"});
  SIG_TIPO_INMUEBLE.hasMany(SIG_TIPO_INM_UNID_ACT, { as: "SIG_TIPO_INM_UNID_ACTs", foreignKey: "CODIGO_TIPO_INM"});
  SIG_MOVIMIENTO_ACTIVO.belongsTo(SIG_TIPO_MOVIMIENTO, { as: "TIPO_MOVIMTO_SIG_TIPO_MOVIMIENTO", foreignKey: "TIPO_MOVIMTO"});
  SIG_TIPO_MOVIMIENTO.hasMany(SIG_MOVIMIENTO_ACTIVO, { as: "SIG_MOVIMIENTO_ACTIVOs", foreignKey: "TIPO_MOVIMTO"});
  SIG_MOVIMIENTO_ACTIVO.belongsTo(SIG_TIPO_MOVIMIENTO, { as: "TIPO_TRANSAC_SIG_TIPO_MOVIMIENTO", foreignKey: "TIPO_TRANSAC"});
  SIG_TIPO_MOVIMIENTO.hasMany(SIG_MOVIMIENTO_ACTIVO, { as: "TIPO_TRANSAC_SIG_MOVIMIENTO_ACTIVOs", foreignKey: "TIPO_TRANSAC"});
  SIG_MOVIMIENTO_BIENES.belongsTo(SIG_TIPO_MOVIMIENTO, { as: "TIPO_MOVIMTO_SIG_TIPO_MOVIMIENTO", foreignKey: "TIPO_MOVIMTO"});
  SIG_TIPO_MOVIMIENTO.hasMany(SIG_MOVIMIENTO_BIENES, { as: "SIG_MOVIMIENTO_BIENEs", foreignKey: "TIPO_MOVIMTO"});
  SIG_MOVIMIENTO_BIENES.belongsTo(SIG_TIPO_MOVIMIENTO, { as: "TIPO_TRANSAC_SIG_TIPO_MOVIMIENTO", foreignKey: "TIPO_TRANSAC"});
  SIG_TIPO_MOVIMIENTO.hasMany(SIG_MOVIMIENTO_BIENES, { as: "TIPO_TRANSAC_SIG_MOVIMIENTO_BIENEs", foreignKey: "TIPO_TRANSAC"});
  SIG_MOVIM_ALMACEN.belongsTo(SIG_TIPO_MOVIMIENTO, { as: "TIPO_MOVIMTO_SIG_TIPO_MOVIMIENTO", foreignKey: "TIPO_MOVIMTO"});
  SIG_TIPO_MOVIMIENTO.hasMany(SIG_MOVIM_ALMACEN, { as: "SIG_MOVIM_ALMACENs", foreignKey: "TIPO_MOVIMTO"});
  SIG_MOVIM_ALMACEN.belongsTo(SIG_TIPO_MOVIMIENTO, { as: "TIPO_TRANSAC_SIG_TIPO_MOVIMIENTO", foreignKey: "TIPO_TRANSAC"});
  SIG_TIPO_MOVIMIENTO.hasMany(SIG_MOVIM_ALMACEN, { as: "TIPO_TRANSAC_SIG_MOVIM_ALMACENs", foreignKey: "TIPO_TRANSAC"});
  SIG_TIPO_SALIDA.belongsTo(SIG_TIPO_MOVIMIENTO, { as: "TIPO_MOVIMTO_SIG_TIPO_MOVIMIENTO", foreignKey: "TIPO_MOVIMTO"});
  SIG_TIPO_MOVIMIENTO.hasMany(SIG_TIPO_SALIDA, { as: "SIG_TIPO_SALIDAs", foreignKey: "TIPO_MOVIMTO"});
  SIG_TIPO_SALIDA.belongsTo(SIG_TIPO_MOVIMIENTO, { as: "TIPO_TRANSAC_SIG_TIPO_MOVIMIENTO", foreignKey: "TIPO_TRANSAC"});
  SIG_TIPO_MOVIMIENTO.hasMany(SIG_TIPO_SALIDA, { as: "TIPO_TRANSAC_SIG_TIPO_SALIDAs", foreignKey: "TIPO_TRANSAC"});
  SIG_CONTRATO_SECUENCIA.belongsTo(SIG_TIPO_REA_PPTO_DOC, { as: "ANO_EJE_SIG_TIPO_REA_PPTO_DOC", foreignKey: "ANO_EJE"});
  SIG_TIPO_REA_PPTO_DOC.hasMany(SIG_CONTRATO_SECUENCIA, { as: "SIG_CONTRATO_SECUENCIa", foreignKey: "ANO_EJE"});
  SIG_CONTRATO_SECUENCIA.belongsTo(SIG_TIPO_REA_PPTO_DOC, { as: "NRO_CONTRATO_SIG_TIPO_REA_PPTO_DOC", foreignKey: "NRO_CONTRATO"});
  SIG_TIPO_REA_PPTO_DOC.hasMany(SIG_CONTRATO_SECUENCIA, { as: "NRO_CONTRATO_SIG_CONTRATO_SECUENCIa", foreignKey: "NRO_CONTRATO"});
  SIG_CONTRATO_SECUENCIA.belongsTo(SIG_TIPO_REA_PPTO_DOC, { as: "SEC_EJEC_SIG_TIPO_REA_PPTO_DOC", foreignKey: "SEC_EJEC"});
  SIG_TIPO_REA_PPTO_DOC.hasMany(SIG_CONTRATO_SECUENCIA, { as: "SEC_EJEC_SIG_CONTRATO_SECUENCIa", foreignKey: "SEC_EJEC"});
  SIG_CONTRATO_SECUENCIA.belongsTo(SIG_TIPO_REA_PPTO_DOC, { as: "TIPO_CONTRATO_SIG_TIPO_REA_PPTO_DOC", foreignKey: "TIPO_CONTRATO"});
  SIG_TIPO_REA_PPTO_DOC.hasMany(SIG_CONTRATO_SECUENCIA, { as: "TIPO_CONTRATO_SIG_CONTRATO_SECUENCIa", foreignKey: "TIPO_CONTRATO"});
  SIG_CONTRATO_SECUENCIA.belongsTo(SIG_TIPO_REA_PPTO_DOC, { as: "SEC_DOCUMENTO_RP_SIG_TIPO_REA_PPTO_DOC", foreignKey: "SEC_DOCUMENTO_RP"});
  SIG_TIPO_REA_PPTO_DOC.hasMany(SIG_CONTRATO_SECUENCIA, { as: "SEC_DOCUMENTO_RP_SIG_CONTRATO_SECUENCIa", foreignKey: "SEC_DOCUMENTO_RP"});
  SIG_CONTRATO_SECUENCIA.belongsTo(SIG_TIPO_REA_PPTO_DOC, { as: "SEC_TIPO_RP_SIG_TIPO_REA_PPTO_DOC", foreignKey: "SEC_TIPO_RP"});
  SIG_TIPO_REA_PPTO_DOC.hasMany(SIG_CONTRATO_SECUENCIA, { as: "SEC_TIPO_RP_SIG_CONTRATO_SECUENCIa", foreignKey: "SEC_TIPO_RP"});
  SIG_MOVIMIENTO_ACTIVO.belongsTo(SIG_TIPO_SALIDA, { as: "TIPO_SALIDA_SIG_TIPO_SALIDA", foreignKey: "TIPO_SALIDA"});
  SIG_TIPO_SALIDA.hasMany(SIG_MOVIMIENTO_ACTIVO, { as: "SIG_MOVIMIENTO_ACTIVOs", foreignKey: "TIPO_SALIDA"});
  SIG_ITEM_TIPO_UNIDAD_ACTIVO.belongsTo(SIG_TIPO_UNIDAD_ACTIVO, { as: "CODIGO_TIPO_UA_SIG_TIPO_UNIDAD_ACTIVO", foreignKey: "CODIGO_TIPO_UA"});
  SIG_TIPO_UNIDAD_ACTIVO.hasMany(SIG_ITEM_TIPO_UNIDAD_ACTIVO, { as: "SIG_ITEM_TIPO_UNIDAD_ACTIVOs", foreignKey: "CODIGO_TIPO_UA"});
  SIG_TIPO_INM_UNID_ACT.belongsTo(SIG_TIPO_UNIDAD_ACTIVO, { as: "CODIGO_TIPO_UA_SIG_TIPO_UNIDAD_ACTIVO", foreignKey: "CODIGO_TIPO_UA"});
  SIG_TIPO_UNIDAD_ACTIVO.hasMany(SIG_TIPO_INM_UNID_ACT, { as: "SIG_TIPO_INM_UNID_ACTs", foreignKey: "CODIGO_TIPO_UA"});
  SIG_TIPO_UNIDAD_ACTIVO_CUENTA.belongsTo(SIG_TIPO_UNIDAD_ACTIVO, { as: "CODIGO_TIPO_UA_SIG_TIPO_UNIDAD_ACTIVO", foreignKey: "CODIGO_TIPO_UA"});
  SIG_TIPO_UNIDAD_ACTIVO.hasMany(SIG_TIPO_UNIDAD_ACTIVO_CUENTA, { as: "SIG_TIPO_UNIDAD_ACTIVO_CUENTa", foreignKey: "CODIGO_TIPO_UA"});
  SIG_PATRIMONIO.belongsTo(SIG_UBICAC_FISICA, { as: "COD_UBICAC_SIG_UBICAC_FISICA", foreignKey: "COD_UBICAC"});
  SIG_UBICAC_FISICA.hasMany(SIG_PATRIMONIO, { as: "SIG_PATRIMONIOs", foreignKey: "COD_UBICAC"});
  SIG_PATRIMONIO.belongsTo(SIG_UBICAC_FISICA, { as: "TIPO_UBICAC_SIG_UBICAC_FISICA", foreignKey: "TIPO_UBICAC"});
  SIG_UBICAC_FISICA.hasMany(SIG_PATRIMONIO, { as: "TIPO_UBICAC_SIG_PATRIMONIOs", foreignKey: "TIPO_UBICAC"});
  SI_CONTRATO_DETA.belongsTo(SI_CONTRATO, { as: "ANO_EJE_SI_CONTRATO", foreignKey: "ANO_EJE"});
  SI_CONTRATO.hasMany(SI_CONTRATO_DETA, { as: "SI_CONTRATO_DETa", foreignKey: "ANO_EJE"});
  SI_CONTRATO_DETA.belongsTo(SI_CONTRATO, { as: "ID_SI_CONTRATO_SI_CONTRATO", foreignKey: "ID_SI_CONTRATO"});
  SI_CONTRATO.hasMany(SI_CONTRATO_DETA, { as: "ID_SI_CONTRATO_SI_CONTRATO_DETa", foreignKey: "ID_SI_CONTRATO"});
  SI_CONTRATO_DETA.belongsTo(SI_CONTRATO, { as: "SEC_EJEC_SI_CONTRATO", foreignKey: "SEC_EJEC"});
  SI_CONTRATO.hasMany(SI_CONTRATO_DETA, { as: "SEC_EJEC_SI_CONTRATO_DETa", foreignKey: "SEC_EJEC"});
  SI_MOVIMIENTO_ALMACEN_DETA.belongsTo(SI_MOVIMIENTO_ALMACEN, { as: "ANO_EJE_SI_MOVIMIENTO_ALMACEN", foreignKey: "ANO_EJE"});
  SI_MOVIMIENTO_ALMACEN.hasMany(SI_MOVIMIENTO_ALMACEN_DETA, { as: "SI_MOVIMIENTO_ALMACEN_DETa", foreignKey: "ANO_EJE"});
  SI_MOVIMIENTO_ALMACEN_DETA.belongsTo(SI_MOVIMIENTO_ALMACEN, { as: "ID_SI_MOV_ALM_SI_MOVIMIENTO_ALMACEN", foreignKey: "ID_SI_MOV_ALM"});
  SI_MOVIMIENTO_ALMACEN.hasMany(SI_MOVIMIENTO_ALMACEN_DETA, { as: "ID_SI_MOV_ALM_SI_MOVIMIENTO_ALMACEN_DETa", foreignKey: "ID_SI_MOV_ALM"});
  SI_MOVIMIENTO_ALMACEN_DETA.belongsTo(SI_MOVIMIENTO_ALMACEN, { as: "SEC_EJEC_SI_MOVIMIENTO_ALMACEN", foreignKey: "SEC_EJEC"});
  SI_MOVIMIENTO_ALMACEN.hasMany(SI_MOVIMIENTO_ALMACEN_DETA, { as: "SEC_EJEC_SI_MOVIMIENTO_ALMACEN_DETa", foreignKey: "SEC_EJEC"});
  SI_MOVIMIENTO_ALMACEN_DETA_TRX.belongsTo(SI_MOVIMIENTO_ALMACEN_TRX, { as: "ANO_EJE_SI_MOVIMIENTO_ALMACEN_TRX", foreignKey: "ANO_EJE"});
  SI_MOVIMIENTO_ALMACEN_TRX.hasMany(SI_MOVIMIENTO_ALMACEN_DETA_TRX, { as: "SI_MOVIMIENTO_ALMACEN_DETA_TRXes", foreignKey: "ANO_EJE"});
  SI_MOVIMIENTO_ALMACEN_DETA_TRX.belongsTo(SI_MOVIMIENTO_ALMACEN_TRX, { as: "ID_SI_MOV_ALM_SI_MOVIMIENTO_ALMACEN_TRX", foreignKey: "ID_SI_MOV_ALM"});
  SI_MOVIMIENTO_ALMACEN_TRX.hasMany(SI_MOVIMIENTO_ALMACEN_DETA_TRX, { as: "ID_SI_MOV_ALM_SI_MOVIMIENTO_ALMACEN_DETA_TRXes", foreignKey: "ID_SI_MOV_ALM"});
  SI_MOVIMIENTO_ALMACEN_DETA_TRX.belongsTo(SI_MOVIMIENTO_ALMACEN_TRX, { as: "SEC_EJEC_SI_MOVIMIENTO_ALMACEN_TRX", foreignKey: "SEC_EJEC"});
  SI_MOVIMIENTO_ALMACEN_TRX.hasMany(SI_MOVIMIENTO_ALMACEN_DETA_TRX, { as: "SEC_EJEC_SI_MOVIMIENTO_ALMACEN_DETA_TRXes", foreignKey: "SEC_EJEC"});
  SI_ORDEN_DETA.belongsTo(SI_ORDEN, { as: "ANO_EJE_SI_ORDEN", foreignKey: "ANO_EJE"});
  SI_ORDEN.hasMany(SI_ORDEN_DETA, { as: "SI_ORDEN_DETa", foreignKey: "ANO_EJE"});
  SI_ORDEN_DETA.belongsTo(SI_ORDEN, { as: "ID_SI_ORDEN_SI_ORDEN", foreignKey: "ID_SI_ORDEN"});
  SI_ORDEN.hasMany(SI_ORDEN_DETA, { as: "ID_SI_ORDEN_SI_ORDEN_DETa", foreignKey: "ID_SI_ORDEN"});
  SI_ORDEN_DETA.belongsTo(SI_ORDEN, { as: "SEC_EJEC_SI_ORDEN", foreignKey: "SEC_EJEC"});
  SI_ORDEN.hasMany(SI_ORDEN_DETA, { as: "SEC_EJEC_SI_ORDEN_DETa", foreignKey: "SEC_EJEC"});
  SI_ORDEN_DETA_TRX.belongsTo(SI_ORDEN_TRX, { as: "ANO_EJE_SI_ORDEN_TRX", foreignKey: "ANO_EJE"});
  SI_ORDEN_TRX.hasMany(SI_ORDEN_DETA_TRX, { as: "SI_ORDEN_DETA_TRXes", foreignKey: "ANO_EJE"});
  SI_ORDEN_DETA_TRX.belongsTo(SI_ORDEN_TRX, { as: "ID_SI_ORDEN_SI_ORDEN_TRX", foreignKey: "ID_SI_ORDEN"});
  SI_ORDEN_TRX.hasMany(SI_ORDEN_DETA_TRX, { as: "ID_SI_ORDEN_SI_ORDEN_DETA_TRXes", foreignKey: "ID_SI_ORDEN"});
  SI_ORDEN_DETA_TRX.belongsTo(SI_ORDEN_TRX, { as: "SEC_EJEC_SI_ORDEN_TRX", foreignKey: "SEC_EJEC"});
  SI_ORDEN_TRX.hasMany(SI_ORDEN_DETA_TRX, { as: "SEC_EJEC_SI_ORDEN_DETA_TRXes", foreignKey: "SEC_EJEC"});
  SI_PEDIDO_DETA.belongsTo(SI_PEDIDO, { as: "ANO_EJE_SI_PEDIDO", foreignKey: "ANO_EJE"});
  SI_PEDIDO.hasMany(SI_PEDIDO_DETA, { as: "SI_PEDIDO_DETa", foreignKey: "ANO_EJE"});
  SI_PEDIDO_DETA.belongsTo(SI_PEDIDO, { as: "ID_SI_PEDIDO_SI_PEDIDO", foreignKey: "ID_SI_PEDIDO"});
  SI_PEDIDO.hasMany(SI_PEDIDO_DETA, { as: "ID_SI_PEDIDO_SI_PEDIDO_DETa", foreignKey: "ID_SI_PEDIDO"});
  SI_PEDIDO_DETA.belongsTo(SI_PEDIDO, { as: "SEC_EJEC_SI_PEDIDO", foreignKey: "SEC_EJEC"});
  SI_PEDIDO.hasMany(SI_PEDIDO_DETA, { as: "SEC_EJEC_SI_PEDIDO_DETa", foreignKey: "SEC_EJEC"});
  SI_PEDIDO_DETA_TRX.belongsTo(SI_PEDIDO_TRX, { as: "ANO_EJE_SI_PEDIDO_TRX", foreignKey: "ANO_EJE"});
  SI_PEDIDO_TRX.hasMany(SI_PEDIDO_DETA_TRX, { as: "SI_PEDIDO_DETA_TRXes", foreignKey: "ANO_EJE"});
  SI_PEDIDO_DETA_TRX.belongsTo(SI_PEDIDO_TRX, { as: "ID_SI_PEDIDO_SI_PEDIDO_TRX", foreignKey: "ID_SI_PEDIDO"});
  SI_PEDIDO_TRX.hasMany(SI_PEDIDO_DETA_TRX, { as: "ID_SI_PEDIDO_SI_PEDIDO_DETA_TRXes", foreignKey: "ID_SI_PEDIDO"});
  SI_PEDIDO_DETA_TRX.belongsTo(SI_PEDIDO_TRX, { as: "SEC_EJEC_SI_PEDIDO_TRX", foreignKey: "SEC_EJEC"});
  SI_PEDIDO_TRX.hasMany(SI_PEDIDO_DETA_TRX, { as: "SEC_EJEC_SI_PEDIDO_DETA_TRXes", foreignKey: "SEC_EJEC"});
  SIG_PPR_CATEGORIA.belongsTo(SI_PPR_AMBITO, { as: "ID_AMBITO_SI_PPR_AMBITO", foreignKey: "ID_AMBITO"});
  SI_PPR_AMBITO.hasMany(SIG_PPR_CATEGORIA, { as: "SIG_PPR_CATEGORIa", foreignKey: "ID_AMBITO"});
  SIG_PPR_EJECUTORA_AMBITO.belongsTo(SI_PPR_AMBITO, { as: "ID_AMBITO_SI_PPR_AMBITO", foreignKey: "ID_AMBITO"});
  SI_PPR_AMBITO.hasMany(SIG_PPR_EJECUTORA_AMBITO, { as: "SIG_PPR_EJECUTORA_AMBITOs", foreignKey: "ID_AMBITO"});
  SIG_PPR_KIT_ITEMS.belongsTo(SI_PPR_KIT_ITEMS, { as: "ANO_EJE_SI_PPR_KIT_ITEM", foreignKey: "ANO_EJE"});
  SI_PPR_KIT_ITEMS.hasMany(SIG_PPR_KIT_ITEMS, { as: "SIG_PPR_KIT_ITEMs", foreignKey: "ANO_EJE"});
  SIG_PPR_KIT_ITEMS.belongsTo(SI_PPR_KIT_ITEMS, { as: "ID_SUB_FINALIDAD_SI_PPR_KIT_ITEM", foreignKey: "ID_SUB_FINALIDAD"});
  SI_PPR_KIT_ITEMS.hasMany(SIG_PPR_KIT_ITEMS, { as: "ID_SUB_FINALIDAD_SIG_PPR_KIT_ITEMs", foreignKey: "ID_SUB_FINALIDAD"});
  SIG_PPR_KIT_ITEMS.belongsTo(SI_PPR_KIT_ITEMS, { as: "SEC_KIT_SI_PPR_KIT_ITEM", foreignKey: "SEC_KIT"});
  SI_PPR_KIT_ITEMS.hasMany(SIG_PPR_KIT_ITEMS, { as: "SEC_KIT_SIG_PPR_KIT_ITEMs", foreignKey: "SEC_KIT"});
  SIG_PPR_KIT_ITEMS_EST.belongsTo(SI_PPR_KIT_ITEMS, { as: "ANO_EJE_SI_PPR_KIT_ITEM", foreignKey: "ANO_EJE"});
  SI_PPR_KIT_ITEMS.hasMany(SIG_PPR_KIT_ITEMS_EST, { as: "SIG_PPR_KIT_ITEMS_ESTs", foreignKey: "ANO_EJE"});
  SIG_PPR_KIT_ITEMS_EST.belongsTo(SI_PPR_KIT_ITEMS, { as: "ID_SUB_FINALIDAD_SI_PPR_KIT_ITEM", foreignKey: "ID_SUB_FINALIDAD"});
  SI_PPR_KIT_ITEMS.hasMany(SIG_PPR_KIT_ITEMS_EST, { as: "ID_SUB_FINALIDAD_SIG_PPR_KIT_ITEMS_ESTs", foreignKey: "ID_SUB_FINALIDAD"});
  SIG_PPR_KIT_ITEMS_EST.belongsTo(SI_PPR_KIT_ITEMS, { as: "SEC_KIT_SI_PPR_KIT_ITEM", foreignKey: "SEC_KIT"});
  SI_PPR_KIT_ITEMS.hasMany(SIG_PPR_KIT_ITEMS_EST, { as: "SEC_KIT_SIG_PPR_KIT_ITEMS_ESTs", foreignKey: "SEC_KIT"});
  SI_PROGRAMACION_DETA.belongsTo(SI_PROGRAMACION, { as: "ANO_EJE_SI_PROGRAMACION", foreignKey: "ANO_EJE"});
  SI_PROGRAMACION.hasMany(SI_PROGRAMACION_DETA, { as: "SI_PROGRAMACION_DETa", foreignKey: "ANO_EJE"});
  SI_PROGRAMACION_DETA.belongsTo(SI_PROGRAMACION, { as: "ID_SI_PROGRAMACION_SI_PROGRAMACION", foreignKey: "ID_SI_PROGRAMACION"});
  SI_PROGRAMACION.hasMany(SI_PROGRAMACION_DETA, { as: "ID_SI_PROGRAMACION_SI_PROGRAMACION_DETa", foreignKey: "ID_SI_PROGRAMACION"});
  SI_PROGRAMACION_DETA.belongsTo(SI_PROGRAMACION, { as: "SEC_EJEC_SI_PROGRAMACION", foreignKey: "SEC_EJEC"});
  SI_PROGRAMACION.hasMany(SI_PROGRAMACION_DETA, { as: "SEC_EJEC_SI_PROGRAMACION_DETa", foreignKey: "SEC_EJEC"});
  Act_Proy.belongsTo(Sub_Programa, { as: "ANO_EJE_Sub_Programa", foreignKey: "ANO_EJE"});
  Sub_Programa.hasMany(Act_Proy, { as: "Act_Proys", foreignKey: "ANO_EJE"});
  Act_Proy.belongsTo(Sub_Programa, { as: "funcion_Sub_Programa", foreignKey: "funcion"});
  Sub_Programa.hasMany(Act_Proy, { as: "funcion_Act_Proys", foreignKey: "funcion"});
  Act_Proy.belongsTo(Sub_Programa, { as: "programa_Sub_Programa", foreignKey: "programa"});
  Sub_Programa.hasMany(Act_Proy, { as: "programa_Act_Proys", foreignKey: "programa"});
  Act_Proy.belongsTo(Sub_Programa, { as: "sub_programa_Sub_Programa", foreignKey: "sub_programa"});
  Sub_Programa.hasMany(Act_Proy, { as: "sub_programa_Act_Proys", foreignKey: "sub_programa"});
  Sub_Programa.belongsTo(Sub_Programa_Nombre, { as: "ANO_EJE_Sub_Programa_Nombre", foreignKey: "ANO_EJE"});
  Sub_Programa_Nombre.hasMany(Sub_Programa, { as: "Sub_Programas", foreignKey: "ANO_EJE"});
  Sub_Programa.belongsTo(Sub_Programa_Nombre, { as: "sub_programa_Sub_Programa_Nombre", foreignKey: "sub_programa"});
  Sub_Programa_Nombre.hasMany(Sub_Programa, { as: "sub_programa_Sub_Programas", foreignKey: "sub_programa"});
  TIPO_B_A.belongsTo(TIPO_A, { as: "CODIGO_A_TIPO_A", foreignKey: "CODIGO_A"});
  TIPO_A.hasMany(TIPO_B_A, { as: "TIPO_B_As", foreignKey: "CODIGO_A"});
  TIPO_B_A.belongsTo(TIPO_B, { as: "CODIGO_B_TIPO_B", foreignKey: "CODIGO_B"});
  TIPO_B.hasMany(TIPO_B_A, { as: "TIPO_B_As", foreignKey: "CODIGO_B"});
  cert_det.belongsTo(cert_cab, { as: "secuencial_cert_cab", foreignKey: "secuencial"});
  cert_cab.hasMany(cert_det, { as: "cert_dets", foreignKey: "secuencial"});
  SIG_CLASE_ATRIBUTO.belongsTo(clase_bien_serv, { as: "CLASE_BIEN_clase_bien_serv", foreignKey: "CLASE_BIEN"});
  clase_bien_serv.hasMany(SIG_CLASE_ATRIBUTO, { as: "SIG_CLASE_ATRIBUTOs", foreignKey: "CLASE_BIEN"});
  SIG_CLASE_ATRIBUTO.belongsTo(clase_bien_serv, { as: "GRUPO_BIEN_clase_bien_serv", foreignKey: "GRUPO_BIEN"});
  clase_bien_serv.hasMany(SIG_CLASE_ATRIBUTO, { as: "GRUPO_BIEN_SIG_CLASE_ATRIBUTOs", foreignKey: "GRUPO_BIEN"});
  SIG_CLASE_ATRIBUTO.belongsTo(clase_bien_serv, { as: "TIPO_BIEN_clase_bien_serv", foreignKey: "TIPO_BIEN"});
  clase_bien_serv.hasMany(SIG_CLASE_ATRIBUTO, { as: "TIPO_BIEN_SIG_CLASE_ATRIBUTOs", foreignKey: "TIPO_BIEN"});
  familia_bien_serv.belongsTo(clase_bien_serv, { as: "clase_bien_clase_bien_serv", foreignKey: "clase_bien"});
  clase_bien_serv.hasMany(familia_bien_serv, { as: "familia_bien_servs", foreignKey: "clase_bien"});
  familia_bien_serv.belongsTo(clase_bien_serv, { as: "grupo_bien_clase_bien_serv", foreignKey: "grupo_bien"});
  clase_bien_serv.hasMany(familia_bien_serv, { as: "grupo_bien_familia_bien_servs", foreignKey: "grupo_bien"});
  familia_bien_serv.belongsTo(clase_bien_serv, { as: "tipo_bien_clase_bien_serv", foreignKey: "tipo_bien"});
  clase_bien_serv.hasMany(familia_bien_serv, { as: "tipo_bien_familia_bien_servs", foreignKey: "tipo_bien"});
  codigo_general_det.belongsTo(codigo_general, { as: "codigo_codigo_general", foreignKey: "codigo"});
  codigo_general.hasMany(codigo_general_det, { as: "codigo_general_dets", foreignKey: "codigo"});
  Acumulado.belongsTo(ejecutora, { as: "sec_ejec_ejecutora", foreignKey: "sec_ejec"});
  ejecutora.hasMany(Acumulado, { as: "Acumulados", foreignKey: "sec_ejec"});
  Componente_Ejec.belongsTo(ejecutora, { as: "sec_ejec_ejecutora", foreignKey: "sec_ejec"});
  ejecutora.hasMany(Componente_Ejec, { as: "Componente_Ejecs", foreignKey: "sec_ejec"});
  Fuente_Financ_Ejec.belongsTo(ejecutora, { as: "SEC_EJEC_ejecutora", foreignKey: "SEC_EJEC"});
  ejecutora.hasMany(Fuente_Financ_Ejec, { as: "Fuente_Financ_Ejecs", foreignKey: "SEC_EJEC"});
  SIG_CUADRO_STOCK_ESTIMADO.belongsTo(ejecutora, { as: "SEC_EJEC_ejecutora", foreignKey: "SEC_EJEC"});
  ejecutora.hasMany(SIG_CUADRO_STOCK_ESTIMADO, { as: "SIG_CUADRO_STOCK_ESTIMADOs", foreignKey: "SEC_EJEC"});
  SIG_FACTOR_EVALUACION.belongsTo(ejecutora, { as: "SEC_EJEC_ejecutora", foreignKey: "SEC_EJEC"});
  ejecutora.hasMany(SIG_FACTOR_EVALUACION, { as: "SIG_FACTOR_EVALUACIONs", foreignKey: "SEC_EJEC"});
  SIG_INVENTARIO_FISICO.belongsTo(ejecutora, { as: "sec_ejec_ejecutora", foreignKey: "sec_ejec"});
  ejecutora.hasMany(SIG_INVENTARIO_FISICO, { as: "SIG_INVENTARIO_FISICOs", foreignKey: "sec_ejec"});
  SIG_MOVIM_ALMACEN_TRANS.belongsTo(ejecutora, { as: "SEC_EJEC_ejecutora", foreignKey: "SEC_EJEC"});
  ejecutora.hasMany(SIG_MOVIM_ALMACEN_TRANS, { as: "SIG_MOVIM_ALMACEN_TRANs", foreignKey: "SEC_EJEC"});
  SIG_PAAC_CONSOLIDADO.belongsTo(ejecutora, { as: "SEC_EJEC_ejecutora", foreignKey: "SEC_EJEC"});
  ejecutora.hasMany(SIG_PAAC_CONSOLIDADO, { as: "SIG_PAAC_CONSOLIDADOs", foreignKey: "SEC_EJEC"});
  SIG_PROCESO_DE_SELECCION.belongsTo(ejecutora, { as: "SEC_EJEC_ejecutora", foreignKey: "SEC_EJEC"});
  ejecutora.hasMany(SIG_PROCESO_DE_SELECCION, { as: "SIG_PROCESO_DE_SELECCIONs", foreignKey: "SEC_EJEC"});
  sig_ejecutora.belongsTo(ejecutora, { as: "sec_ejec_ejecutora", foreignKey: "sec_ejec"});
  ejecutora.hasOne(sig_ejecutora, { as: "sig_ejecutora", foreignKey: "sec_ejec"});
  sig_meta_prop.belongsTo(ejecutora, { as: "sec_ejec_ejecutora", foreignKey: "sec_ejec"});
  ejecutora.hasMany(sig_meta_prop, { as: "sig_meta_props", foreignKey: "sec_ejec"});
  sig_tarea.belongsTo(ejecutora, { as: "sec_ejec_ejecutora", foreignKey: "sec_ejec"});
  ejecutora.hasMany(sig_tarea, { as: "sig_tareas", foreignKey: "sec_ejec"});
  SIG_CONVOCATORIA_SECUENCIA.belongsTo(elemento_ciiu, { as: "CATEGORIA_CIIU_elemento_ciiu", foreignKey: "CATEGORIA_CIIU"});
  elemento_ciiu.hasMany(SIG_CONVOCATORIA_SECUENCIA, { as: "SIG_CONVOCATORIA_SECUENCIa", foreignKey: "CATEGORIA_CIIU"});
  SIG_CONVOCATORIA_SECUENCIA.belongsTo(elemento_ciiu, { as: "ELEMENTO_CIIU_elemento_ciiu", foreignKey: "ELEMENTO_CIIU"});
  elemento_ciiu.hasMany(SIG_CONVOCATORIA_SECUENCIA, { as: "ELEMENTO_CIIU_SIG_CONVOCATORIA_SECUENCIa", foreignKey: "ELEMENTO_CIIU"});
  SIG_CONVOCATORIA_SECUENCIA.belongsTo(elemento_ciiu, { as: "GRUPO_CIIU_elemento_ciiu", foreignKey: "GRUPO_CIIU"});
  elemento_ciiu.hasMany(SIG_CONVOCATORIA_SECUENCIA, { as: "GRUPO_CIIU_SIG_CONVOCATORIA_SECUENCIa", foreignKey: "GRUPO_CIIU"});
  SIG_CONVOCATORIA_SECUENCIA.belongsTo(elemento_ciiu, { as: "TIPO_CIIU_elemento_ciiu", foreignKey: "TIPO_CIIU"});
  elemento_ciiu.hasMany(SIG_CONVOCATORIA_SECUENCIA, { as: "TIPO_CIIU_SIG_CONVOCATORIA_SECUENCIa", foreignKey: "TIPO_CIIU"});
  SIG_CONCEPTO_FAMILIA.belongsTo(familia_bien_serv, { as: "CLASE_BIEN_familia_bien_serv", foreignKey: "CLASE_BIEN"});
  familia_bien_serv.hasMany(SIG_CONCEPTO_FAMILIA, { as: "SIG_CONCEPTO_FAMILIa", foreignKey: "CLASE_BIEN"});
  SIG_CONCEPTO_FAMILIA.belongsTo(familia_bien_serv, { as: "FAMILIA_BIEN_familia_bien_serv", foreignKey: "FAMILIA_BIEN"});
  familia_bien_serv.hasMany(SIG_CONCEPTO_FAMILIA, { as: "FAMILIA_BIEN_SIG_CONCEPTO_FAMILIa", foreignKey: "FAMILIA_BIEN"});
  SIG_CONCEPTO_FAMILIA.belongsTo(familia_bien_serv, { as: "GRUPO_BIEN_familia_bien_serv", foreignKey: "GRUPO_BIEN"});
  familia_bien_serv.hasMany(SIG_CONCEPTO_FAMILIA, { as: "GRUPO_BIEN_SIG_CONCEPTO_FAMILIa", foreignKey: "GRUPO_BIEN"});
  SIG_CONCEPTO_FAMILIA.belongsTo(familia_bien_serv, { as: "TIPO_BIEN_familia_bien_serv", foreignKey: "TIPO_BIEN"});
  familia_bien_serv.hasMany(SIG_CONCEPTO_FAMILIA, { as: "TIPO_BIEN_SIG_CONCEPTO_FAMILIa", foreignKey: "TIPO_BIEN"});
  clase_bien_serv.belongsTo(grupo_bien_serv, { as: "grupo_bien_grupo_bien_serv", foreignKey: "grupo_bien"});
  grupo_bien_serv.hasMany(clase_bien_serv, { as: "clase_bien_servs", foreignKey: "grupo_bien"});
  clase_bien_serv.belongsTo(grupo_bien_serv, { as: "tipo_bien_grupo_bien_serv", foreignKey: "tipo_bien"});
  grupo_bien_serv.hasMany(clase_bien_serv, { as: "tipo_bien_clase_bien_servs", foreignKey: "tipo_bien"});
  users_menu.belongsTo(menus, { as: "cmenu", foreignKey: "cmenu_id"});
  menus.hasMany(users_menu, { as: "users_menus", foreignKey: "cmenu_id"});
  SIG_CONTRATO_MOVIM_PAGO.belongsTo(meta, { as: "SEC_FUNC_metum", foreignKey: "SEC_FUNC"});
  meta.hasMany(SIG_CONTRATO_MOVIM_PAGO, { as: "SIG_CONTRATO_MOVIM_PAGOs", foreignKey: "SEC_FUNC"});
  SIG_CONVOCATORIA_ITEM_PPTAL.belongsTo(meta, { as: "SEC_FUNC_metum", foreignKey: "SEC_FUNC"});
  meta.hasMany(SIG_CONVOCATORIA_ITEM_PPTAL, { as: "SIG_CONVOCATORIA_ITEM_PPTALs", foreignKey: "SEC_FUNC"});
  SIG_CUADRO_NECESIDAD.belongsTo(meta, { as: "sec_func_metum", foreignKey: "sec_func"});
  meta.hasMany(SIG_CUADRO_NECESIDAD, { as: "SIG_CUADRO_NECESIDADs", foreignKey: "sec_func"});
  SIG_DETALLE_METAS_CUADRO.belongsTo(meta, { as: "sec_func_metum", foreignKey: "sec_func"});
  meta.hasMany(SIG_DETALLE_METAS_CUADRO, { as: "SIG_DETALLE_METAS_CUADROs", foreignKey: "sec_func"});
  SIG_PAAC_METAS.belongsTo(meta, { as: "sec_func_metum", foreignKey: "sec_func"});
  meta.hasMany(SIG_PAAC_METAS, { as: "SIG_PAAC_METa", foreignKey: "sec_func"});
  SIG_TECHO_PRESUPUESTO.belongsTo(meta, { as: "ANO_EJE_metum", foreignKey: "ANO_EJE"});
  meta.hasMany(SIG_TECHO_PRESUPUESTO, { as: "SIG_TECHO_PRESUPUESTOs", foreignKey: "ANO_EJE"});
  SIG_TECHO_PRESUPUESTO.belongsTo(meta, { as: "SEC_EJEC_metum", foreignKey: "SEC_EJEC"});
  meta.hasMany(SIG_TECHO_PRESUPUESTO, { as: "SEC_EJEC_SIG_TECHO_PRESUPUESTOs", foreignKey: "SEC_EJEC"});
  SIG_TECHO_PRESUPUESTO.belongsTo(meta, { as: "sec_func_metum", foreignKey: "sec_func"});
  meta.hasMany(SIG_TECHO_PRESUPUESTO, { as: "sec_func_SIG_TECHO_PRESUPUESTOs", foreignKey: "sec_func"});
  sig_techo_presupuestal.belongsTo(meta, { as: "ano_eje_metum", foreignKey: "ano_eje"});
  meta.hasMany(sig_techo_presupuestal, { as: "sig_techo_presupuestals", foreignKey: "ano_eje"});
  sig_techo_presupuestal.belongsTo(meta, { as: "sec_ejec_metum", foreignKey: "sec_ejec"});
  meta.hasMany(sig_techo_presupuestal, { as: "sec_ejec_sig_techo_presupuestals", foreignKey: "sec_ejec"});
  sig_techo_presupuestal.belongsTo(meta, { as: "sec_func_metum", foreignKey: "sec_func"});
  meta.hasMany(sig_techo_presupuestal, { as: "sec_func_sig_techo_presupuestals", foreignKey: "sec_func"});
  SIG_CONCEPTO_GASTO.belongsTo(operacion, { as: "ANO_EJE_operacion", foreignKey: "ANO_EJE"});
  operacion.hasMany(SIG_CONCEPTO_GASTO, { as: "SIG_CONCEPTO_GASTOs", foreignKey: "ANO_EJE"});
  SIG_CONCEPTO_GASTO.belongsTo(operacion, { as: "OPERACION_operacion", foreignKey: "OPERACION"});
  operacion.hasMany(SIG_CONCEPTO_GASTO, { as: "OPERACION_SIG_CONCEPTO_GASTOs", foreignKey: "OPERACION"});
  sig_personal.belongsTo(pais, { as: "pais_nac_pai", foreignKey: "pais_nac"});
  pais.hasMany(sig_personal, { as: "sig_personals", foreignKey: "pais_nac"});
  SGE_KARDEX_MENSUAL.belongsTo(pliego, { as: "PLIEGO_pliego", foreignKey: "PLIEGO"});
  pliego.hasMany(SGE_KARDEX_MENSUAL, { as: "SGE_KARDEX_MENSUALs", foreignKey: "PLIEGO"});
  SGE_KARDEX_MENSUAL.belongsTo(pliego, { as: "SECTOR_pliego", foreignKey: "SECTOR"});
  pliego.hasMany(SGE_KARDEX_MENSUAL, { as: "SECTOR_SGE_KARDEX_MENSUALs", foreignKey: "SECTOR"});
  SGE_KARDEX_MENSUAL_EXP.belongsTo(pliego, { as: "PLIEGO_pliego", foreignKey: "PLIEGO"});
  pliego.hasMany(SGE_KARDEX_MENSUAL_EXP, { as: "SGE_KARDEX_MENSUAL_EXPs", foreignKey: "PLIEGO"});
  SGE_KARDEX_MENSUAL_EXP.belongsTo(pliego, { as: "SECTOR_pliego", foreignKey: "SECTOR"});
  pliego.hasMany(SGE_KARDEX_MENSUAL_EXP, { as: "SECTOR_SGE_KARDEX_MENSUAL_EXPs", foreignKey: "SECTOR"});
  gestora.belongsTo(pliego, { as: "pliego_pliego", foreignKey: "pliego"});
  pliego.hasMany(gestora, { as: "gestoras", foreignKey: "pliego"});
  gestora.belongsTo(pliego, { as: "sector_pliego", foreignKey: "sector"});
  pliego.hasMany(gestora, { as: "sector_gestoras", foreignKey: "sector"});
  sig_pliego.belongsTo(pliego, { as: "pliego_pliego", foreignKey: "pliego"});
  pliego.hasMany(sig_pliego, { as: "sig_pliegos", foreignKey: "pliego"});
  sig_pliego.belongsTo(pliego, { as: "sector_pliego", foreignKey: "sector"});
  pliego.hasMany(sig_pliego, { as: "sector_sig_pliegos", foreignKey: "sector"});
  sig_sedes.belongsTo(pliego, { as: "pliego_pliego", foreignKey: "pliego"});
  pliego.hasMany(sig_sedes, { as: "sig_sedes", foreignKey: "pliego"});
  sig_sedes.belongsTo(pliego, { as: "sector_pliego", foreignKey: "sector"});
  pliego.hasMany(sig_sedes, { as: "sector_sig_sedes", foreignKey: "sector"});
  pliego.belongsTo(sector, { as: "sector_sector", foreignKey: "sector"});
  sector.hasMany(pliego, { as: "pliegos", foreignKey: "sector"});
  SIG_CUADRO_MODIFICADO_DET.belongsTo(sig_centro_costo_tarea, { as: "CENTRO_COSTO_sig_centro_costo_tarea", foreignKey: "CENTRO_COSTO"});
  sig_centro_costo_tarea.hasMany(SIG_CUADRO_MODIFICADO_DET, { as: "SIG_CUADRO_MODIFICADO_DETs", foreignKey: "CENTRO_COSTO"});
  SIG_CUADRO_MODIFICADO_DET.belongsTo(sig_centro_costo_tarea, { as: "CODIGO_TAREA_sig_centro_costo_tarea", foreignKey: "CODIGO_TAREA"});
  sig_centro_costo_tarea.hasMany(SIG_CUADRO_MODIFICADO_DET, { as: "CODIGO_TAREA_SIG_CUADRO_MODIFICADO_DETs", foreignKey: "CODIGO_TAREA"});
  SIG_CUADRO_MODIFICADO_DET.belongsTo(sig_centro_costo_tarea, { as: "NIVEL_TAREA_sig_centro_costo_tarea", foreignKey: "NIVEL_TAREA"});
  sig_centro_costo_tarea.hasMany(SIG_CUADRO_MODIFICADO_DET, { as: "NIVEL_TAREA_SIG_CUADRO_MODIFICADO_DETs", foreignKey: "NIVEL_TAREA"});
  SIG_CUADRO_MODIFICADO_DET.belongsTo(sig_centro_costo_tarea, { as: "TIPO_TAREA_sig_centro_costo_tarea", foreignKey: "TIPO_TAREA"});
  sig_centro_costo_tarea.hasMany(SIG_CUADRO_MODIFICADO_DET, { as: "TIPO_TAREA_SIG_CUADRO_MODIFICADO_DETs", foreignKey: "TIPO_TAREA"});
  SIG_CUADRO_TRANSFERENCIA.belongsTo(sig_centro_costo_tarea, { as: "ORIG_CODIGO_TAREA_sig_centro_costo_tarea", foreignKey: "ORIG_CODIGO_TAREA"});
  sig_centro_costo_tarea.hasMany(SIG_CUADRO_TRANSFERENCIA, { as: "SIG_CUADRO_TRANSFERENCIa", foreignKey: "ORIG_CODIGO_TAREA"});
  SIG_CUADRO_TRANSFERENCIA.belongsTo(sig_centro_costo_tarea, { as: "ORIG_NIVEL_TAREA_sig_centro_costo_tarea", foreignKey: "ORIG_NIVEL_TAREA"});
  sig_centro_costo_tarea.hasMany(SIG_CUADRO_TRANSFERENCIA, { as: "ORIG_NIVEL_TAREA_SIG_CUADRO_TRANSFERENCIa", foreignKey: "ORIG_NIVEL_TAREA"});
  SIG_CUADRO_TRANSFERENCIA.belongsTo(sig_centro_costo_tarea, { as: "ORIG_TIPO_TAREA_sig_centro_costo_tarea", foreignKey: "ORIG_TIPO_TAREA"});
  sig_centro_costo_tarea.hasMany(SIG_CUADRO_TRANSFERENCIA, { as: "ORIG_TIPO_TAREA_SIG_CUADRO_TRANSFERENCIa", foreignKey: "ORIG_TIPO_TAREA"});
  SIG_DEPEN_META_CUADRO.belongsTo(sig_centro_costo_tarea, { as: "CODIGO_TAREA_sig_centro_costo_tarea", foreignKey: "CODIGO_TAREA"});
  sig_centro_costo_tarea.hasMany(SIG_DEPEN_META_CUADRO, { as: "SIG_DEPEN_META_CUADROs", foreignKey: "CODIGO_TAREA"});
  SIG_DEPEN_META_CUADRO.belongsTo(sig_centro_costo_tarea, { as: "NIVEL_TAREA_sig_centro_costo_tarea", foreignKey: "NIVEL_TAREA"});
  sig_centro_costo_tarea.hasMany(SIG_DEPEN_META_CUADRO, { as: "NIVEL_TAREA_SIG_DEPEN_META_CUADROs", foreignKey: "NIVEL_TAREA"});
  SIG_DEPEN_META_CUADRO.belongsTo(sig_centro_costo_tarea, { as: "TIPO_TAREA_sig_centro_costo_tarea", foreignKey: "TIPO_TAREA"});
  sig_centro_costo_tarea.hasMany(SIG_DEPEN_META_CUADRO, { as: "TIPO_TAREA_SIG_DEPEN_META_CUADROs", foreignKey: "TIPO_TAREA"});
  SIG_MOVIM_ALMACEN.belongsTo(sig_centro_costo_tarea, { as: "CODIGO_TAREA_sig_centro_costo_tarea", foreignKey: "CODIGO_TAREA"});
  sig_centro_costo_tarea.hasMany(SIG_MOVIM_ALMACEN, { as: "SIG_MOVIM_ALMACENs", foreignKey: "CODIGO_TAREA"});
  SIG_MOVIM_ALMACEN.belongsTo(sig_centro_costo_tarea, { as: "NIVEL_TAREA_sig_centro_costo_tarea", foreignKey: "NIVEL_TAREA"});
  sig_centro_costo_tarea.hasMany(SIG_MOVIM_ALMACEN, { as: "NIVEL_TAREA_SIG_MOVIM_ALMACENs", foreignKey: "NIVEL_TAREA"});
  SIG_MOVIM_ALMACEN.belongsTo(sig_centro_costo_tarea, { as: "TIPO_TAREA_sig_centro_costo_tarea", foreignKey: "TIPO_TAREA"});
  sig_centro_costo_tarea.hasMany(SIG_MOVIM_ALMACEN, { as: "TIPO_TAREA_SIG_MOVIM_ALMACENs", foreignKey: "TIPO_TAREA"});
  SIG_PAAC_CENTRO_COSTO.belongsTo(sig_centro_costo_tarea, { as: "ANO_EJE_sig_centro_costo_tarea", foreignKey: "ANO_EJE"});
  sig_centro_costo_tarea.hasMany(SIG_PAAC_CENTRO_COSTO, { as: "SIG_PAAC_CENTRO_COSTOs", foreignKey: "ANO_EJE"});
  SIG_PAAC_CENTRO_COSTO.belongsTo(sig_centro_costo_tarea, { as: "CENTRO_COSTO_sig_centro_costo_tarea", foreignKey: "CENTRO_COSTO"});
  sig_centro_costo_tarea.hasMany(SIG_PAAC_CENTRO_COSTO, { as: "CENTRO_COSTO_SIG_PAAC_CENTRO_COSTOs", foreignKey: "CENTRO_COSTO"});
  SIG_PAAC_CENTRO_COSTO.belongsTo(sig_centro_costo_tarea, { as: "SEC_EJEC_sig_centro_costo_tarea", foreignKey: "SEC_EJEC"});
  sig_centro_costo_tarea.hasMany(SIG_PAAC_CENTRO_COSTO, { as: "SEC_EJEC_SIG_PAAC_CENTRO_COSTOs", foreignKey: "SEC_EJEC"});
  SIG_PAAC_CENTRO_COSTO.belongsTo(sig_centro_costo_tarea, { as: "CODIGO_TAREA_sig_centro_costo_tarea", foreignKey: "CODIGO_TAREA"});
  sig_centro_costo_tarea.hasMany(SIG_PAAC_CENTRO_COSTO, { as: "CODIGO_TAREA_SIG_PAAC_CENTRO_COSTOs", foreignKey: "CODIGO_TAREA"});
  SIG_PAAC_CENTRO_COSTO.belongsTo(sig_centro_costo_tarea, { as: "NIVEL_TAREA_sig_centro_costo_tarea", foreignKey: "NIVEL_TAREA"});
  sig_centro_costo_tarea.hasMany(SIG_PAAC_CENTRO_COSTO, { as: "NIVEL_TAREA_SIG_PAAC_CENTRO_COSTOs", foreignKey: "NIVEL_TAREA"});
  SIG_PAAC_CENTRO_COSTO.belongsTo(sig_centro_costo_tarea, { as: "TIPO_TAREA_sig_centro_costo_tarea", foreignKey: "TIPO_TAREA"});
  sig_centro_costo_tarea.hasMany(SIG_PAAC_CENTRO_COSTO, { as: "TIPO_TAREA_SIG_PAAC_CENTRO_COSTOs", foreignKey: "TIPO_TAREA"});
  SIG_PEDIDOS.belongsTo(sig_centro_costo_tarea, { as: "ANO_EJE_sig_centro_costo_tarea", foreignKey: "ANO_EJE"});
  sig_centro_costo_tarea.hasMany(SIG_PEDIDOS, { as: "SIG_PEDIDOs", foreignKey: "ANO_EJE"});
  SIG_PEDIDOS.belongsTo(sig_centro_costo_tarea, { as: "CENTRO_COSTO_sig_centro_costo_tarea", foreignKey: "CENTRO_COSTO"});
  sig_centro_costo_tarea.hasMany(SIG_PEDIDOS, { as: "CENTRO_COSTO_SIG_PEDIDOs", foreignKey: "CENTRO_COSTO"});
  SIG_PEDIDOS.belongsTo(sig_centro_costo_tarea, { as: "CODIGO_TAREA_sig_centro_costo_tarea", foreignKey: "CODIGO_TAREA"});
  sig_centro_costo_tarea.hasMany(SIG_PEDIDOS, { as: "CODIGO_TAREA_SIG_PEDIDOs", foreignKey: "CODIGO_TAREA"});
  SIG_PEDIDOS.belongsTo(sig_centro_costo_tarea, { as: "NIVEL_TAREA_sig_centro_costo_tarea", foreignKey: "NIVEL_TAREA"});
  sig_centro_costo_tarea.hasMany(SIG_PEDIDOS, { as: "NIVEL_TAREA_SIG_PEDIDOs", foreignKey: "NIVEL_TAREA"});
  SIG_PEDIDOS.belongsTo(sig_centro_costo_tarea, { as: "TIPO_TAREA_sig_centro_costo_tarea", foreignKey: "TIPO_TAREA"});
  sig_centro_costo_tarea.hasMany(SIG_PEDIDOS, { as: "TIPO_TAREA_SIG_PEDIDOs", foreignKey: "TIPO_TAREA"});
  sig_cuadro_anual.belongsTo(sig_centro_costo_tarea, { as: "codigo_tarea_sig_centro_costo_tarea", foreignKey: "codigo_tarea"});
  sig_centro_costo_tarea.hasMany(sig_cuadro_anual, { as: "sig_cuadro_anuals", foreignKey: "codigo_tarea"});
  sig_cuadro_anual.belongsTo(sig_centro_costo_tarea, { as: "nivel_tarea_sig_centro_costo_tarea", foreignKey: "nivel_tarea"});
  sig_centro_costo_tarea.hasMany(sig_cuadro_anual, { as: "nivel_tarea_sig_cuadro_anuals", foreignKey: "nivel_tarea"});
  sig_cuadro_anual.belongsTo(sig_centro_costo_tarea, { as: "tipo_tarea_sig_centro_costo_tarea", foreignKey: "tipo_tarea"});
  sig_centro_costo_tarea.hasMany(sig_cuadro_anual, { as: "tipo_tarea_sig_cuadro_anuals", foreignKey: "tipo_tarea"});
  sig_detalle_cuadro_anual.belongsTo(sig_cuadro_anual, { as: "sec_ejec_sig_cuadro_anual", foreignKey: "sec_ejec"});
  sig_cuadro_anual.hasMany(sig_detalle_cuadro_anual, { as: "sig_detalle_cuadro_anuals", foreignKey: "sec_ejec"});
  sig_detalle_cuadro_anual.belongsTo(sig_cuadro_anual, { as: "ano_eje_sig_cuadro_anual", foreignKey: "ano_eje"});
  sig_cuadro_anual.hasMany(sig_detalle_cuadro_anual, { as: "ano_eje_sig_detalle_cuadro_anuals", foreignKey: "ano_eje"});
  sig_detalle_cuadro_anual.belongsTo(sig_cuadro_anual, { as: "centro_costo_sig_cuadro_anual", foreignKey: "centro_costo"});
  sig_cuadro_anual.hasMany(sig_detalle_cuadro_anual, { as: "centro_costo_sig_detalle_cuadro_anuals", foreignKey: "centro_costo"});
  sig_detalle_cuadro_anual.belongsTo(sig_cuadro_anual, { as: "codigo_tarea_sig_cuadro_anual", foreignKey: "codigo_tarea"});
  sig_cuadro_anual.hasMany(sig_detalle_cuadro_anual, { as: "codigo_tarea_sig_detalle_cuadro_anuals", foreignKey: "codigo_tarea"});
  sig_detalle_cuadro_anual.belongsTo(sig_cuadro_anual, { as: "nivel_tarea_sig_cuadro_anual", foreignKey: "nivel_tarea"});
  sig_cuadro_anual.hasMany(sig_detalle_cuadro_anual, { as: "nivel_tarea_sig_detalle_cuadro_anuals", foreignKey: "nivel_tarea"});
  sig_detalle_cuadro_anual.belongsTo(sig_cuadro_anual, { as: "secuencia_sig_cuadro_anual", foreignKey: "secuencia"});
  sig_cuadro_anual.hasMany(sig_detalle_cuadro_anual, { as: "secuencia_sig_detalle_cuadro_anuals", foreignKey: "secuencia"});
  sig_detalle_cuadro_anual.belongsTo(sig_cuadro_anual, { as: "tipo_tarea_sig_cuadro_anual", foreignKey: "tipo_tarea"});
  sig_cuadro_anual.hasMany(sig_detalle_cuadro_anual, { as: "tipo_tarea_sig_detalle_cuadro_anuals", foreignKey: "tipo_tarea"});
  SIG_PARAMETRO_EJECUTORA_ANIO.belongsTo(sig_ejecutora, { as: "SEC_EJEC_sig_ejecutora", foreignKey: "SEC_EJEC"});
  sig_ejecutora.hasMany(SIG_PARAMETRO_EJECUTORA_ANIO, { as: "SIG_PARAMETRO_EJECUTORA_ANIOs", foreignKey: "SEC_EJEC"});
  SIG_PPR_KIT_ITEMS.belongsTo(sig_ejecutora, { as: "SEC_EJEC_sig_ejecutora", foreignKey: "SEC_EJEC"});
  sig_ejecutora.hasMany(SIG_PPR_KIT_ITEMS, { as: "SIG_PPR_KIT_ITEMs", foreignKey: "SEC_EJEC"});
  SIG_PPR_KIT_ITEMS_EST.belongsTo(sig_ejecutora, { as: "SEC_EJEC_sig_ejecutora", foreignKey: "SEC_EJEC"});
  sig_ejecutora.hasMany(SIG_PPR_KIT_ITEMS_EST, { as: "SIG_PPR_KIT_ITEMS_ESTs", foreignKey: "SEC_EJEC"});
  sig_parametro_ejecutora.belongsTo(sig_ejecutora, { as: "sec_ejec_sig_ejecutora", foreignKey: "sec_ejec"});
  sig_ejecutora.hasMany(sig_parametro_ejecutora, { as: "sig_parametro_ejecutoras", foreignKey: "sec_ejec"});
  sig_usuario_ejecutora.belongsTo(sig_ejecutora, { as: "sec_ejec_sig_ejecutora", foreignKey: "sec_ejec"});
  sig_ejecutora.hasMany(sig_usuario_ejecutora, { as: "sig_usuario_ejecutoras", foreignKey: "sec_ejec"});
  SIG_PARAMETRO_EJECUTORA_ANIO.belongsTo(sig_maestro, { as: "cod_maestro_sig_maestro", foreignKey: "cod_maestro"});
  sig_maestro.hasMany(SIG_PARAMETRO_EJECUTORA_ANIO, { as: "SIG_PARAMETRO_EJECUTORA_ANIOs", foreignKey: "cod_maestro"});
  sig_maestro_det_cadena.belongsTo(sig_maestro, { as: "cod_maestro_sig_maestro", foreignKey: "cod_maestro"});
  sig_maestro.hasMany(sig_maestro_det_cadena, { as: "sig_maestro_det_cadenas", foreignKey: "cod_maestro"});
  sig_maestro_det_numerico.belongsTo(sig_maestro, { as: "cod_maestro_sig_maestro", foreignKey: "cod_maestro"});
  sig_maestro.hasMany(sig_maestro_det_numerico, { as: "sig_maestro_det_numericos", foreignKey: "cod_maestro"});
  sig_maestro_det_referencia.belongsTo(sig_maestro, { as: "cod_maestro_sig_maestro", foreignKey: "cod_maestro"});
  sig_maestro.hasMany(sig_maestro_det_referencia, { as: "sig_maestro_det_referencia", foreignKey: "cod_maestro"});
  sig_maestro_parametro.belongsTo(sig_maestro, { as: "cod_maestro_sig_maestro", foreignKey: "cod_maestro"});
  sig_maestro.hasMany(sig_maestro_parametro, { as: "sig_maestro_parametros", foreignKey: "cod_maestro"});
  sig_parametro_ejecutora.belongsTo(sig_maestro, { as: "cod_maestro_sig_maestro", foreignKey: "cod_maestro"});
  sig_maestro.hasMany(sig_parametro_ejecutora, { as: "sig_parametro_ejecutoras", foreignKey: "cod_maestro"});
  sig_cuadro_anual.belongsTo(sig_meta_prop, { as: "ano_eje_sig_meta_prop", foreignKey: "ano_eje"});
  sig_meta_prop.hasMany(sig_cuadro_anual, { as: "sig_cuadro_anuals", foreignKey: "ano_eje"});
  sig_cuadro_anual.belongsTo(sig_meta_prop, { as: "sec_ejec_sig_meta_prop", foreignKey: "sec_ejec"});
  sig_meta_prop.hasMany(sig_cuadro_anual, { as: "sec_ejec_sig_cuadro_anuals", foreignKey: "sec_ejec"});
  sig_cuadro_anual.belongsTo(sig_meta_prop, { as: "sec_func_sig_meta_prop", foreignKey: "sec_func"});
  sig_meta_prop.hasMany(sig_cuadro_anual, { as: "sec_func_sig_cuadro_anuals", foreignKey: "sec_func"});
  SIG_MA_CENTRO_RUBRO.belongsTo(sig_metas_x_centro, { as: "ANO_EJE_sig_metas_x_centro", foreignKey: "ANO_EJE"});
  sig_metas_x_centro.hasMany(SIG_MA_CENTRO_RUBRO, { as: "SIG_MA_CENTRO_RUBROs", foreignKey: "ANO_EJE"});
  SIG_MA_CENTRO_RUBRO.belongsTo(sig_metas_x_centro, { as: "CENTRO_COSTO_sig_metas_x_centro", foreignKey: "CENTRO_COSTO"});
  sig_metas_x_centro.hasMany(SIG_MA_CENTRO_RUBRO, { as: "CENTRO_COSTO_SIG_MA_CENTRO_RUBROs", foreignKey: "CENTRO_COSTO"});
  SIG_MA_CENTRO_RUBRO.belongsTo(sig_metas_x_centro, { as: "SEC_EJEC_sig_metas_x_centro", foreignKey: "SEC_EJEC"});
  sig_metas_x_centro.hasMany(SIG_MA_CENTRO_RUBRO, { as: "SEC_EJEC_SIG_MA_CENTRO_RUBROs", foreignKey: "SEC_EJEC"});
  SIG_MA_CENTRO_RUBRO.belongsTo(sig_metas_x_centro, { as: "SECUENCIA_sig_metas_x_centro", foreignKey: "SECUENCIA"});
  sig_metas_x_centro.hasMany(SIG_MA_CENTRO_RUBRO, { as: "SECUENCIA_SIG_MA_CENTRO_RUBROs", foreignKey: "SECUENCIA"});
  SIG_ALMACEN.belongsTo(sig_personal, { as: "EMPLEADO_sig_personal", foreignKey: "EMPLEADO"});
  sig_personal.hasMany(SIG_ALMACEN, { as: "SIG_ALMACENs", foreignKey: "EMPLEADO"});
  SIG_ALMACEN.belongsTo(sig_personal, { as: "sec_ejec_sig_personal", foreignKey: "sec_ejec"});
  sig_personal.hasMany(SIG_ALMACEN, { as: "sec_ejec_SIG_ALMACENs", foreignKey: "sec_ejec"});
  SIG_ASIGNACIONES.belongsTo(sig_personal, { as: "SEC_EJEC_sig_personal", foreignKey: "SEC_EJEC"});
  sig_personal.hasMany(SIG_ASIGNACIONES, { as: "SIG_ASIGNACIONEs", foreignKey: "SEC_EJEC"});
  SIG_ASIGNACIONES.belongsTo(sig_personal, { as: "EMPLEADO_sig_personal", foreignKey: "EMPLEADO"});
  sig_personal.hasMany(SIG_ASIGNACIONES, { as: "EMPLEADO_SIG_ASIGNACIONEs", foreignKey: "EMPLEADO"});
  SIG_ASIGNACIONES_BD.belongsTo(sig_personal, { as: "SEC_EJEC_sig_personal", foreignKey: "SEC_EJEC"});
  sig_personal.hasMany(SIG_ASIGNACIONES_BD, { as: "SIG_ASIGNACIONES_BDs", foreignKey: "SEC_EJEC"});
  SIG_ASIGNACIONES_BD.belongsTo(sig_personal, { as: "EMPLEADO_sig_personal", foreignKey: "EMPLEADO"});
  sig_personal.hasMany(SIG_ASIGNACIONES_BD, { as: "EMPLEADO_SIG_ASIGNACIONES_BDs", foreignKey: "EMPLEADO"});
  SIG_BIENES_DURADEROS.belongsTo(sig_personal, { as: "SEC_EJEC_sig_personal", foreignKey: "SEC_EJEC"});
  sig_personal.hasMany(SIG_BIENES_DURADEROS, { as: "SIG_BIENES_DURADEROs", foreignKey: "SEC_EJEC"});
  SIG_BIENES_DURADEROS.belongsTo(sig_personal, { as: "EMPLEADO_sig_personal", foreignKey: "EMPLEADO"});
  sig_personal.hasMany(SIG_BIENES_DURADEROS, { as: "EMPLEADO_SIG_BIENES_DURADEROs", foreignKey: "EMPLEADO"});
  SIG_CENTRO_COSTO_PERSONAL.belongsTo(sig_personal, { as: "SEC_EJEC_sig_personal", foreignKey: "SEC_EJEC"});
  sig_personal.hasMany(SIG_CENTRO_COSTO_PERSONAL, { as: "SIG_CENTRO_COSTO_PERSONALs", foreignKey: "SEC_EJEC"});
  SIG_CENTRO_COSTO_PERSONAL.belongsTo(sig_personal, { as: "EMPLEADO_sig_personal", foreignKey: "EMPLEADO"});
  sig_personal.hasMany(SIG_CENTRO_COSTO_PERSONAL, { as: "EMPLEADO_SIG_CENTRO_COSTO_PERSONALs", foreignKey: "EMPLEADO"});
  SIG_CUADRO_ADQUISICION.belongsTo(sig_personal, { as: "SEC_EJEC_sig_personal", foreignKey: "SEC_EJEC"});
  sig_personal.hasMany(SIG_CUADRO_ADQUISICION, { as: "SIG_CUADRO_ADQUISICIONs", foreignKey: "SEC_EJEC"});
  SIG_CUADRO_ADQUISICION.belongsTo(sig_personal, { as: "EMPLEADO_sig_personal", foreignKey: "EMPLEADO"});
  sig_personal.hasMany(SIG_CUADRO_ADQUISICION, { as: "EMPLEADO_SIG_CUADRO_ADQUISICIONs", foreignKey: "EMPLEADO"});
  SIG_DETALLE_PEDIDO_COMISIONADO.belongsTo(sig_personal, { as: "SEC_EJEC_sig_personal", foreignKey: "SEC_EJEC"});
  sig_personal.hasMany(SIG_DETALLE_PEDIDO_COMISIONADO, { as: "SIG_DETALLE_PEDIDO_COMISIONADOs", foreignKey: "SEC_EJEC"});
  SIG_DETALLE_PEDIDO_COMISIONADO.belongsTo(sig_personal, { as: "EMPLEADO_sig_personal", foreignKey: "EMPLEADO"});
  sig_personal.hasMany(SIG_DETALLE_PEDIDO_COMISIONADO, { as: "EMPLEADO_SIG_DETALLE_PEDIDO_COMISIONADOs", foreignKey: "EMPLEADO"});
  SIG_MOVIMIENTO_ACTIVO.belongsTo(sig_personal, { as: "sec_ejec_sig_personal", foreignKey: "sec_ejec"});
  sig_personal.hasMany(SIG_MOVIMIENTO_ACTIVO, { as: "SIG_MOVIMIENTO_ACTIVOs", foreignKey: "sec_ejec"});
  SIG_MOVIMIENTO_ACTIVO.belongsTo(sig_personal, { as: "EMPLEADO_sig_personal", foreignKey: "EMPLEADO"});
  sig_personal.hasMany(SIG_MOVIMIENTO_ACTIVO, { as: "EMPLEADO_SIG_MOVIMIENTO_ACTIVOs", foreignKey: "EMPLEADO"});
  SIG_MOVIMIENTO_BIENES.belongsTo(sig_personal, { as: "SEC_EJEC_sig_personal", foreignKey: "SEC_EJEC"});
  sig_personal.hasMany(SIG_MOVIMIENTO_BIENES, { as: "SIG_MOVIMIENTO_BIENEs", foreignKey: "SEC_EJEC"});
  SIG_MOVIMIENTO_BIENES.belongsTo(sig_personal, { as: "EMPLEADO_sig_personal", foreignKey: "EMPLEADO"});
  sig_personal.hasMany(SIG_MOVIMIENTO_BIENES, { as: "EMPLEADO_SIG_MOVIMIENTO_BIENEs", foreignKey: "EMPLEADO"});
  SIG_MOVIMIENTO_PERSONAL.belongsTo(sig_personal, { as: "empleado_sig_personal", foreignKey: "empleado"});
  sig_personal.hasMany(SIG_MOVIMIENTO_PERSONAL, { as: "SIG_MOVIMIENTO_PERSONALs", foreignKey: "empleado"});
  SIG_MOVIMIENTO_PERSONAL.belongsTo(sig_personal, { as: "sec_ejec_sig_personal", foreignKey: "sec_ejec"});
  sig_personal.hasMany(SIG_MOVIMIENTO_PERSONAL, { as: "sec_ejec_SIG_MOVIMIENTO_PERSONALs", foreignKey: "sec_ejec"});
  SIG_PATRIMONIO.belongsTo(sig_personal, { as: "SEC_EJEC_sig_personal", foreignKey: "SEC_EJEC"});
  sig_personal.hasMany(SIG_PATRIMONIO, { as: "SIG_PATRIMONIOs", foreignKey: "SEC_EJEC"});
  SIG_PATRIMONIO.belongsTo(sig_personal, { as: "EMPLEADO_sig_personal", foreignKey: "EMPLEADO"});
  sig_personal.hasMany(SIG_PATRIMONIO, { as: "EMPLEADO_SIG_PATRIMONIOs", foreignKey: "EMPLEADO"});
  SIG_PEDIDOS.belongsTo(sig_personal, { as: "EMPLEADO_sig_personal", foreignKey: "EMPLEADO"});
  sig_personal.hasMany(SIG_PEDIDOS, { as: "SIG_PEDIDOs", foreignKey: "EMPLEADO"});
  SIG_PERSONAL_FIRMA.belongsTo(sig_personal, { as: "empleado_sig_personal", foreignKey: "empleado"});
  sig_personal.hasMany(SIG_PERSONAL_FIRMA, { as: "SIG_PERSONAL_FIRMAs", foreignKey: "empleado"});
  SIG_PERSONAL_FIRMA.belongsTo(sig_personal, { as: "sec_ejec_sig_personal", foreignKey: "sec_ejec"});
  sig_personal.hasMany(SIG_PERSONAL_FIRMA, { as: "sec_ejec_SIG_PERSONAL_FIRMAs", foreignKey: "sec_ejec"});
  SIG_PROCESO_COMITE.belongsTo(sig_personal, { as: "EMPLEADO_sig_personal", foreignKey: "EMPLEADO"});
  sig_personal.hasMany(SIG_PROCESO_COMITE, { as: "SIG_PROCESO_COMITEs", foreignKey: "EMPLEADO"});
  sig_ejecutora.belongsTo(sig_pliego, { as: "pliego_sig_pliego", foreignKey: "pliego"});
  sig_pliego.hasMany(sig_ejecutora, { as: "sig_ejecutoras", foreignKey: "pliego"});
  sig_ejecutora.belongsTo(sig_pliego, { as: "sector_sig_pliego", foreignKey: "sector"});
  sig_pliego.hasMany(sig_ejecutora, { as: "sector_sig_ejecutoras", foreignKey: "sector"});
  sig_ppr_ups.belongsTo(sig_ppr_espserv, { as: "sub_especialidad_sig_ppr_espserv", foreignKey: "sub_especialidad"});
  sig_ppr_espserv.hasMany(sig_ppr_ups, { as: "sig_ppr_ups", foreignKey: "sub_especialidad"});
  sig_ppr_ups.belongsTo(sig_ppr_ups_sbas, { as: "cod_servicio_sig_ppr_ups_sba", foreignKey: "cod_servicio"});
  sig_ppr_ups_sbas.hasMany(sig_ppr_ups, { as: "sig_ppr_ups", foreignKey: "cod_servicio"});
  sig_proy_comi.belongsTo(sig_proy_cargo, { as: "CARGO_sig_proy_cargo", foreignKey: "CARGO"});
  sig_proy_cargo.hasMany(sig_proy_comi, { as: "sig_proy_comis", foreignKey: "CARGO"});
  sig_proy_destino_cargo.belongsTo(sig_proy_cargo, { as: "CARGO_sig_proy_cargo", foreignKey: "CARGO"});
  sig_proy_cargo.hasMany(sig_proy_destino_cargo, { as: "sig_proy_destino_cargos", foreignKey: "CARGO"});
  SIG_PROY_PLANILLA_PASAJE.belongsTo(sig_proy_comi, { as: "ANO_EJEC_sig_proy_comi", foreignKey: "ANO_EJEC"});
  sig_proy_comi.hasMany(SIG_PROY_PLANILLA_PASAJE, { as: "SIG_PROY_PLANILLA_PASAJEs", foreignKey: "ANO_EJEC"});
  SIG_PROY_PLANILLA_PASAJE.belongsTo(sig_proy_comi, { as: "SEC_ITEM_COMI_sig_proy_comi", foreignKey: "SEC_ITEM_COMI"});
  sig_proy_comi.hasMany(SIG_PROY_PLANILLA_PASAJE, { as: "SEC_ITEM_COMI_SIG_PROY_PLANILLA_PASAJEs", foreignKey: "SEC_ITEM_COMI"});
  SIG_PROY_PLANILLA_PASAJE.belongsTo(sig_proy_comi, { as: "SEC_PEDIDO_sig_proy_comi", foreignKey: "SEC_PEDIDO"});
  sig_proy_comi.hasMany(SIG_PROY_PLANILLA_PASAJE, { as: "SEC_PEDIDO_SIG_PROY_PLANILLA_PASAJEs", foreignKey: "SEC_PEDIDO"});
  sig_proy_comi_destino.belongsTo(sig_proy_comi, { as: "ANO_EJEC_sig_proy_comi", foreignKey: "ANO_EJEC"});
  sig_proy_comi.hasMany(sig_proy_comi_destino, { as: "sig_proy_comi_destinos", foreignKey: "ANO_EJEC"});
  sig_proy_comi_destino.belongsTo(sig_proy_comi, { as: "SEC_EJEC_sig_proy_comi", foreignKey: "SEC_EJEC"});
  sig_proy_comi.hasMany(sig_proy_comi_destino, { as: "SEC_EJEC_sig_proy_comi_destinos", foreignKey: "SEC_EJEC"});
  sig_proy_comi_destino.belongsTo(sig_proy_comi, { as: "SEC_ITEM_COMI_sig_proy_comi", foreignKey: "SEC_ITEM_COMI"});
  sig_proy_comi.hasMany(sig_proy_comi_destino, { as: "SEC_ITEM_COMI_sig_proy_comi_destinos", foreignKey: "SEC_ITEM_COMI"});
  sig_proy_comi_destino.belongsTo(sig_proy_comi, { as: "SEC_PEDIDO_sig_proy_comi", foreignKey: "SEC_PEDIDO"});
  sig_proy_comi.hasMany(sig_proy_comi_destino, { as: "SEC_PEDIDO_sig_proy_comi_destinos", foreignKey: "SEC_PEDIDO"});
  sig_proy_comi_ruta.belongsTo(sig_proy_comi_destino, { as: "ANO_EJEC_sig_proy_comi_destino", foreignKey: "ANO_EJEC"});
  sig_proy_comi_destino.hasMany(sig_proy_comi_ruta, { as: "sig_proy_comi_ruta", foreignKey: "ANO_EJEC"});
  sig_proy_comi_ruta.belongsTo(sig_proy_comi_destino, { as: "SEC_EJEC_sig_proy_comi_destino", foreignKey: "SEC_EJEC"});
  sig_proy_comi_destino.hasMany(sig_proy_comi_ruta, { as: "SEC_EJEC_sig_proy_comi_ruta", foreignKey: "SEC_EJEC"});
  sig_proy_comi_ruta.belongsTo(sig_proy_comi_destino, { as: "SEC_ITEM_COMI_sig_proy_comi_destino", foreignKey: "SEC_ITEM_COMI"});
  sig_proy_comi_destino.hasMany(sig_proy_comi_ruta, { as: "SEC_ITEM_COMI_sig_proy_comi_ruta", foreignKey: "SEC_ITEM_COMI"});
  sig_proy_comi_ruta.belongsTo(sig_proy_comi_destino, { as: "SEC_ITEM_DESTINO_sig_proy_comi_destino", foreignKey: "SEC_ITEM_DESTINO"});
  sig_proy_comi_destino.hasMany(sig_proy_comi_ruta, { as: "SEC_ITEM_DESTINO_sig_proy_comi_ruta", foreignKey: "SEC_ITEM_DESTINO"});
  sig_proy_comi_ruta.belongsTo(sig_proy_comi_destino, { as: "SEC_PEDIDO_sig_proy_comi_destino", foreignKey: "SEC_PEDIDO"});
  sig_proy_comi_destino.hasMany(sig_proy_comi_ruta, { as: "SEC_PEDIDO_sig_proy_comi_ruta", foreignKey: "SEC_PEDIDO"});
  SIG_PROY_PLANILLA_VIATICO.belongsTo(sig_proy_destino, { as: "SEC_DESTINO_sig_proy_destino", foreignKey: "SEC_DESTINO"});
  sig_proy_destino.hasMany(SIG_PROY_PLANILLA_VIATICO, { as: "SIG_PROY_PLANILLA_VIATICOs", foreignKey: "SEC_DESTINO"});
  SIG_PROY_PLAN_PAS_DESTINO.belongsTo(sig_proy_destino, { as: "SEC_DESTINO_sig_proy_destino", foreignKey: "SEC_DESTINO"});
  sig_proy_destino.hasMany(SIG_PROY_PLAN_PAS_DESTINO, { as: "SIG_PROY_PLAN_PAS_DESTINOs", foreignKey: "SEC_DESTINO"});
  sig_proy_comi_destino.belongsTo(sig_proy_destino, { as: "SEC_DESTINO_sig_proy_destino", foreignKey: "SEC_DESTINO"});
  sig_proy_destino.hasMany(sig_proy_comi_destino, { as: "sig_proy_comi_destinos", foreignKey: "SEC_DESTINO"});
  sig_proy_comi_ruta.belongsTo(sig_proy_destino, { as: "D_SEC_DESTINO_sig_proy_destino", foreignKey: "D_SEC_DESTINO"});
  sig_proy_destino.hasMany(sig_proy_comi_ruta, { as: "sig_proy_comi_ruta", foreignKey: "D_SEC_DESTINO"});
  sig_proy_comi_ruta.belongsTo(sig_proy_destino, { as: "O_SEC_DESTINO_sig_proy_destino", foreignKey: "O_SEC_DESTINO"});
  sig_proy_destino.hasMany(sig_proy_comi_ruta, { as: "O_SEC_DESTINO_sig_proy_comi_ruta", foreignKey: "O_SEC_DESTINO"});
  sig_proy_destino_cargo.belongsTo(sig_proy_destino, { as: "SEC_DESTINO_sig_proy_destino", foreignKey: "SEC_DESTINO"});
  sig_proy_destino.hasMany(sig_proy_destino_cargo, { as: "sig_proy_destino_cargos", foreignKey: "SEC_DESTINO"});
  sig_proy_ruta.belongsTo(sig_proy_destino, { as: "D_SEC_DESTINO_sig_proy_destino", foreignKey: "D_SEC_DESTINO"});
  sig_proy_destino.hasMany(sig_proy_ruta, { as: "sig_proy_ruta", foreignKey: "D_SEC_DESTINO"});
  sig_proy_ruta.belongsTo(sig_proy_destino, { as: "O_SEC_DESTINO_sig_proy_destino", foreignKey: "O_SEC_DESTINO"});
  sig_proy_destino.hasMany(sig_proy_ruta, { as: "O_SEC_DESTINO_sig_proy_ruta", foreignKey: "O_SEC_DESTINO"});
  sig_proy_comi.belongsTo(sig_proy_pedidos, { as: "ANO_EJEC_sig_proy_pedido", foreignKey: "ANO_EJEC"});
  sig_proy_pedidos.hasMany(sig_proy_comi, { as: "sig_proy_comis", foreignKey: "ANO_EJEC"});
  sig_proy_comi.belongsTo(sig_proy_pedidos, { as: "SEC_EJEC_sig_proy_pedido", foreignKey: "SEC_EJEC"});
  sig_proy_pedidos.hasMany(sig_proy_comi, { as: "SEC_EJEC_sig_proy_comis", foreignKey: "SEC_EJEC"});
  sig_proy_comi.belongsTo(sig_proy_pedidos, { as: "SEC_PEDIDO_sig_proy_pedido", foreignKey: "SEC_PEDIDO"});
  sig_proy_pedidos.hasMany(sig_proy_comi, { as: "SEC_PEDIDO_sig_proy_comis", foreignKey: "SEC_PEDIDO"});
  SIG_PROY_PLAN_PAS_RUTA.belongsTo(sig_proy_ruta, { as: "D_SEC_DESTINO_sig_proy_rutum", foreignKey: "D_SEC_DESTINO"});
  sig_proy_ruta.hasMany(SIG_PROY_PLAN_PAS_RUTA, { as: "SIG_PROY_PLAN_PAS_RUTa", foreignKey: "D_SEC_DESTINO"});
  SIG_PROY_PLAN_PAS_RUTA.belongsTo(sig_proy_ruta, { as: "O_SEC_DESTINO_sig_proy_rutum", foreignKey: "O_SEC_DESTINO"});
  sig_proy_ruta.hasMany(SIG_PROY_PLAN_PAS_RUTA, { as: "O_SEC_DESTINO_SIG_PROY_PLAN_PAS_RUTa", foreignKey: "O_SEC_DESTINO"});
  sig_proy_cargo.belongsTo(sig_proy_tipo_cargo, { as: "TIPO_sig_proy_tipo_cargo", foreignKey: "TIPO"});
  sig_proy_tipo_cargo.hasMany(sig_proy_cargo, { as: "sig_proy_cargos", foreignKey: "TIPO"});
  SIG_PATRIMONIO.belongsTo(sig_subtipos_patrimonio, { as: "CLASE_PATRIM_sig_subtipos_patrimonio", foreignKey: "CLASE_PATRIM"});
  sig_subtipos_patrimonio.hasMany(SIG_PATRIMONIO, { as: "SIG_PATRIMONIOs", foreignKey: "CLASE_PATRIM"});
  SIG_PATRIMONIO.belongsTo(sig_subtipos_patrimonio, { as: "SUBTIPO_sig_subtipos_patrimonio", foreignKey: "SUBTIPO"});
  sig_subtipos_patrimonio.hasMany(SIG_PATRIMONIO, { as: "SUBTIPO_SIG_PATRIMONIOs", foreignKey: "SUBTIPO"});
  SIG_PATRIMONIO.belongsTo(sig_subtipos_patrimonio, { as: "TIPO_PATRIM_sig_subtipos_patrimonio", foreignKey: "TIPO_PATRIM"});
  sig_subtipos_patrimonio.hasMany(SIG_PATRIMONIO, { as: "TIPO_PATRIM_SIG_PATRIMONIOs", foreignKey: "TIPO_PATRIM"});
  familia_bien_serv.belongsTo(sig_subtipos_patrimonio, { as: "clase_patrim_sig_subtipos_patrimonio", foreignKey: "clase_patrim"});
  sig_subtipos_patrimonio.hasMany(familia_bien_serv, { as: "familia_bien_servs", foreignKey: "clase_patrim"});
  familia_bien_serv.belongsTo(sig_subtipos_patrimonio, { as: "subtipo_sig_subtipos_patrimonio", foreignKey: "subtipo"});
  sig_subtipos_patrimonio.hasMany(familia_bien_serv, { as: "subtipo_familia_bien_servs", foreignKey: "subtipo"});
  familia_bien_serv.belongsTo(sig_subtipos_patrimonio, { as: "tipo_patrim_sig_subtipos_patrimonio", foreignKey: "tipo_patrim"});
  sig_subtipos_patrimonio.hasMany(familia_bien_serv, { as: "tipo_patrim_familia_bien_servs", foreignKey: "tipo_patrim"});
  SIG_META_PROPUESTA.belongsTo(sig_tarea, { as: "SEC_EJEC_sig_tarea", foreignKey: "SEC_EJEC"});
  sig_tarea.hasMany(SIG_META_PROPUESTA, { as: "SIG_META_PROPUESTa", foreignKey: "SEC_EJEC"});
  SIG_META_PROPUESTA.belongsTo(sig_tarea, { as: "ANO_EJE_sig_tarea", foreignKey: "ANO_EJE"});
  sig_tarea.hasMany(SIG_META_PROPUESTA, { as: "ANO_EJE_SIG_META_PROPUESTa", foreignKey: "ANO_EJE"});
  SIG_META_PROPUESTA.belongsTo(sig_tarea, { as: "NIVEL_TAREA_sig_tarea", foreignKey: "NIVEL_TAREA"});
  sig_tarea.hasMany(SIG_META_PROPUESTA, { as: "NIVEL_TAREA_SIG_META_PROPUESTa", foreignKey: "NIVEL_TAREA"});
  SIG_META_PROPUESTA.belongsTo(sig_tarea, { as: "TAREA_GENERAL_sig_tarea", foreignKey: "TAREA_GENERAL"});
  sig_tarea.hasMany(SIG_META_PROPUESTA, { as: "TAREA_GENERAL_SIG_META_PROPUESTa", foreignKey: "TAREA_GENERAL"});
  SIG_META_PROPUESTA.belongsTo(sig_tarea, { as: "TIPO_TAREA_sig_tarea", foreignKey: "TIPO_TAREA"});
  sig_tarea.hasMany(SIG_META_PROPUESTA, { as: "TIPO_TAREA_SIG_META_PROPUESTa", foreignKey: "TIPO_TAREA"});
  meta.belongsTo(sig_tarea, { as: "sec_ejec_sig_tarea", foreignKey: "sec_ejec"});
  sig_tarea.hasMany(meta, { as: "meta", foreignKey: "sec_ejec"});
  meta.belongsTo(sig_tarea, { as: "ano_eje_sig_tarea", foreignKey: "ano_eje"});
  sig_tarea.hasMany(meta, { as: "ano_eje_meta", foreignKey: "ano_eje"});
  meta.belongsTo(sig_tarea, { as: "NIVEL_TAREA_sig_tarea", foreignKey: "NIVEL_TAREA"});
  sig_tarea.hasMany(meta, { as: "NIVEL_TAREA_meta", foreignKey: "NIVEL_TAREA"});
  meta.belongsTo(sig_tarea, { as: "TAREA_GENERAL_sig_tarea", foreignKey: "TAREA_GENERAL"});
  sig_tarea.hasMany(meta, { as: "TAREA_GENERAL_meta", foreignKey: "TAREA_GENERAL"});
  meta.belongsTo(sig_tarea, { as: "TIPO_TAREA_sig_tarea", foreignKey: "TIPO_TAREA"});
  sig_tarea.hasMany(meta, { as: "TIPO_TAREA_meta", foreignKey: "TIPO_TAREA"});
  sig_centro_costo_tarea.belongsTo(sig_tarea, { as: "sec_ejec_sig_tarea", foreignKey: "sec_ejec"});
  sig_tarea.hasMany(sig_centro_costo_tarea, { as: "sig_centro_costo_tareas", foreignKey: "sec_ejec"});
  sig_centro_costo_tarea.belongsTo(sig_tarea, { as: "ano_eje_sig_tarea", foreignKey: "ano_eje"});
  sig_tarea.hasMany(sig_centro_costo_tarea, { as: "ano_eje_sig_centro_costo_tareas", foreignKey: "ano_eje"});
  sig_centro_costo_tarea.belongsTo(sig_tarea, { as: "nivel_tarea_sig_tarea", foreignKey: "nivel_tarea"});
  sig_tarea.hasMany(sig_centro_costo_tarea, { as: "nivel_tarea_sig_centro_costo_tareas", foreignKey: "nivel_tarea"});
  sig_centro_costo_tarea.belongsTo(sig_tarea, { as: "tarea_general_sig_tarea", foreignKey: "tarea_general"});
  sig_tarea.hasMany(sig_centro_costo_tarea, { as: "tarea_general_sig_centro_costo_tareas", foreignKey: "tarea_general"});
  sig_centro_costo_tarea.belongsTo(sig_tarea, { as: "tipo_tarea_sig_tarea", foreignKey: "tipo_tarea"});
  sig_tarea.hasMany(sig_centro_costo_tarea, { as: "tipo_tarea_sig_centro_costo_tareas", foreignKey: "tipo_tarea"});
  clase_bien_serv.belongsTo(sig_tipo_patrimonio, { as: "clase_patrim_sig_tipo_patrimonio", foreignKey: "clase_patrim"});
  sig_tipo_patrimonio.hasMany(clase_bien_serv, { as: "clase_bien_servs", foreignKey: "clase_patrim"});
  clase_bien_serv.belongsTo(sig_tipo_patrimonio, { as: "tipo_patrim_sig_tipo_patrimonio", foreignKey: "tipo_patrim"});
  sig_tipo_patrimonio.hasMany(clase_bien_serv, { as: "tipo_patrim_clase_bien_servs", foreignKey: "tipo_patrim"});
  sig_subtipos_patrimonio.belongsTo(sig_tipo_patrimonio, { as: "clase_patrim_sig_tipo_patrimonio", foreignKey: "clase_patrim"});
  sig_tipo_patrimonio.hasMany(sig_subtipos_patrimonio, { as: "sig_subtipos_patrimonios", foreignKey: "clase_patrim"});
  sig_subtipos_patrimonio.belongsTo(sig_tipo_patrimonio, { as: "tipo_patrim_sig_tipo_patrimonio", foreignKey: "tipo_patrim"});
  sig_tipo_patrimonio.hasMany(sig_subtipos_patrimonio, { as: "tipo_patrim_sig_subtipos_patrimonios", foreignKey: "tipo_patrim"});
  SIG_ALMACEN.belongsTo(ubigeo, { as: "departamento_ubigeo", foreignKey: "departamento"});
  ubigeo.hasMany(SIG_ALMACEN, { as: "SIG_ALMACENs", foreignKey: "departamento"});
  SIG_ALMACEN.belongsTo(ubigeo, { as: "distrito_ubigeo", foreignKey: "distrito"});
  ubigeo.hasMany(SIG_ALMACEN, { as: "distrito_SIG_ALMACENs", foreignKey: "distrito"});
  SIG_ALMACEN.belongsTo(ubigeo, { as: "Pais_ubigeo", foreignKey: "Pais"});
  ubigeo.hasMany(SIG_ALMACEN, { as: "Pais_SIG_ALMACENs", foreignKey: "Pais"});
  SIG_ALMACEN.belongsTo(ubigeo, { as: "provincia_ubigeo", foreignKey: "provincia"});
  ubigeo.hasMany(SIG_ALMACEN, { as: "provincia_SIG_ALMACENs", foreignKey: "provincia"});
  SIG_CONVOCATORIA_ITEM.belongsTo(ubigeo, { as: "DEPARTAMENTO_ubigeo", foreignKey: "DEPARTAMENTO"});
  ubigeo.hasMany(SIG_CONVOCATORIA_ITEM, { as: "SIG_CONVOCATORIA_ITEMs", foreignKey: "DEPARTAMENTO"});
  SIG_CONVOCATORIA_ITEM.belongsTo(ubigeo, { as: "DISTRITO_ubigeo", foreignKey: "DISTRITO"});
  ubigeo.hasMany(SIG_CONVOCATORIA_ITEM, { as: "DISTRITO_SIG_CONVOCATORIA_ITEMs", foreignKey: "DISTRITO"});
  SIG_CONVOCATORIA_ITEM.belongsTo(ubigeo, { as: "PAIS_ubigeo", foreignKey: "PAIS"});
  ubigeo.hasMany(SIG_CONVOCATORIA_ITEM, { as: "PAIS_SIG_CONVOCATORIA_ITEMs", foreignKey: "PAIS"});
  SIG_CONVOCATORIA_ITEM.belongsTo(ubigeo, { as: "PROVINCIA_ubigeo", foreignKey: "PROVINCIA"});
  ubigeo.hasMany(SIG_CONVOCATORIA_ITEM, { as: "PROVINCIA_SIG_CONVOCATORIA_ITEMs", foreignKey: "PROVINCIA"});
  SIG_PAAC_CONSOLIDADO.belongsTo(ubigeo, { as: "DEPARTAMENTO_ubigeo", foreignKey: "DEPARTAMENTO"});
  ubigeo.hasMany(SIG_PAAC_CONSOLIDADO, { as: "SIG_PAAC_CONSOLIDADOs", foreignKey: "DEPARTAMENTO"});
  SIG_PAAC_CONSOLIDADO.belongsTo(ubigeo, { as: "DISTRITO_ubigeo", foreignKey: "DISTRITO"});
  ubigeo.hasMany(SIG_PAAC_CONSOLIDADO, { as: "DISTRITO_SIG_PAAC_CONSOLIDADOs", foreignKey: "DISTRITO"});
  SIG_PAAC_CONSOLIDADO.belongsTo(ubigeo, { as: "PAIS_ubigeo", foreignKey: "PAIS"});
  ubigeo.hasMany(SIG_PAAC_CONSOLIDADO, { as: "PAIS_SIG_PAAC_CONSOLIDADOs", foreignKey: "PAIS"});
  SIG_PAAC_CONSOLIDADO.belongsTo(ubigeo, { as: "PROVINCIA_ubigeo", foreignKey: "PROVINCIA"});
  ubigeo.hasMany(SIG_PAAC_CONSOLIDADO, { as: "PROVINCIA_SIG_PAAC_CONSOLIDADOs", foreignKey: "PROVINCIA"});
  sig_personal.belongsTo(ubigeo, { as: "departamento_ubigeo", foreignKey: "departamento"});
  ubigeo.hasMany(sig_personal, { as: "sig_personals", foreignKey: "departamento"});
  sig_personal.belongsTo(ubigeo, { as: "distrito_ubigeo", foreignKey: "distrito"});
  ubigeo.hasMany(sig_personal, { as: "distrito_sig_personals", foreignKey: "distrito"});
  sig_personal.belongsTo(ubigeo, { as: "pais_ubigeo", foreignKey: "pais"});
  ubigeo.hasMany(sig_personal, { as: "pais_sig_personals", foreignKey: "pais"});
  sig_personal.belongsTo(ubigeo, { as: "provincia_ubigeo", foreignKey: "provincia"});
  ubigeo.hasMany(sig_personal, { as: "provincia_sig_personals", foreignKey: "provincia"});
  SIG_CATALOGO_BIEN_SERV_UNIDAD.belongsTo(unidad_medida, { as: "UNIDAD_MEDIDA_unidad_medida", foreignKey: "UNIDAD_MEDIDA"});
  unidad_medida.hasMany(SIG_CATALOGO_BIEN_SERV_UNIDAD, { as: "SIG_CATALOGO_BIEN_SERV_UNIDADs", foreignKey: "UNIDAD_MEDIDA"});
  SIG_CATALOGO_UNIDAD_EJECUTORA.belongsTo(unidad_medida, { as: "UNIDAD_MEDIDA_unidad_medida", foreignKey: "UNIDAD_MEDIDA"});
  unidad_medida.hasMany(SIG_CATALOGO_UNIDAD_EJECUTORA, { as: "SIG_CATALOGO_UNIDAD_EJECUTORAs", foreignKey: "UNIDAD_MEDIDA"});

  return {
    ACT_PROY_NOMBRE_FASE,
    ACUM_X_UBIGEO_DISP_LEGAL,
    Act_Proy,
    Act_Proy_Nombre,
    Acumulado,
    BANCO_CUENTA,
    Banco,
    CARGA_ARCHIVOS,
    CARGA_ARCHIVOS_DET,
    CATALOGO_ALIAS,
    CATALOGO_BIEN_SERV,
    CATALOGO_BIEN_SERV_BK_III,
    CATALOGO_BIEN_SERV_ORIGINAL,
    CATALOGO_EQUIVALENCIA_127,
    CATALOGO_EQUIVALENCIA_146,
    CATEGORIA_CIIU,
    COMPONENTE_NOMBRE_FASE,
    CONTROL_TRANSACCION,
    CONTROL_TRANSACCION_DESTINO,
    CONTROL_TRANSACCION_DETALLE,
    Categoria_Gasto,
    Componente,
    Componente_Ejec,
    Componente_Nombre,
    DISPOSITIVOS_LEGALES,
    EQUIVALENCIA_META,
    ESTRATEGIA_NACIONAL,
    ESTRATEGIA_NACIONAL_EJEC,
    ESTRATEGIA_NACIONAL_NOMBRE,
    ESTRATEGIA_NACIONAL_TMP,
    FERIADO,
    FINALIDAD_FASE,
    FUENTE_FINANC_AGREGADA,
    FUNCION_AMBITO,
    FUNCION_FASE,
    Finalidad,
    Fuente_Financ,
    Fuente_Financ_Ejec,
    Funcion,
    GRUPO_CIIU,
    Grupo_Gasto,
    Hoja1,
    Hoja2,
    INTF_CAB,
    INTF_CAB_RET,
    INTF_DET,
    INTF_LOG,
    INTF_NOT,
    LOG_TIPOS_TRANSMISIONES,
    LOG_TRANSFERENCIA,
    MARCA,
    MCONVPRO,
    META_PRIORIZADA_PCA_X_CLASIF,
    MMEDICAM,
    MPP_PCA_X_ESPECIFICA,
    MPP_PCA_X_GENERICA,
    MP_CENTRO_COSTO,
    MP_COLOR,
    MP_CONDICION,
    MP_ESTADO,
    MP_INVENTARIO_EXPORT,
    MP_INVENTARIO_IMPORT,
    MP_MARCA,
    MP_MODELO,
    MP_UBICACION,
    MP_USUARIO,
    Maestro_Documento,
    Origen,
    PLAN_CTB_MAYOR,
    PLAN_CTB_SUB_CTA,
    PROGRAMA_NOMBRE_FASE,
    PROGRAMA_PPTO,
    Persona,
    Programa,
    Programa_Nombre,
    SECCION_CIIU,
    SEG_APLICACION,
    SEG_AUDITORIA,
    SEG_HISTORICO_PWD,
    SEG_MODULO,
    SEG_OPCION,
    SEG_PAGINA,
    SEG_POLITICA,
    SEG_PRIVILEGIO,
    SEG_ROL,
    SEG_ROL_APLICACION,
    SEG_ROL_PAGINA,
    SEG_ROL_PAGINA_PRIVILEGIO,
    SEG_ROL_USUARIO,
    SEG_TIPO_AUDITORIA,
    SEG_USUARIO,
    SGE_ADQUISICIONES,
    SGE_ADQUISICIONES_EXP,
    SGE_ADQUISICIONES_TRX,
    SGE_CONTRATISTAS_TRX,
    SGE_KARDEX_MENSUAL,
    SGE_KARDEX_MENSUAL_EXP,
    SGE_KARDEX_MENSUAL_TRX,
    SGE_PAAC_MENSUAL,
    SGE_PAAC_MENSUAL_EXP,
    SGE_PAAC_MENSUAL_TRX,
    SGE_PATRIMONIO,
    SGE_PATRIMONIO_EXP,
    SGE_PATRIMONIO_TRX,
    SIG_ACUMULADO_DET,
    SIG_AJUSTE_POSTERIOR,
    SIG_ALMACEN,
    SIG_ALMACEN_CUF,
    SIG_ASIENTO_CUENTA_REGISTRO,
    SIG_ASIGNACIONES,
    SIG_ASIGNACIONES_BD,
    SIG_AUDITORIA,
    SIG_BIENES_DURADEROS,
    SIG_CAB_DISTRIBUCION,
    SIG_CARGO,
    SIG_CATALOGO_BIEN_SERV_AGRU,
    SIG_CATALOGO_BIEN_SERV_ALTERNO,
    SIG_CATALOGO_BIEN_SERV_EQUI,
    SIG_CATALOGO_BIEN_SERV_PRECIO,
    SIG_CATALOGO_BIEN_SERV_UNIDAD,
    SIG_CATALOGO_COMPONENTES,
    SIG_CATALOGO_EQUI_ADQUIS,
    SIG_CATALOGO_ONU,
    SIG_CATALOGO_PRESENTACION,
    SIG_CATALOGO_RUBRO,
    SIG_CATALOGO_RUBRO_X_ITEM,
    SIG_CATALOGO_SECTOR,
    SIG_CATALOGO_UNIDAD_EJECUTORA,
    SIG_CATEGORIA_OCUPACIONAL,
    SIG_CATEGORIA_TIPO_PATRIMONIO,
    SIG_CAT_BIEN_SERV_EQUI_PAO,
    SIG_CAT_BIEN_SERV_PRECIO_FASE,
    SIG_CAT_BIEN_SERV_PRECIO_PROC,
    SIG_CAUSAL_ALTA,
    SIG_CAUSAL_BAJA,
    SIG_CENTRO_COSTO,
    SIG_CENTRO_COSTO_BK_III,
    SIG_CENTRO_COSTO_PERSONAL,
    SIG_CERTIFICACION,
    SIG_CERTIFICACION_DEPE,
    SIG_CERTIFICACION_DOC,
    SIG_CERTIFICACION_DOC_SEC,
    SIG_CERTIFICACION_FASE,
    SIG_CERTIFICACION_MOV,
    SIG_CERTIFICACION_OPERACION,
    SIG_CERTIFICACION_OPER_FUENTE,
    SIG_CERTIFICACION_PPTO,
    SIG_CLASE_ATRIBUTO,
    SIG_CLASIFICADOR_GASTO,
    SIG_COLORES,
    SIG_COMITE,
    SIG_COMITE_INTEGRANTE,
    SIG_COMPONENTES_ACTIVO,
    SIG_CONCEPTO_FAMILIA,
    SIG_CONCEPTO_FAMILIA_EJECUTORA,
    SIG_CONCEPTO_GASTO,
    SIG_CONCEPTO_GASTO_CTA,
    SIG_CONCEPTO_MAESTRO,
    SIG_CONCESIONES,
    SIG_CONSORCIOS,
    SIG_CONSORCIOS_DET,
    SIG_CONSTRUCCIONES,
    SIG_CONSTRUCCIONES_DET,
    SIG_CONSTRUCCIONES_MOVIMTO,
    SIG_CONTRATISTAS,
    SIG_CONTRATISTAS_BIEN_SERV,
    SIG_CONTRATISTA_RNP,
    SIG_CONTRATOS,
    SIG_CONTRATO_DET,
    SIG_CONTRATO_DET_DEPE,
    SIG_CONTRATO_DET_PPTAL,
    SIG_CONTRATO_DOCUMENTO,
    SIG_CONTRATO_GARANTIA_MOV,
    SIG_CONTRATO_INTERFASE,
    SIG_CONTRATO_ITEM,
    SIG_CONTRATO_ITEM_DETALLE,
    SIG_CONTRATO_ITEM_DIST,
    SIG_CONTRATO_ITEM_DIST_CC,
    SIG_CONTRATO_ITEM_MENSUAL,
    SIG_CONTRATO_ITEM_MENS_DEPE,
    SIG_CONTRATO_ITEM_MENS_PED,
    SIG_CONTRATO_ITEM_MENS_PPTAL,
    SIG_CONTRATO_ITEM_PPTAL,
    SIG_CONTRATO_ITEM_SECUENCIA,
    SIG_CONTRATO_LOTE,
    SIG_CONTRATO_MOVIMIENTO,
    SIG_CONTRATO_MOVIM_ITEM,
    SIG_CONTRATO_MOVIM_PAGO,
    SIG_CONTRATO_MOVITEM_PPTAL,
    SIG_CONTRATO_NOTAS,
    SIG_CONTRATO_PENALIDAD_OTROS,
    SIG_CONTRATO_SECUENCIA,
    SIG_CONVENIO,
    SIG_CONVOCATORIA,
    SIG_CONVOCATORIA_CALENDARIO,
    SIG_CONVOCATORIA_CALENDA_CAB,
    SIG_CONVOCATORIA_ETAPAS,
    SIG_CONVOCATORIA_FACTOR,
    SIG_CONVOCATORIA_FUENTE,
    SIG_CONVOCATORIA_INVITACION,
    SIG_CONVOCATORIA_INV_CONDICION,
    SIG_CONVOCATORIA_ITEM,
    SIG_CONVOCATORIA_ITEM_DETALLE,
    SIG_CONVOCATORIA_ITEM_MENSUAL,
    SIG_CONVOCATORIA_ITEM_PPTAL,
    SIG_CONVOCATORIA_LOTE,
    SIG_CONVOCATORIA_LOTE_FACTOR,
    SIG_CONVOCATORIA_REQUISITOS,
    SIG_CONVOCATORIA_SECUENCIA,
    SIG_CUADRO_ADQUISICION,
    SIG_CUADRO_ADQ_VALIDA,
    SIG_CUADRO_ANUAL_EQUIVALENCIA,
    SIG_CUADRO_MODIFICADO,
    SIG_CUADRO_MODIFICADO_CMN,
    SIG_CUADRO_MODIFICADO_DET,
    SIG_CUADRO_MODIFICADO_DET_ORI,
    SIG_CUADRO_MODIFICADO_DET_REF,
    SIG_CUADRO_MODIFICADO_SALDO,
    SIG_CUADRO_NECESIDAD,
    SIG_CUADRO_NECESIDAD_DET,
    SIG_CUADRO_NECESIDAD_DET_PAAC,
    SIG_CUADRO_STOCK_ESTIMADO,
    SIG_CUADRO_TRANSFERENCIA,
    SIG_CUADRO_TRANSFERENCIA_DET,
    SIG_CUENTA_ACTO_ADM,
    SIG_CUENTA_CONCESION,
    SIG_CUENTA_CONSTRUCCION,
    SIG_CUENTA_MOVIMTO,
    SIG_CUENTA_PARAMETRO_ANIO,
    SIG_CUENTA_TIPO_PATRIMONIO,
    SIG_DA_PRESUPUESTO,
    SIG_DEPEN_META_CUADRO,
    SIG_DESP_DOC_RENDIDO,
    SIG_DESP_PEDIDOS,
    SIG_DESP_PERSONAL,
    SIG_DESP_PLANILLA_PASAJE,
    SIG_DESP_PLAN_PAS_PPTA,
    SIG_DESTINOS,
    SIG_DETALLE_ACTIVOS,
    SIG_DETALLE_ALMACEN_LOTES,
    SIG_DETALLE_ANEXO_CUADRO,
    SIG_DETALLE_BIENES,
    SIG_DETALLE_BSERV_CUADRO,
    SIG_DETALLE_CONCESIONES,
    SIG_DETALLE_CTA_ALMACEN,
    SIG_DETALLE_CTA_CONFOR_SERV,
    SIG_DETALLE_INVENT_FISICO,
    SIG_DETALLE_ITEM_ALMACEN,
    SIG_DETALLE_ITEM_CONFOR_SERV,
    SIG_DETALLE_MEJORAS,
    SIG_DETALLE_METAS_CUADRO,
    SIG_DETALLE_MOVIM_ALMACEN,
    SIG_DETALLE_MOVIM_ALMACEN_EST,
    SIG_DETALLE_MOVIM_CONFOR_SERV,
    SIG_DETALLE_MOVIM_PPTO,
    SIG_DETALLE_MOVIM_PPTO_CF,
    SIG_DETALLE_PECOSA,
    SIG_DETALLE_PEDIDOS,
    SIG_DETALLE_PEDIDOS_ANEXO,
    SIG_DETALLE_PEDIDO_COMISIONADO,
    SIG_DETALLE_PEDIDO_CUADRO,
    SIG_DET_ADMINISTRATIVO,
    SIG_DET_ADMIN_INM_COMP,
    SIG_DET_CAUSAL_ALTA,
    SIG_DET_DISTRIBUCION,
    SIG_DET_MOVIM_PATRIMONIO,
    SIG_DEVENGADO,
    SIG_DEVENGADO_DOC_SECU,
    SIG_DEVENGADO_ITEM,
    SIG_DEVENGADO_ITEM_PPTO,
    SIG_DEVENGADO_PENALIDAD_OTROS,
    SIG_DEVENGADO_SECUENCIA,
    SIG_DEVOLUCION_CAB,
    SIG_DEVOLUCION_DET,
    SIG_DEVOLUCION_PPTAL,
    SIG_DIVISION,
    SIG_DIVISION_FONDO,
    SIG_DOCUMENTO_ESTADO,
    SIG_ENCARGO_ITEM_ANEXO,
    SIG_ENCARGO_REQ,
    SIG_ENCARGO_REQ_DET,
    SIG_ENCARGO_REQ_EXP,
    SIG_ENCARGO_REQ_ITEM,
    SIG_ENTIDAD_DONANTE,
    SIG_EQUIVALENCIA_CATALOGO,
    SIG_EQUIVALENCIA_CCOSTO_META,
    SIG_EQUIVALENCIA_CENTRO,
    SIG_EQUIVALENCIA_CENTRO_BD,
    SIG_EQUIVALENCIA_SUBFIN,
    SIG_ESCALAS_SEDE_DEPE,
    SIG_ESPECIFICAS_TECNICAS,
    SIG_ESPECIF_TECNICA_ACTIVO,
    SIG_ESPECIF_TECNICA_BD,
    SIG_EXP_SIGA,
    SIG_EXP_SIGA_DOCU,
    SIG_EXP_SIGA_PPTO,
    SIG_EXP_SIGA_SECU,
    SIG_FACTOR_AJUSTE_ANUAL,
    SIG_FACTOR_AJUSTE_MENSUAL,
    SIG_FACTOR_EVALUACION,
    SIG_FALTANTES_INVENT_FISICO,
    SIG_FAMILIA_CLASIFICADOR,
    SIG_FAMILIA_CLAS_EJECUTORA,
    SIG_FAMILIA_CUENTA,
    SIG_FAMILIA_CUENTAT,
    SIG_FAMILIA_CUENTA_EJECUTORA,
    SIG_FAMILIA_CUENTA_EQUIV,
    SIG_FAMILIA_ESNI,
    SIG_GRUPO_NOTA,
    SIG_GUIA_REMISION,
    SIG_GUIA_REMISION_DET,
    SIG_HT_MOVIM_CONTABLE,
    SIG_HT_MOVIM_MENSUAL,
    SIG_IMPORTA_CONTROL,
    SIG_INM_COMPONENTE,
    SIG_INM_COMPONENTES_IF,
    SIG_INM_COMPONENTE_AJUSTE,
    SIG_INM_COMPONENTE_CUENTA,
    SIG_INM_COMPONENTE_ESP_TECNICA,
    SIG_INM_COMPONENTE_INSPEC,
    SIG_INM_IF,
    SIG_INM_ITEM_CATALOGO,
    SIG_INM_SEGUROS,
    SIG_INM_UND_ACTIVO_ESP_TECNICA,
    SIG_INM_UNIDAD_ACTIVO,
    SIG_INM_UNIDAD_ACTIVO_BAJA,
    SIG_INM_UNIDAD_ACTIVO_IF,
    SIG_INT_ACT_PROY_NOMBRE,
    SIG_INT_COMPONENTE_NOMBRE,
    SIG_INT_CONSOLIDADO_SIAF,
    SIG_INT_FINALIDAD_NOMBRE,
    SIG_INT_FUNCION_NOMBRE,
    SIG_INT_HOJA_TRABAJO,
    SIG_INT_HT_GASTO,
    SIG_INT_HT_GASTO_SIAF,
    SIG_INT_HT_META,
    SIG_INT_HT_META_SIAF,
    SIG_INT_LOG,
    SIG_INT_MENSAJES_ERROR,
    SIG_INT_META_PROPUESTA,
    SIG_INT_MOVIMIENTO_AUD,
    SIG_INT_PROGRAMA_NOMBRE,
    SIG_INT_SUB_PROGRAMA_NOMBRE,
    SIG_INT_TMP_ASIGNACION,
    SIG_INT_TMP_ASIGNA_GENERICA,
    SIG_INT_TMP_JOB,
    SIG_INT_TMP_META,
    SIG_INT_TRANSMISION,
    SIG_INT_VERSION,
    SIG_INVENTARIO_FISICO,
    SIG_INVENTARIO_FISICO_CIERRE,
    SIG_INVENTARIO_FISICO_DOCUM,
    SIG_INV_INICIAL,
    SIG_INV_INICIAL_temp,
    SIG_ITEM_ATRIBUTO,
    SIG_ITEM_MARCA_MODELO,
    SIG_ITEM_TIPO_UNIDAD_ACTIVO,
    SIG_KARDEX_CTROL_EXISTENCIAS,
    SIG_KARDEX_CUF,
    SIG_KARDEX_EQUIVALENCIA_CUENTA,
    SIG_KARDEX_INVENTARIO,
    SIG_KARDEX_INVENTARIO_CAB,
    SIG_KARDEX_POR_ALMACEN,
    SIG_LOG_ALERTA,
    SIG_MAESTRO_BK,
    SIG_MAESTRO_DET_CATALOGO,
    SIG_MAESTRO_EQUIVALENCIA,
    SIG_MAESTRO_ESTADO,
    SIG_MAESTRO_PROCESO,
    SIG_MANIFIESTO_CARGA,
    SIG_MATRIZ_SEDE_DEPE,
    SIG_MA_CENTRO_RUBRO,
    SIG_MEJORAS,
    SIG_METAS_PROP_X_CENTRO,
    SIG_META_CENTRO_TAREA,
    SIG_META_PROPUESTA,
    SIG_META_PROPUESTA_EQUI,
    SIG_META_X_SEDE,
    SIG_META_X_TAREA,
    SIG_MODALIDAD_CONSTRUCCION,
    SIG_MODULO_PROCESO,
    SIG_MOVIMIENTO_ACTIVO,
    SIG_MOVIMIENTO_BIENES,
    SIG_MOVIMIENTO_CONTABLE,
    SIG_MOVIMIENTO_CONTABLE_COMP,
    SIG_MOVIMIENTO_PERSONAL,
    SIG_MOVIM_ADMINISTRATIVO,
    SIG_MOVIM_ALMACEN,
    SIG_MOVIM_ALMACEN_TRANS,
    SIG_MOVIM_ASIGNACION,
    SIG_MOVIM_CONFOR_SERVICIO,
    SIG_MOVIM_CONTABLE_INM_COMP,
    SIG_MOVIM_PATRIMONIO,
    SIG_MOVIM_UNIDAD_PRODUCIDA,
    SIG_MP_CENTRO_RUBRO,
    SIG_MSG_ACTIVA,
    SIG_MSG_ALERTA,
    SIG_MSG_DESTINATARIO,
    SIG_MSG_DOCUMENTO,
    SIG_MSG_DOCU_DESTINO,
    SIG_MSG_DOCU_PROG,
    SIG_MSG_GRUPO,
    SIG_MSG_LOG_MOVIMIENTO,
    SIG_MSG_MODULO,
    SIG_MSG_PROGRAMA,
    SIG_MSG_TIPO,
    SIG_OCE_DET,
    SIG_OPERACION_FAMILIA_PROCESO,
    SIG_ORDEN_ADQUISICION,
    SIG_ORDEN_ADQUISICION_ANULAC,
    SIG_ORDEN_IMPRESION,
    SIG_ORDEN_INTERFASE,
    SIG_ORDEN_INTERFASE_ANULAC,
    SIG_ORDEN_ITEM,
    SIG_ORDEN_ITEM_ANEXO,
    SIG_ORDEN_ITEM_ANEXO_ANULAC,
    SIG_ORDEN_ITEM_ANULAC,
    SIG_ORDEN_ITEM_PPTO,
    SIG_ORDEN_ITEM_PPTO_ANULAC,
    SIG_ORDEN_PRESUPUESTO,
    SIG_ORDEN_PRESUPUESTO_ANULAC,
    SIG_ORDEN_SECUENCIA,
    SIG_ORDEN_SECUENCIA_ANULAC,
    SIG_ORD_PASAJE_CONSOLIDADO,
    SIG_PAAC_CENTRO_COSTO,
    SIG_PAAC_CENTRO_COSTO_ANEXO,
    SIG_PAAC_CONSOLIDADO,
    SIG_PAAC_CONSOLIDADO_UES,
    SIG_PAAC_DET,
    SIG_PAAC_DETALLE,
    SIG_PAAC_DET_DEPE,
    SIG_PAAC_DET_PPTAL,
    SIG_PAAC_DET_SECUENCIA,
    SIG_PAAC_FILTRO,
    SIG_PAAC_ITEM,
    SIG_PAAC_ITEM_ANEXO,
    SIG_PAAC_METAS,
    SIG_PAAC_RESOLUCION,
    SIG_PAAC_SECUENCIA,
    SIG_PARAMETRO_EJECUTORA_ANIO,
    SIG_PARAMETRO_MPAGO_FFINANC,
    SIG_PATRIMONIO,
    SIG_PATRIMONIO_AJUSTE_CAB,
    SIG_PATRIMONIO_AJUSTE_DET,
    SIG_PATRIMONIO_COMP,
    SIG_PATRIMONIO_INM,
    SIG_PATRIMONIO_INM_IF,
    SIG_PEDIDOS,
    SIG_PEDIDOS_DESTINO,
    SIG_PEDIDOS_DETA_DEST,
    SIG_PEDIDO_PECOSA_IMPRESION,
    SIG_PEI_ACCION_EST,
    SIG_PEI_CATEGORIA,
    SIG_PEI_CAT_DETA_OBJETIVO_EST,
    SIG_PEI_GENERAL,
    SIG_PEI_IND_OBJETIVO_EST,
    SIG_PEI_META_ACCION_EST,
    SIG_PEI_META_ANUAL,
    SIG_PEI_OBJETIVO_EST,
    SIG_PERSONAL_DET,
    SIG_PERSONAL_FIRMA,
    SIG_PLANILLAS_CERTIFICACION,
    SIG_PLANILLA_SNP,
    SIG_PLANILLA_SNP_DESC,
    SIG_PLANILLA_SNP_DETALLE,
    SIG_PLANTILLA,
    SIG_PLANTILLA_GRUPO_NOTA,
    SIG_PLAN_CTB_MBELICO,
    SIG_PLAN_CTB_PNUD,
    SIG_POI_ACCION_EST_CENTRO,
    SIG_POI_ASIGNA_CENTRO_COSTO,
    SIG_POI_ASIGNA_TAREA,
    SIG_POI_GENERAL,
    SIG_POI_META_ASIGNA_CENTRO,
    SIG_PPAAC_CENTRO_COSTO,
    SIG_PPAAC_CONSOLIDADO,
    SIG_PPAAC_ITEM,
    SIG_PPAAC_METAS,
    SIG_PPAAC_SECUENCIA,
    SIG_PPR_ATENCIONES_X_SUBFIN,
    SIG_PPR_CATEGORIA,
    SIG_PPR_CIERRE_FASE,
    SIG_PPR_COLEGIO,
    SIG_PPR_CUADRO_NECESIDAD,
    SIG_PPR_CUADRO_NECESIDAD_DET,
    SIG_PPR_DISA,
    SIG_PPR_DRE,
    SIG_PPR_EESS_2010,
    SIG_PPR_EJECUTORA_AMBITO,
    SIG_PPR_ESTABLECIMIENTO,
    SIG_PPR_ESTCOSTOS,
    SIG_PPR_FAMILIAS_ESTCOSTOS,
    SIG_PPR_FINALIDAD_EJEC,
    SIG_PPR_FINALIDAD_EJEC_FASE,
    SIG_PPR_ITEMS_X_CATEGORIA,
    SIG_PPR_KIT_EJECUTORA,
    SIG_PPR_KIT_EJECUTORA_SEDE,
    SIG_PPR_KIT_EJECUTORA_meta,
    SIG_PPR_KIT_ITEMS,
    SIG_PPR_KIT_ITEMS_EST,
    SIG_PPR_KIT_ITEMS_EST_BK,
    SIG_PPR_KIT_PLANTILLA,
    SIG_PPR_MAE_COSTOS,
    SIG_PPR_META_MENSUAL,
    SIG_PPR_META_PROPUESTA_,
    SIG_PPR_META_PROP_MENSUAL,
    SIG_PPR_META_PROP_X_SEDE,
    SIG_PPR_META_X_SEDE,
    SIG_PPR_METFIS_X_SUBFIN,
    SIG_PPR_MICRORED,
    SIG_PPR_NIVEL,
    SIG_PPR_NIVEL_DESC,
    SIG_PPR_RED,
    SIG_PPR_SEDE,
    SIG_PPR_SUBFIN_X_CATEG,
    SIG_PPR_SUBFIN_X_ESTABLEC,
    SIG_PPR_TABLAS,
    SIG_PPR_TECHO_PRESUPUESTO,
    SIG_PPR_TIPO_ESTRATEGIA,
    SIG_PPR_TIPO_INSTITUCION,
    SIG_PPR_UGEL,
    SIG_PRE_SUB_CENTRO_FINALIDAD,
    SIG_PROCESO_COMITE,
    SIG_PROCESO_DE_SELECCION,
    SIG_PROCESO_ETAPAS,
    SIG_PROCESO_IMP_ARC,
    SIG_PROCESO_SECUENCIA,
    SIG_PROPUESTA_ARCHIVO,
    SIG_PROPUESTA_ARC_OBS,
    SIG_PROPUESTA_ITEM,
    SIG_PROPUESTA_ITEM_DETALLE,
    SIG_PROPUESTA_LOTE,
    SIG_PROPUESTA_LOTE_FACTOR,
    SIG_PROPUESTA_OBS,
    SIG_PROPUESTA_PROVEEDOR,
    SIG_PROPUESTA_REQUISITOS,
    SIG_PROYECTO_PNUD,
    SIG_PROY_CUADRO_ADQUISICION,
    SIG_PROY_DEPEN_META_CUADRO,
    SIG_PROY_DETALLE_BSERV_CUADRO,
    SIG_PROY_DETALLE_METAS_CUADRO,
    SIG_PROY_DOC_RENDIDO,
    SIG_PROY_PLANILLA_PASAJE,
    SIG_PROY_PLANILLA_VIATICO,
    SIG_PROY_PLAN_PAS_DESTINO,
    SIG_PROY_PLAN_PAS_PPTA,
    SIG_PROY_PLAN_PAS_RUTA,
    SIG_PROY_USUARIO_CCOSTO,
    SIG_PS_CUADRO_ADQ,
    SIG_REP_FASE_CIERRE,
    SIG_REQ_ENTRADA_ALMACEN,
    SIG_REQ_ENTRADA_ALMACEN_DET,
    SIG_SCRIPT_DETAIL_EJEC,
    SIG_SCRIPT_ERROR_EJEC,
    SIG_SCRIPT_HEADER_EJEC,
    SIG_SECUENCIA_MOV_ALMACEN,
    SIG_SECUENCIA_MOV_CONFOR_SERV,
    SIG_SEDE_DEPENDIENCIA,
    SIG_SEGUIMIENTO,
    SIG_SEGUIMIENTO_ESTADO,
    SIG_SEGUIMIENTO_SECUENCIA,
    SIG_SERIE_DOCUMENTOS,
    SIG_SOLICITUD_COTIZACION,
    SIG_SOLICITUD_COTIZACION_ITEM,
    SIG_SOLICITUD_ESPECIFICACIONES,
    SIG_SOLICITUD_GRUPO,
    SIG_SOLICITUD_GRUPO_DET,
    SIG_SOLICITUD_MODIFICACION,
    SIG_SOLICITUD_MODIFICACION_DET,
    SIG_SUB_FINALIDAD,
    SIG_TAREA_ESTRATEGICO,
    SIG_TASACION_ACTIVOS,
    SIG_TECHO_PRESUPUESTO,
    SIG_TES_ARQUEO_ACREDITACION,
    SIG_TES_ARQUEO_CAJA,
    SIG_TES_ARQUEO_CAJA_OBS,
    SIG_TES_CAJA,
    SIG_TES_CAJA_CHICA,
    SIG_TES_CAJA_CHICA_DGASTO,
    SIG_TES_CAJA_CHICA_LIQUIDACION,
    SIG_TES_CAJA_CHICA_LIQUIDA_EXT,
    SIG_TES_CAJA_CHICA_MOV,
    SIG_TES_CAJA_CHICA_MOVIL,
    SIG_TES_CAJA_CHICA_PEDIDO,
    SIG_TES_CAJA_CHICA_PEDIDO_DET,
    SIG_TES_CAJA_CHICA_PPTAL,
    SIG_TES_CAJA_CHICA_REND,
    SIG_TES_CAJA_CHICA_SALDO,
    SIG_TES_CAJA_CHICA_SALDO_PAO,
    SIG_TES_CAJA_DETALLE,
    SIG_TES_CONCEPTO_INGRESO,
    SIG_TES_INTERFASE_CAB,
    SIG_TES_INTERFASE_PPTO,
    SIG_TES_INTERFASE_SECU,
    SIG_TES_MAESTRO_DETRACCION,
    SIG_TES_PERSONA,
    SIG_TES_PLANTILLA_OBSERV,
    SIG_TES_RECIBO_INGRESO,
    SIG_TES_RECIBO_INGRESO_DET,
    SIG_TES_RECIBO_PROV,
    SIG_TES_RECIBO_PROV_DET,
    SIG_TES_REGISTRO_COMPRA_VENTA,
    SIG_TES_TARIFARIO_CAJA,
    SIG_TIPO_ALTA,
    SIG_TIPO_CAMBIO,
    SIG_TIPO_CAUSA_RES,
    SIG_TIPO_CERTIFICACION_HIST,
    SIG_TIPO_CONSTRUCCION,
    SIG_TIPO_CONSTRUC_INM,
    SIG_TIPO_CONTRATISTAS,
    SIG_TIPO_INMUEBLE,
    SIG_TIPO_INM_UNID_ACT,
    SIG_TIPO_MODALIDAD,
    SIG_TIPO_MOVIMIENTO,
    SIG_TIPO_MOVIMIENTO_INM,
    SIG_TIPO_REAJUSTE_PPTO,
    SIG_TIPO_REA_PPTO_DOC,
    SIG_TIPO_SALIDA,
    SIG_TIPO_UNIDAD_ACTIVO,
    SIG_TIPO_UNIDAD_ACTIVO_CUENTA,
    SIG_TMP_CARGA_CLASIFICADOR,
    SIG_TMP_CARGA_PIA_NF,
    SIG_TMP_CATALOGO_JUSTIF,
    SIG_TMP_CUADRO_NECESIDAD,
    SIG_TMP_CUADRO_NECESIDAD_DET,
    SIG_TMP_DETALLE_PED_DEST,
    SIG_TMP_METAS_PROP_X_CENTRO,
    SIG_TMP_META_PROPUESTA,
    SIG_TMP_MOVIM_ALMACEN_CTA,
    SIG_TMP_MP_CENTRO_RUBRO,
    SIG_TMP_PPR_META_MENSUAL,
    SIG_TMP_PPR_META_PROPUESTA,
    SIG_TMP_PPR_META_PROP_MENSUAL,
    SIG_TMP_PPR_METFIS_X_SUBFIN,
    SIG_TMP_PROCESO_DEST,
    SIG_TMP_PS_CARGA_PROPUESTA,
    SIG_TMP_PS_REP_CONS_EVAL,
    SIG_TMP_REP_INV_VALORIZADO,
    SIG_TMP_TECHO_PRESUPUESTO,
    SIG_TOPES_PROCESOS,
    SIG_TRANSACCION_ESTADO,
    SIG_TRANSPORTISTA,
    SIG_TRANS_ENVIO,
    SIG_TRANS_PROGRA,
    SIG_TRANS_PROGRAMACION_UE,
    SIG_TRANS_PROGRAMACION_UE2,
    SIG_TRANS_PROGRA_HOR,
    SIG_UBICAC_FISICA,
    SIG_UNIDAD_EQUIV_OSCE,
    SIG_UNIDAD_MEDIDA_EQUI,
    SIG_UNIDAD_MEDIDA_TIPO,
    SIG_USUARIO_ALMACEN,
    SIG_USUARIO_CAJA,
    SIG_USUARIO_CAJA_CHICA,
    SIG_USUARIO_CCOSTO,
    SIG_USUARIO_CCOSTO_BK_III,
    SIG_VALIDA_CADENA_FASE,
    SI_ALMACEN,
    SI_CENTRO_COSTO,
    SI_CONTRATISTA,
    SI_CONTRATO,
    SI_CONTRATO_DETA,
    SI_CONTRATO_DETA_TRX,
    SI_CONTRATO_TRX,
    SI_FINALIDAD_UM,
    SI_INVENTARIO_INM_TRX,
    SI_MARCA,
    SI_MOVIMIENTO_ALMACEN,
    SI_MOVIMIENTO_ALMACEN_DETA,
    SI_MOVIMIENTO_ALMACEN_DETA_TRX,
    SI_MOVIMIENTO_ALMACEN_TRX,
    SI_ORDEN,
    SI_ORDEN_DETA,
    SI_ORDEN_DETA_TRX,
    SI_ORDEN_TRX,
    SI_PATRIMONIO,
    SI_PATRIMONIO_TRX,
    SI_PEDIDO,
    SI_PEDIDO_DETA,
    SI_PEDIDO_DETA_TRX,
    SI_PEDIDO_TRX,
    SI_PERSONAL,
    SI_PPR_AMBITO,
    SI_PPR_ESTABLECIMIENTO,
    SI_PPR_KIT_FILTRO,
    SI_PPR_KIT_ITEMS,
    SI_PPR_KIT_ITEMS_BK,
    SI_PPR_SEDE,
    SI_PRG_META,
    SI_PRG_META_EJECUTORA,
    SI_PRG_META_EJECUTORA_TRX,
    SI_PRG_META_TRX,
    SI_PRG_TABLAS_TRANSFER,
    SI_PROGRAMACION,
    SI_PROGRAMACION_DETA,
    SI_PROGRAMACION_DETA_TRX,
    SI_PROGRAMACION_ID_KIT,
    SI_PROGRAMACION_ID_KIT_TRX,
    SI_PROGRAMACION_TRX,
    SI_REGISTRO_INM_TRX,
    SI_RESUMEN_TRX,
    SI_SEDE,
    SI_TRANS_ORDEN,
    SI_TRANS_PEDIDO,
    STOCKS_MINIMOS,
    SUB_PROGRAMA_NOMBRE_FASE,
    Sub_Programa,
    Sub_Programa_Nombre,
    TABLA_AUXILIAR,
    TA_CATALOGO,
    TA_CLASIFICADOR,
    TA_EJECUTORA,
    TA_ESTABLECIMIENTO,
    TA_PERSONAL,
    TA_PLAN_PRODUCCION,
    TA_PLAN_REQUERIMIENTO,
    TA_PRECIOS,
    TA_UNIDAD_MEDIDA,
    TCATALOGO_PROD,
    TCatalogo,
    TEMP_CCN_ORIGEN,
    TEMP_SIG_CUADRO_NECESIDAD,
    TEMP_SIG_CUADRO_NECESIDAD_DET,
    TIPO_A,
    TIPO_B,
    TIPO_B_A,
    TIPO_B_CUENTA,
    TIPO_B_ITEM,
    TIPO_DOCUMENTO,
    TMP_ACT_PROY_NOMBRE_FASE,
    TMP_CATALOGO_EQUIV_SBN,
    TMP_COMPONENTE_NOMBRE_FASE,
    TMP_CONSUCODE_SIG_PAAC_CONS,
    TMP_ESTRATEGIA_NACIONAL,
    TMP_ESTRATEGIA_NACIONAL_EJEC,
    TMP_ESTRATEGIA_NACIONAL_NOMBRE,
    TMP_FINALIDAD_FASE,
    TMP_FUNCION_FASE,
    TMP_KITS,
    TMP_ORDEN_X_CC,
    TMP_PARAMETROS_CRON_OT,
    TMP_PARAMETROS_PREPAO,
    TMP_PLIEGO_SIAF,
    TMP_PROGRAMA_NOMBRE_FASE,
    TMP_SEGUIMIENTO_PAAC_MODIF,
    TMP_SIG_CENTRO_COSTO,
    TMP_SIG_CN_TECHO_APROBADO,
    TMP_SIG_CN_TECHO_APROB_UPD,
    TMP_SIG_DETALLE_MOVIM_ALMACEN,
    TMP_SIG_FAMILIA_CUENTA_EJECUTORA,
    TMP_SIG_KARDEX_POR_ALMACEN,
    TMP_SIG_MAESTRO_ACTIVIDAD_POI,
    TMP_SIG_MOVIM_ALMACEN,
    TMP_SIG_PAAC_CENTRO_COSTO,
    TMP_SIG_PAAC_ITEM,
    TMP_SIG_PAAC_METAS,
    TMP_SIG_SECUENCIA_MOV_ALMACEN,
    TMP_SIG_SUB_FINALIDAD,
    TMP_SIG_TECHO_APROB_UPD_01,
    TMP_SIG_TECHO_APROB_UPD_02,
    TMP_SIG_TECHO_APROB_UPD_03,
    TMP_SIG_TECHO_APROB_UPD_04,
    TMP_SIG_TECHO_APROB_UPD_05,
    TMP_SIG_UBICAC_FISICA,
    TMP_SUBFIN_XLS,
    TMP_SUB_FINALIDAD,
    TMP_SUB_PROGRAMA_NOMBRE_FASE,
    TMP_UNIDAD_MEDIDA,
    TMP_VALIDA_PROG_ESTRATEGICO,
    TRANSFERENCIA_ORIGEN,
    VALIDA_CADENA_X_UNID_MEDIDA,
    VALIDA_CAD_X_UNID_MEDIDA_TMP,
    VALIDA_PROG_ESTRATEGICO,
    XXX_MIGRA_2016_MAESTRO,
    aaa,
    acumulado_encargo,
    cert_cab,
    cert_det,
    clase_bien_serv,
    codigo_general,
    codigo_general_det,
    dnpp_act_proy_nombre,
    dnpp_clasificador,
    dnpp_clasificador_equivalencia,
    dnpp_componente_nombre,
    dnpp_familia_clasificador,
    dnpp_finalidad,
    dnpp_funcion,
    dnpp_programa_nombre,
    dnpp_sub_programa_nombre,
    dtproperties,
    ejecutora,
    ejecutora_externa,
    elemento_ciiu,
    expediente_encargo,
    familia_bien_serv,
    familia_equivalencia,
    gestora,
    grupo_bien_serv,
    menus,
    meta,
    meta_encargo,
    metas_tmp,
    operacion,
    operacion_familia,
    pais,
    pbcatcol,
    pbcatedt,
    pbcatfmt,
    pbcattbl,
    pbcatvld,
    per,
    pliego,
    prov,
    sector,
    sig_act_proy_nombre,
    sig_cadena_equivalencia,
    sig_centro_costo_equivalencia,
    sig_centro_costo_tarea,
    sig_centro_costo_x_item,
    sig_componente_nombre,
    sig_conciliacion_sobrantes,
    sig_concurrencia_interfase_web,
    sig_contrato_descuento,
    sig_cua_nec_det_id,
    sig_cuadro_anual,
    sig_cuadro_necesidad_det_tmp,
    sig_cuadro_necesidad_tmp,
    sig_cuadro_x_centro,
    sig_cuenta_equivalencia,
    sig_detalle_cuadro_anual,
    sig_detalle_movim_temp,
    sig_ejecutora,
    sig_equivalencia_ue,
    sig_estrategia_parametro,
    sig_finalidad,
    sig_funcion,
    sig_int_consolidado,
    sig_int_techo_ppto,
    sig_int_techo_ppto_carga,
    sig_item_viatico_pasaje,
    sig_kardex_equivalencia_item,
    sig_maestro,
    sig_maestro_det_cadena,
    sig_maestro_det_numerico,
    sig_maestro_det_referencia,
    sig_maestro_parametro,
    sig_meta_prop,
    sig_metas_x_centro,
    sig_parametro_anio,
    sig_parametro_ejecutora,
    sig_pat_equi_cuenta,
    sig_personal,
    sig_personal_beneficiario,
    sig_planilla_concepto_clasif,
    sig_planilla_concepto_cpago,
    sig_pliego,
    sig_ppr_cua_nec_det_id,
    sig_ppr_espserv,
    sig_ppr_sube,
    sig_ppr_ups,
    sig_ppr_ups_sbas,
    sig_programa_nombre,
    sig_proy_cargo,
    sig_proy_ciudad,
    sig_proy_comi,
    sig_proy_comi_destino,
    sig_proy_comi_ruta,
    sig_proy_concepto_gasto,
    sig_proy_destino,
    sig_proy_destino_cargo,
    sig_proy_docu_pasaje,
    sig_proy_pedidos,
    sig_proy_ruta,
    sig_proy_subactividad,
    sig_proy_tipo_cargo,
    sig_sedes,
    sig_sub_programa_nombre,
    sig_subtipos_patrimonio,
    sig_tarea,
    sig_techo_presupuestal,
    sig_tes_registro_compras,
    sig_tipo_ActProy,
    sig_tipo_bienes,
    sig_tipo_generico,
    sig_tipo_patrimonio,
    sig_tipo_proyecto,
    sig_tmp_cat_justif,
    sig_tmp_cua_nec_det_id,
    sig_tmp_equivalencia_meta,
    sig_tmp_migracion_metas,
    sig_tmp_pedidos_rutas,
    sig_usuario_ejecutora,
    sig_valida_techo,
    t_act_proy,
    t_act_proy_nombre,
    t_componente,
    t_componente_nombre,
    t_finalidad,
    t_funcion,
    t_meta,
    t_programa,
    t_programa_nombre,
    t_sub_programa,
    t_sub_programa_nombre,
    temp_SIG_PPR_METFIS_X_SUBFIN,
    temp_sig_cua_nec_det_id,
    tmpPagosLotes,
    tmp_SIG_ASIGNACIONES,
    tmp_SIG_DETALLE_ACTIVOS,
    tmp_SIG_DETALLE_INVENT_FISICO,
    tmp_SIG_DET_MOVIM_PATRIMONIO,
    tmp_SIG_ESPECIF_TECNICA_ACTIVO,
    tmp_SIG_INVENTARIO_FISICO,
    tmp_cab,
    tmp_carga_kit,
    tmp_catalogo_procesar_items,
    tmp_categorias,
    tmp_det,
    tmp_ejecutora,
    tmp_familia,
    tmp_formulacion_detalle,
    tmp_item,
    tmp_item0,
    tmp_parametros_pao,
    tmp_per,
    tmp_ppr_PATRIMONIO,
    tmp_propuesta_fase,
    tmp_sig_personal,
    tmp_techo_cn_fase,
    tmp_techo_fase_2,
    tmp_techo_fase_3,
    tmp_techo_fase_4,
    tmp_techo_fase_5,
    tmp_techo_fase_6,
    tmp_techo_fase_7,
    tmp_techo_fase_8,
    ubigeo,
    unidad_medida,
    users,
    users_menu,
    users_opcion,
  };
}
module.exports = initModels;
module.exports.initModels = initModels;
module.exports.default = initModels;
